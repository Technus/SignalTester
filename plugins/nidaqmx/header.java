package nidaqmx;
import com.sun.jna.Callback;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.LongByReference;
import com.sun.jna.ptr.NativeLongByReference;
import com.sun.jna.ptr.PointerByReference;
import com.sun.jna.ptr.ShortByReference;
import com.sun.jna.win32.StdCallLibrary;
import java.nio.ByteBuffer;
import java.nio.DoubleBuffer;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
import java.nio.ShortBuffer;
/**
 * JNA Wrapper for library <b>NIDAQmx</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NIDAQmxLibrary implements StdCallLibrary {
	public static final String JNA_LIBRARY_NAME = "NIDAQmx";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(NIDAQmxLibrary.JNA_LIBRARY_NAME);
	static {
		Native.register(NIDAQmxLibrary.class, NIDAQmxLibrary.JNA_NATIVE_LIB);
	}
	public static final String DAQmx_Val_Switch_Topology_2503_2_Wire_24x1_Mux = (String)"2503/2-Wire 24x1 Mux";
	public static final int DAQmxErrorRouteNotSupportedByHW = (int)(-200368);
	public static final int DAQmx_AI_RVDT_SensitivityUnits = (int)0x219B;
	public static final int DAQmxWarningPxiResmanChassisParseError = (int)(26202);
	public static final int DAQmx_AnlgWin_RefTrig_DigSync_Enable = (int)0x2EEF;
	public static final int DAQmx_SampClk_Timebase_ActiveEdge = (int)0x18EC;
	public static final int DAQmx_PhysicalChan_TEDS_TemplateIDs = (int)0x228F;
	public static final int DAQmx_AI_Bridge_Table_PhysicalVals = (int)0x2F8F;
	public static final int DAQmx_Val_Resistance = (int)10278;
	public static final int DAQmx_AI_FilterDelayUnits = (int)0x3071;
	public static final int DAQmxErrorTristateNotEnoughLines = (int)(-201224);
	public static final int DAQmx_Val_Open = (int)10437;
	public static final int DAQmx_Val_Current = (int)10134;
	public static final int DAQmxErrorPALMemoryConfigurationFault = (int)(-50350);
	public static final int DAQmxErrorPortDoesNotSupportHandshakingDataIO = (int)(-200117);
	public static final int DAQmx_Val_ExtControlled = (int)10326;
	public static final int DAQmxErrorSMIOPauseTriggersNotSupportedWithChannelExpansion = (int)(-201019);
	public static final int DAQmxErrorRequiredDependencyNotFound = (int)(-201235);
	public static final int DAQmxErrorBufferWithOnDemandSampTiming = (int)(-200217);
	public static final int DAQmx_Val_Save_AllowInteractiveDeletion = (int)(1 << 2);
	public static final int DAQmxErrorCouldNotReserveRequestedTrigLine_Routing = (int)(-89126);
	public static final int DAQmx_CI_Encoder_AInput_DigFltr_MinPulseWidth = (int)0x21FC;
	public static final int DAQmxWarningInsufficientBuffer = (int)(26113);
	public static final int DAQmx_CI_PulseWidth_LogicLvlBehavior = (int)0x30AA;
	public static final int DAQmxWarningFileDeleteFault = (int)(26107);
	public static final int DAQmxErrorAcqStoppedToPreventIntermediateBufferOverflow = (int)(-200283);
	public static final int DAQmxWarningPALMemoryAlignmentFault = (int)(50351);
	public static final int DAQmx_AI_Lowpass_SwitchCap_ClkSrc = (int)0x1884;
	public static final int DAQmxErrorIPAddressAlreadyInUse = (int)(-201370);
	public static final int DAQmx_DigPattern_StartTrig_Pattern = (int)0x2186;
	public static final int DAQmxErrorInsufficientDataForCalibration = (int)(-201149);
	public static final int DAQmxWarningCounter1DMADuringAOConflict = (int)(200009);
	public static final int DAQmxErrorPartialUseOfPhysicalLinesWithinPortNotSupported653x = (int)(-200898);
	public static final int DAQmxErrorRoutingSrcTermPXIStarXNotInStarTriggerSlot_Routing = (int)(-89158);
	public static final int DAQmxErrorRoutingDestTermPXIChassisNotIdentified = (int)(-200699);
	public static final int DAQmx_AO_PowerAmp_ChannelEnable = (int)0x3062;
	public static final String DAQmx_Val_Switch_Topology_2567_Independent = (String)"2567/Independent";
	public static final int DAQmx_AI_TEDS_Units = (int)0x21E0;
	public static final int DAQmx_AnlgWin_PauseTrig_Btm = (int)0x1375;
	public static final int DAQmx_AI_DigFltr_Order = (int)0x30C0;
	public static final int DAQmx_AI_Bridge_PhysicalUnits = (int)0x2F88;
	public static final int DAQmxErrorMemMapOnlyForProgIOXfer = (int)(-200169);
	public static final int DAQmx_Scale_Map_PreScaledMax = (int)0x1231;
	public static final int DAQmxErrorStartTrigOutputTermNotSupportedGivenTimingType = (int)(-200911);
	public static final int DAQmxErrorCantSaveChanWithoutReplace = (int)(-200483);
	public static final int DAQmx_Exported_HshkEvent_Pulse_Polarity = (int)0x22C0;
	public static final int DAQmx_Val_Default = (int)-1;
	public static final int DAQmxErrorNoChansSpecdForPatternSource = (int)(-200927);
	public static final int DAQmxErrorCalMeasuredDataSizeVsActualDataSizeMismatch = (int)(-201485);
	public static final int DAQmxErrorMismatchedElecPhysValues = (int)(-201335);
	public static final int DAQmxErrorIEPEWithDCNotAllowed = (int)(-201172);
	public static final int DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthByAnotherTask1PerDev = (int)(-200806);
	public static final int DAQmx_AI_Bridge_TwoPointLin_First_PhysicalVal = (int)0x2F8B;
	public static final int DAQmxErrorReadAllAvailableDataWithoutBuffer = (int)(-200340);
	public static final int DAQmxWarningOutputDataTransferConditionNotSupported = (int)(209803);
	public static final int DAQmx_Val_Task_Start = (int)0;
	public static final String DAQmx_Val_Switch_Topology_1129_2_Wire_16x16_Matrix = (String)"1129/2-Wire 16x16 Matrix";
	public static final int DAQmxErrorCannotGetPropertyWhenTaskNotCommittedOrRunning = (int)(-200556);
	public static final int DAQmxErrorInvalidSignalModifier_Routing = (int)(-89150);
	public static final int DAQmx_CI_TwoEdgeSep_FirstLogicLvlBehavior = (int)0x30AC;
	public static final String DAQmx_Val_Switch_Topology_2548_4_SPDT = (String)"2548/4-SPDT";
	public static final int DAQmxErrorStorageAlteredPriorToSave = (int)(-201232);
	public static final String DAQmx_Val_Switch_Topology_2593_Dual_4x1_Terminated_Mux = (String)"2593/Dual 4x1 Terminated Mux";
	public static final int DAQmxErrorPowerupStateNotSpecdForEntirePort = (int)(-200652);
	public static final int DAQmx_Val_BuiltIn = (int)10200;
	public static final int DAQmx_Read_WaitMode = (int)0x2232;
	public static final int DAQmxErrorAnalogTrigChanNotFirstInScanList = (int)(-200131);
	public static final int DAQmx_Val_J_Type_TC = (int)10072;
	public static final int DAQmx_Read_Offset = (int)0x190B;
	public static final int DAQmx_DigEdge_RefTrig_DigFltr_Enable = (int)0x2ED7;
	public static final int DAQmxErrorCDAQSyncMasterClockNotPresent = (int)(-201468);
	public static final int DAQmxErrorSampClkRateInvalid = (int)(-201093);
	public static final int DAQmx_Dev_AO_SampClkSupported = (int)0x2996;
	public static final int DAQmx_Val_PXI = (int)12583;
	public static final int DAQmxWarningSampValCoercedToMax = (int)(200021);
	public static final int DAQmx_DigEdge_ArmStartTrig_Edge = (int)0x1415;
	public static final int DAQmxWarningPxiResmanControllerTypeInvalid = (int)(26301);
	public static final int DAQmx_Val_Task_Abort = (int)6;
	public static final int DAQmx_Val_Source = (int)10439;
	public static final int DAQmxErrorLinesUsedForHandshakingControlNotForStaticInput = (int)(-200727);
	public static final int DAQmxWarningAlreadyInitialized = (int)(26850);
	public static final int DAQmx_Write_DigitalLines_BytesPerChan = (int)0x217F;
	public static final int DAQmx_Val_ChanForAllLines = (int)1;
	public static final int DAQmxErrorLineNumIncompatibleWithVideoSignalFormat = (int)(-200424);
	public static final int DAQmx_Val_Freq_Voltage = (int)10181;
	public static final int DAQmx_AI_Velocity_IEPESensor_SensitivityUnits = (int)0x2FF7;
	public static final String DAQmx_Val_Switch_Topology_2530_Independent = (String)"2530/Independent";
	public static final int DAQmx_Val_IRIGB = (int)10070;
	public static final int DAQmxErrorInvalidNumberSamplesToRead = (int)(-200096);
	public static final int DAQmx_Exported_SampClk_OutputBehavior = (int)0x186B;
	public static final int DAQmxErrorDigitalWaveformExpected = (int)(-200094);
	public static final int DAQmx_Val_DoNotOverwriteUnreadSamps = (int)10159;
	public static final int DAQmxErrorRoutingDestTermPXIDStarInNonDStarTriggerSlot_Routing = (int)(-89164);
	public static final int DAQmxWarningPXIe5663E_IncorrectlyConfigured = (int)(200065);
	public static final int DAQmx_DO_OutputDriveType = (int)0x1137;
	public static final String DAQmx_Val_Switch_Topology_2570_20_DPDT = (String)"2570/20-DPDT";
	public static final int DAQmxErrorSampPerChanNotMultipleOfIncr = (int)(-200344);
	public static final int DAQmxErrorLabVIEWVersionDoesntSupportDAQmxEvents = (int)(-201000);
	public static final int DAQmx_AnlgWin_PauseTrig_DigFltr_MinPulseWidth = (int)0x2EF6;
	public static final int DAQmx_AnlgWin_PauseTrig_Src = (int)0x1373;
	public static final int DAQmx_AI_RosetteStrainGage_StrainChans = (int)0x2FFB;
	public static final int DAQmx_CI_CountEdges_CountDir_DigFltr_Enable = (int)0x21F1;
	public static final int DAQmx_CO_RdyForNewVal = (int)0x22FF;
	public static final int DAQmxErrorInconsistentDigitalFilteringAcrossTerminals = (int)(-201510);
	public static final int DAQmxErrorTooManyChansGivenTimingType = (int)(-201101);
	public static final int DAQmxWarningPXIe5667_5603_IncorrectlyConfigured = (int)(200068);
	public static final int DAQmx_Dev_CO_TrigUsage = (int)0x298B;
	public static final int DAQmxErrorDAQmxVersionNotSupported = (int)(-201076);
	public static final int DAQmxWarningRetryCall = (int)(26853);
	public static final int DAQmxWarningPXIe5667_5605_IncorrectlyConfigured = (int)(200071);
	public static final int DAQmx_AO_OutputImpedance = (int)0x1490;
	public static final int DAQmx_Write_Offset = (int)0x190D;
	public static final int DAQmx_Write_OvertemperatureChansExist = (int)0x2A84;
	public static final int DAQmx_CI_Pulse_Time_StartEdge = (int)0x2F0D;
	public static final int DAQmx_Val_SingleCycle = (int)14613;
	public static final int DAQmxErrorOnboardRegenExceedsChannelLimit = (int)(-209814);
	public static final int DAQmx_Val_HighSpeed = (int)14712;
	public static final int DAQmx_Val_80MHzTimebase = (int)14636;
	public static final int DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove = (int)(-200703);
	public static final int DAQmxErrorParsingTEDSData = (int)(-200753);
	public static final int DAQmxErrorAOEveryNSampsEventIntervalNotMultipleOf2 = (int)(-200917);
	public static final int DAQmxErrorRoutingSrcTermPXIDStarInNonDStarTriggerSlot_Routing = (int)(-89165);
	public static final int DAQmxErrorVCXODCMBecameUnlocked = (int)(-201507);
	public static final int DAQmxErrorInvalidTimingSrcDueToSampTimingType = (int)(-200785);
	public static final int DAQmxErrorCantSaveChanWithPolyCalScaleAndAllowInteractiveEdit = (int)(-200977);
	public static final int DAQmxErrorAOMinMaxNotSupportedGivenDACRangeAndOffsetVal = (int)(-200871);
	public static final String DAQmx_Val_Switch_Topology_1130_2_Wire_128x1_Mux = (String)"1130/2-Wire 128x1 Mux";
	public static final int DAQmxErrorEveryNSampsEventIntervalZeroNotSupported = (int)(-200880);
	public static final int DAQmx_CO_CtrTimebaseRate = (int)0x18C2;
	public static final int DAQmx_Dev_AI_SupportedMeasTypes = (int)0x2FD2;
	public static final int DAQmx_ChangeDetect_DI_Tristate = (int)0x2EFA;
	public static final String DAQmx_Val_Switch_Topology_2598_Dual_Transfer = (String)"2598/Dual Transfer";
	public static final int DAQmxErrorPALPhysicalBufferFull = (int)(-50409);
	public static final int DAQmxErrorPALBadReadOffset = (int)(-50010);
	public static final int DAQmxErrorTopologyNotSupportedByCfgTermBlock = (int)(-200256);
	public static final int DAQmxErrorResourceNotInPool_Routing = (int)(-88708);
	public static final int DAQmxErrorExtSampClkSrcNotSpecified = (int)(-200303);
	public static final int DAQmxErrorRoutingDestTermPXIStarXNotInSlot2 = (int)(-200705);
	public static final int DAQmx_Dev_AnlgTrigSupported = (int)0x2984;
	public static final int DAQmx_Scale_Map_PreScaledMin = (int)0x1232;
	public static final int DAQmxWarningPossiblyInvalidCTRSampsInFiniteDMAAcq = (int)(200028);
	public static final int DAQmx_Write_OpenCurrentLoopChans = (int)0x29EB;
	public static final int DAQmxErrorCVIFunctionNotFoundInDAQmxDLL = (int)(-200398);
	public static final int DAQmxErrorResourcesInUseForExportSignalPolarity = (int)(-200367);
	public static final int DAQmxErrorSampClkDCMBecameUnlocked = (int)(-200240);
	public static final int DAQmxErrorReversePowerProtectionActivated = (int)(-200617);
	public static final int DAQmxErrorAttemptToEnableLineNotPreviouslyDisabled = (int)(-200497);
	public static final String DAQmx_Val_Switch_Topology_2527_Independent = (String)"2527/Independent";
	public static final int DAQmxErrorActiveDevNotSupportedWithChanExpansion = (int)(-201094);
	public static final int DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseRate = (int)0x2208;
	public static final int DAQmxErrorCanNotPerformOpWhileTaskRunning = (int)(-200479);
	public static final int DAQmx_AnlgEdge_StartTrig_Coupling = (int)0x2233;
	public static final int DAQmxErrorNoMatchForSpecdDevice = (int)(-201042);
	public static final int DAQmx_DigEdge_RefTrig_Edge = (int)0x1430;
	public static final int DAQmx_Watchdog_HasExpired = (int)0x21A8;
	public static final int DAQmxErrorMustSpecifyExpirationStateForAllLinesInRange = (int)(-201481);
	public static final int DAQmxErrorSpecifiedAccessoryChannelsNotPresentOnDevice = (int)(-201412);
	public static final int DAQmx_CI_Freq_Div = (int)0x0147;
	public static final int DAQmxErrorDigitalTerminalSpecifiedMoreThanOnce = (int)(-200014);
	public static final int DAQmx_Exported_ChangeDetectEvent_Pulse_Polarity = (int)0x2303;
	public static final int DAQmxErrorInvalidCarrierSlotNumberSpecd = (int)(-201360);
	public static final int DAQmxErrorSelfCalibrationDataTooNewForSoftware = (int)(-201144);
	public static final int DAQmx_Val_SameAsMasterTimebase = (int)10282;
	public static final int DAQmxErrorPALFileOpenFault = (int)(-50204);
	public static final int DAQmxErrorFREQOUTCannotProduceDesiredFrequency3 = (int)(-201443);
	public static final int DAQmxErrorFREQOUTCannotProduceDesiredFrequency2 = (int)(-200736);
	public static final int DAQmxErrorHWTimedSinglePointNotSupportedAI = (int)(-200821);
	public static final int DAQmx_PersistedScale_AllowInteractiveDeletion = (int)0x22D6;
	public static final int DAQmx_CI_Velocity_AngEncoder_PulsesPerRev = (int)0x30D9;
	public static final int DAQmxErrorPALFeatureDisabled = (int)(-50265);
	public static final int DAQmx_CI_PulseWidth_Term = (int)0x18AA;
	public static final int DAQmxErrorSCCInvalidSecondStage = (int)(-201326);
	public static final int DAQmxErrorPALBadReadMode = (int)(-50009);
	public static final int DAQmxErrorChanIndexInvalid = (int)(-200606);
	public static final int DAQmx_Exported_StartTrig_OutputTerm = (int)0x0584;
	public static final int DAQmx_SyncClk_Interval = (int)0x2F7E;
	public static final int DAQmxErrorPxiResmanSystemDescriptionParseError = (int)(-26401);
	public static final int DAQmx_AI_Freq_Hyst = (int)0x0814;
	public static final int DAQmxErrorFileAlreadyOpenedForWrite = (int)(-201311);
	public static final int DAQmx_AnlgEdge_RefTrig_DigFltr_TimebaseSrc = (int)0x2EE8;
	public static final int DAQmxErrorCantResetExpiredWatchdog = (int)(-200644);
	public static final int DAQmxErrorStreamDCMBecameUnlocked = (int)(-200314);
	public static final int DAQmx_PhysicalChan_DI_PortWidth = (int)0x29A4;
	public static final int DAQmx_AI_EnhancedAliasRejectionEnable = (int)0x2294;
	public static final int DAQmxWarningPxiResmanInvalidConfiguration = (int)(26101);
	public static final int DAQmx_Val_3Wire = (int)3;
	public static final int DAQmx_Val_PathStatus_AlreadyExists = (int)10432;
	public static final int DAQmx_CI_DutyCycle_TermCfg = (int)0x30A1;
	public static final int DAQmx_Read_OpenChans = (int)0x3101;
	public static final int DAQmxErrorInversionNotSupportedByHW_Routing = (int)(-89133);
	public static final int DAQmxErrorPropertyValueInChannelExpansionContextInvalid = (int)(-201117);
	public static final int DAQmxWarningSampValCoercedToMin = (int)(200022);
	public static final int DAQmxWarningPxiResmanSystemNotInitialized = (int)(26102);
	public static final int DAQmxErrorInvalidExcitValForScaling = (int)(-200318);
	public static final int DAQmx_Val_Pascals = (int)10081;
	public static final int DAQmxErrorNoWatchdogOutputOnPortReservedForInput = (int)(-200667);
	public static final String DAQmx_Val_Switch_Topology_2512_Independent = (String)"2512/Independent";
	public static final String DAQmx_Val_Switch_Topology_2501_2_Wire_4x6_Matrix = (String)"2501/2-Wire 4x6 Matrix";
	public static final int DAQmx_Exported_RdyForXferEvent_DeassertCond = (int)0x2963;
	public static final int DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseRate = (int)0x2217;
	public static final int DAQmx_Task_NumChans = (int)0x2181;
	public static final int DAQmx_Val_ClearExpiration = (int)1;
	public static final int DAQmxErrorInvalidCfgCalAdjustMainPathPostAmpGainAndOffset = (int)(-200512);
	public static final int DAQmxErrorTableScaleScaledValsNotSpecd = (int)(-200348);
	public static final int DAQmx_DO_Overcurrent_Limit = (int)0x2A85;
	public static final int DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandHWTimedSglPt = (int)(-200803);
	public static final int DAQmx_Val_PulseFrequency = (int)15864;
	public static final int DAQmxErrorMemMappedOnDemandNotSupported = (int)(-201351);
	public static final int DAQmxErrorDevImportFailedDeviceNotSupportedOnDestination = (int)(-201169);
	public static final int DAQmx_Dev_DI_Ports = (int)0x2321;
	public static final int DAQmxErrorMemoryMappedHardwareTimedNonBufferedUnsupported = (int)(-201331);
	public static final int DAQmx_AnlgEdge_RefTrig_Coupling = (int)0x2235;
	public static final int DAQmxErrorTrigLineNotFoundSingleDevRoute = (int)(-200574);
	public static final int DAQmx_AnlgLvl_PauseTrig_Lvl = (int)0x1369;
	public static final int DAQmxWarningPALComponentAlreadyLoaded = (int)(50260);
	public static final int DAQmx_CI_CountEdges_CountReset_DigFltr_MinPulseWidth = (int)0x2FB4;
	public static final int DAQmx_SwitchChan_Bandwidth = (int)0x0640;
	public static final int DAQmx_AO_DAC_Ref_AllowConnToGnd = (int)0x1830;
	public static final int DAQmx_CI_DutyCycle_StartingEdge = (int)0x3092;
	public static final int DAQmxErrorSamplesNoLongerWriteable = (int)(-200289);
	public static final int DAQmxErrorScriptNameSameAsWfmName = (int)(-200633);
	public static final int DAQmxErrorHWTimedSinglePointAOAndDataXferNotProgIO = (int)(-200769);
	public static final int DAQmxErrorChangeDetectionIncompatibleWithProgrammedIO = (int)(-201225);
	public static final int DAQmxWarningPALComponentNotUnloadable = (int)(50262);
	public static final int DAQmxErrorPALUSBTransactionError = (int)(-50808);
	public static final int DAQmxErrorTrigLineNotFound = (int)(-200224);
	public static final int DAQmxErrorMultipleWritesBetweenSampClks = (int)(-200748);
	public static final int DAQmxErrorCVIFailedToLoadDAQmxDLL = (int)(-200397);
	public static final int DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2_Routing = (int)(-89149);
	public static final int DAQmxErrorPALBusError = (int)(-50413);
	public static final int DAQmxErrorDisconnectPathNotSameAsExistingPath = (int)(-200190);
	public static final String DAQmx_Val_Switch_Topology_2569_100_SPST = (String)"2569/100-SPST";
	public static final int DAQmxErrorPALResourceReserved = (int)(-50103);
	public static final int DAQmxErrorResourcesInUseForInversion = (int)(-200365);
	public static final int DAQmxErrorValueFoundInInvalidColumn = (int)(-201066);
	public static final int DAQmxErrorChansForCalAdjustMustPerformSetContext = (int)(-201500);
	public static final int DAQmx_CI_Freq_EnableAveraging = (int)0x2ED0;
	public static final int DAQmx_AI_Accel_Sensitivity = (int)0x0692;
	public static final int DAQmxErrorDevOnlySupportsSampClkTimingAI = (int)(-200757);
	public static final int DAQmx_AI_RawSampSize = (int)0x22DA;
	public static final int DAQmxErrorTimebaseCalFailedToConverge = (int)(-200722);
	public static final int DAQmxErrorInvalidWirelessCountryCode = (int)(-201257);
	public static final int DAQmx_Val_SynchronousEventCallbacks = (int)(1 << 0);
	public static final int DAQmxErrorDevsWithoutCommonSyncStrategy = (int)(-201425);
	public static final int DAQmxErrorDevOnlySupportsSampClkTimingAO = (int)(-200758);
	public static final int DAQmx_AO_Voltage_Units = (int)0x1184;
	public static final int DAQmx_CO_CtrTimebase_DigFltr_TimebaseRate = (int)0x2279;
	public static final int DAQmxErrorHWTimedSinglePointAndDataXferNotProgIO = (int)(-200996);
	public static final int DAQmxErrorCabledModuleCannotRouteConvClk = (int)(-200319);
	public static final int DAQmxErrorWaitForNextSampClkDetected3OrMoreSampClks = (int)(-209803);
	public static final int DAQmxErrorPALComponentInitializationFault = (int)(-50258);
	public static final int DAQmx_CI_Prescaler = (int)0x2239;
	public static final int DAQmx_AnlgWin_StartTrig_Top = (int)0x1403;
	public static final int DAQmxErrorCouldNotReserveLinesForSCXIControl = (int)(-200158);
	public static final int DAQmxWarningPALBadPointer = (int)(50004);
	public static final int DAQmx_Exported_RdyForStartEvent_OutputTerm = (int)0x1609;
	public static final int DAQmxErrorFailedToAcquireCalData = (int)(-200697);
	public static final int DAQmxErrorInvalidSyntaxForPhysicalChannelRange = (int)(-200086);
	public static final int DAQmx_AI_SoundPressure_dBRef = (int)0x29B1;
	public static final int DAQmx_Val_ALowBLow = (int)10043;
	public static final int DAQmxWarningPALBadReadMode = (int)(50009);
	public static final int DAQmxErrorRouteSrcAndDestSame_Routing = (int)(-89131);
	public static final int DAQmxErrorRosetteStrainChanNamesNeeded = (int)(-201445);
	public static final int DAQmxErrorCannotProduceMinPulseWidthGivenPropertyValues = (int)(-200776);
	public static final int DAQmxErrorInversionNotSupportedByHW = (int)(-200363);
	public static final int DAQmxErrorTrigmanConflictingRoute = (int)(-26008);
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_4x128_Matrix = (String)"2532/1-Wire 4x128 Matrix";
	public static final int DAQmxErrorZeroSlopeLinearScale = (int)(-200409);
	public static final int DAQmx_Exported_20MHzTimebase_OutputTerm = (int)0x1657;
	public static final int DAQmxErrorPortConfiguredForInput = (int)(-200120);
	public static final int DAQmx_Dev_AO_Gains = (int)0x299D;
	public static final int DAQmxErrorPALDispatcherAlreadyExported = (int)(-50500);
	public static final int DAQmxErrorWaveformNameTooLong = (int)(-200534);
	public static final int DAQmxErrorSampClockCannotBeExportedFromExternalSampClockSrc = (int)(-201164);
	public static final String DAQmx_Val_Switch_Topology_2727_Independent = (String)"2727/Independent";
	public static final int DAQmx_AI_Gain = (int)0x1818;
	public static final int DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseRate = (int)0x2F02;
	public static final int DAQmxWarningLowpassFilterSettlingTimeExceedsDriverTimeBetween2ADCConversions = (int)(200039);
	public static final int DAQmx_AI_DevScalingCoeff = (int)0x1930;
	public static final int DAQmxErrorReadWaitNextSampClkWaitMismatchOne = (int)(-200988);
	public static final int DAQmx_CI_Velocity_Encoder_BInputTermCfg = (int)0x30E5;
	public static final int DAQmx_DigEdge_RefTrig_DigFltr_MinPulseWidth = (int)0x2ED8;
	public static final int DAQmxErrorInvalidTerm = (int)(-200254);
	public static final int DAQmx_CI_TwoEdgeSep_FirstEdge = (int)0x0833;
	public static final int DAQmxErrorRefTrigDigPatternSizeDoesNotMatchSourceSize = (int)(-200895);
	public static final int DAQmxErrorMaxSoundPressureAndMicSensitivityNotSupportedByDev = (int)(-200860);
	public static final String DAQmx_Val_Switch_Topology_2565_16_SPST = (String)"2565/16-SPST";
	public static final int DAQmxErrorDeviceNameContainsSpacesOrPunctuation_Routing = (int)(-88720);
	public static final int DAQmxErrorMStudioOperationDoesNotSupportDeviceContext = (int)(-201118);
	public static final int DAQmx_Exported_HshkEvent_Interlocked_AssertedLvl = (int)0x22BD;
	public static final int DAQmx_CI_TwoEdgeSep_Second_DigFltr_Enable = (int)0x2214;
	public static final String DAQmx_Val_Switch_Topology_2570_40_SPDT = (String)"2570/40-SPDT";
	public static final int DAQmx_CI_Freq_DigSync_Enable = (int)0x21EB;
	public static final int DAQmxErrorCantGetPropertyTaskNotRunning = (int)(-200973);
	public static final int DAQmx_DigPattern_PauseTrig_Src = (int)0x216F;
	public static final int DAQmxErrorIfElseBlockNotAllowedInBreakBlock = (int)(-201218);
	public static final int DAQmx_Val_Ohms = (int)10384;
	public static final int DAQmxErrorCounterInputPauseTriggerAndSampleClockInvalid = (int)(-200145);
	public static final int DAQmxErrorPhysicalChanNotSupportedGivenSampTimingType653x = (int)(-200897);
	public static final int DAQmx_Val_LeavingWin = (int)10208;
	public static final int DAQmx_CI_TwoEdgeSep_Units = (int)0x18AC;
	public static final int DAQmxErrorMinTempForThermocoupleTypeOutsideAccuracyForPolyScaling = (int)(-201171);
	public static final int DAQmxErrorDACAllowConnToGndNotSupportedByDevWhenRefSrcExt = (int)(-200974);
	public static final int FALSE = (int)(0);
	public static final int DAQmx_AI_Thrmcpl_CJCChan = (int)0x1034;
	public static final String DAQmx_Val_Switch_Topology_1130_Independent = (String)"1130/Independent";
	public static final int DAQmxErrorSuppliedVoltageDataOutsideSpecifiedRange = (int)(-200075);
	public static final int DAQmxWarningUnspecifiedError = (int)(26801);
	public static final int DAQmxErrorMoreThanOneSyncPulseDetected = (int)(-201428);
	public static final int DAQmxErrorCounterMaxMinRangeTime = (int)(-200138);
	public static final int DAQmx_Dev_IsSimulated = (int)0x22CA;
	public static final int DAQmxWarningPXIe5665_5606_IncorrectlyConfigured = (int)(200073);
	public static final int DAQmx_Val_mVoltsPerVoltPerMillimeter = (int)12506;
	public static final String DAQmx_Val_Switch_Topology_2576_2_Wire_Quad_16x1_Mux = (String)"2576/2-Wire Quad 16x1 Mux";
	public static final int DAQmxErrorRegisterNotWritable = (int)(-200393);
	public static final int DAQmxErrorResourcesInUseForRouteInTask_Routing = (int)(-89138);
	public static final int DAQmx_AI_Voltage_dBRef = (int)0x29B0;
	public static final int DAQmxErrorSampRateTooHigh = (int)(-200332);
	public static final int DAQmx_CI_Velocity_Encoder_DecodingType = (int)0x30DC;
	public static final int DAQmxErrorInvalidNumOfPhysChansForDeltaRosette = (int)(-201447);
	public static final int DAQmx_Dev_AO_MinRate = (int)0x2998;
	public static final int DAQmxErrorHWTimedAndDataXferPIO = (int)(-201026);
	public static final int DAQmxErrorChansAlreadyConnected = (int)(-200184);
	public static final int DAQmx_AI_Freq_Units = (int)0x0806;
	public static final int DAQmx_Val_Switches = (int)14650;
	public static final int DAQmx_CI_CtrTimebase_DigSync_Enable = (int)0x2275;
	public static final String DAQmx_Val_Switch_Topology_2546_Dual_4x1_Mux = (String)"2546/Dual 4x1 Mux";
	public static final int DAQmxErrorPALMessageUnderflow = (int)(-50651);
	public static final int DAQmxErrorConfigFailedBecauseWatchdogExpired = (int)(-201434);
	public static final int DAQmx_Read_NumChans = (int)0x217B;
	public static final int DAQmxErrorFastExternalTimebaseNotSupportedForDevice = (int)(-201339);
	public static final int DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseRate = (int)0x2F19;
	public static final int DAQmx_RealTime_NumOfWarmupIters = (int)0x22ED;
	public static final int DAQmxErrorWriteNumChansMismatch = (int)(-200524);
	public static final int DAQmx_AI_Dither_Enable = (int)0x0068;
	public static final int DAQmx_AO_CustomScaleName = (int)0x1188;
	public static final int DAQmxErrorPALBadThreadMultitask = (int)(-50019);
	public static final int DAQmx_AnlgEdge_RefTrig_DigSync_Enable = (int)0x2EEA;
	public static final int DAQmxErrorNumSampsToWaitNotMultipleOfAlignmentQuantumInScript = (int)(-200849);
	public static final int DAQmxErrorPALLogicalBufferEmpty = (int)(-50406);
	public static final int DAQmxErrorCAPICannotRegisterSyncEventsFromMultipleThreads = (int)(-200990);
	public static final int DAQmxErrorNoCommonTrigLineForRoute_Routing = (int)(-89139);
	public static final int DAQmxErrorInvalidTrigTypeSendsSWTrig = (int)(-200372);
	public static final int DAQmxErrorImmedTrigDuringRISMode = (int)(-200418);
	public static final int DAQmx_Exported_SampClk_OutputTerm = (int)0x1663;
	public static final int DAQmxErrorPXISystemDescriptionParseError = (int)(-26809);
	public static final int DAQmx_CI_Freq_DigFltr_TimebaseRate = (int)0x21EA;
	public static final int DAQmx_CI_CountEdges_ActiveEdge = (int)0x0697;
	public static final int DAQmx_PhysicalChan_CI_SupportedMeasTypes = (int)0x2FDA;
	public static final int DAQmxErrorPlus12VFuseBlown = (int)(-201286);
	public static final int DAQmxWarningSelfCalCRCNotCorrect = (int)(200047);
	public static final int DAQmxErrorAIConvRateTooHigh = (int)(-200335);
	public static final int DAQmxErrorCounterTimebaseRateNotSpecified = (int)(-200143);
	public static final String DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_8x16_Matrix = (String)"1129/2-Wire Dual 8x16 Matrix";
	public static final int DAQmx_Dev_CO_MaxSize = (int)0x29A1;
	public static final int DAQmx_DigEdge_StartTrig_DigFltr_TimebaseSrc = (int)0x2225;
	public static final int DAQmx_AI_Thrmcpl_LeadOffsetVoltage = (int)0x2FB8;
	public static final int DAQmxErrorAOMinMaxNotInDACRange = (int)(-200759);
	public static final int DAQmx_Dev_TEDS_HWTEDSSupported = (int)0x2FD6;
	public static final int DAQmxErrorMarkerPosInvalidForLoopInScript = (int)(-200248);
	public static final int DAQmxWarningPALOSFault = (int)(50202);
	public static final int DAQmxErrorZeroBasedChanIndexInvalid = (int)(-200612);
	public static final int DAQmxErrorCppDotNetAPINegativeBufferSize = (int)(-200591);
	public static final int DAQmxErrorRoutingDestTermPXIStarInStarTriggerSlot_Routing = (int)(-89154);
	public static final int DAQmxErrorAOBufferSizeZeroForSampClkTimingType = (int)(-200859);
	public static final int DAQmx_Val_CompactDAQ = (int)14637;
	public static final String DAQmx_Val_Switch_Topology_2591_4x1_Mux = (String)"2591/4x1 Mux";
	public static final int DAQmx_PhysicalChan_DI_SampModes = (int)0x2FE0;
	public static final int DAQmx_Val_DutyCycle = (int)16070;
	public static final int DAQmx_WatchdogExpirTrig_TrigOnNetworkConnLoss = (int)0x305D;
	public static final int DAQmxWarningTrigmanInvalidParameter = (int)(26002);
	public static final int DAQmxErrorPALDiskFull = (int)(-50203);
	public static final int DAQmxErrorMultDevsMultPhysChans = (int)(-201471);
	public static final int DAQmxErrorStartTrigDigPatternChanNotInTask = (int)(-200887);
	public static final int DAQmx_AI_Lowpass_SwitchCap_ExtClkDiv = (int)0x1886;
	public static final int DAQmx_CI_Encoder_ZInputLogicLvlBehavior = (int)0x30A8;
	public static final int DAQmx_Val_QuarterBridgeI = (int)10271;
	public static final int DAQmx_SwitchChan_MaxDCSwitchCurrent = (int)0x0645;
	public static final int DAQmx_AnlgEdge_RefTrig_Slope = (int)0x1423;
	public static final int DAQmx_CI_SemiPeriod_StartingEdge = (int)0x22FE;
	public static final int DAQmxErrorNetworkSerialNumberMismatch = (int)(-201254);
	public static final int DAQmxErrorOnlyUseStartTrigSrcPrptyWithDevDataLines = (int)(-201137);
	public static final int DAQmx_Dev_DO_TrigUsage = (int)0x2989;
	public static final int DAQmxErrorOutputDriveTypeMemMappingConflict = (int)(-201129);
	public static final int DAQmxErrorHardwareNotResponding = (int)(-200175);
	public static final int DAQmxErrorMemMapAndHWTimedSinglePoint = (int)(-200995);
	public static final int DAQmx_Dev_CompactDAQ_SlotNum = (int)0x29B8;
	public static final int DAQmx_Dev_CO_MaxTimebase = (int)0x29A2;
	public static final int DAQmxErrorInvalidCalExcitVoltage = (int)(-201182);
	public static final int DAQmxErrorDifferentRawDataCompression = (int)(-200959);
	public static final int DAQmxErrorCJCChanConflictsWithNonThermocoupleChan = (int)(-201187);
	public static final int DAQmx_CI_CountEdges_Dir = (int)0x0696;
	public static final int DAQmxErrorPALMemoryPageLockFailed = (int)(-50353);
	public static final int DAQmxErrorStartTrigDelayWithExtSampClk = (int)(-200436);
	public static final int DAQmx_CI_ThreshVoltage = (int)0x30B7;
	public static final int DAQmxWarningOutputGainTooHighForRFFreq = (int)(200032);
	public static final int DAQmx_CI_Pulse_Ticks_Term = (int)0x2F14;
	public static final int DAQmx_Val_SoundPressure_Microphone = (int)10354;
	public static final int DAQmxErrorTaskVersionNew = (int)(-200470);
	public static final int DAQmxErrorSampClkTimebaseDCMBecameUnlocked = (int)(-200238);
	public static final int DAQmx_CI_PulseWidth_DigFltr_MinPulseWidth = (int)0x220B;
	public static final int DAQmx_AO_Resolution = (int)0x182C;
	public static final int DAQmxErrorCantUseAITimingEngineWithCounters = (int)(-201503);
	public static final int DAQmx_DI_DataXferReqCond = (int)0x2264;
	public static final int DAQmxErrorAIMinTooSmall = (int)(-200578);
	public static final int DAQmxErrorCOWriteFreqOutOfRange = (int)(-200685);
	public static final int DAQmx_Val_HandshakeTriggerAsserts = (int)12552;
	public static final int DAQmx_Val_StopTaskAndError = (int)15862;
	public static final int DAQmxErrorAlreadyInitialized = (int)(-26850);
	public static final int DAQmx_Read_CurrReadPos = (int)0x1221;
	public static final int DAQmx_CI_AngEncoder_Units = (int)0x18A6;
	public static final int DAQmxWarningNotActiveResourceManager = (int)(26807);
	public static final int DAQmxErrorSpecifiedCDAQSlotNotEmpty = (int)(-201161);
	public static final String DAQmx_Val_Switch_Topology_2564_16_SPST = (String)"2564/16-SPST";
	public static final int DAQmx_DI_DigFltr_TimebaseRate = (int)0x2ED5;
	public static final int DAQmxErrorTooManyTriggersSpecifiedInTask = (int)(-201281);
	public static final int DAQmxErrorSensorInvalidCompletionResistance = (int)(-200163);
	public static final int DAQmxErrorOutputFIFOUnderflow = (int)(-200016);
	public static final int DAQmxErrorChanCalExpirationDateNotSet = (int)(-200933);
	public static final int DAQmx_Dev_DO_Ports = (int)0x2323;
	public static final int DAQmx_Val_RadiansPerSecond = (int)16081;
	public static final String DAQmx_Val_Switch_Topology_2533_1_Wire_4x64_Matrix = (String)"2533/1-Wire 4x64 Matrix";
	public static final int DAQmxErrorNoInputOnPortCfgdForWatchdogOutput = (int)(-200666);
	public static final int DAQmxErrorRoutingDestTermPXIClk10InNotInStarTriggerSlot_Routing = (int)(-89162);
	public static final int DAQmx_Val_AboveLvl = (int)10093;
	public static final int DAQmx_CI_CountEdges_Gate_DigFltrEnable = (int)0x30F1;
	public static final int DAQmx_AI_DigFltr_Notch_CenterFreq = (int)0x30C5;
	public static final int DAQmx_Val_OnBrdMemHalfFullOrLess = (int)10239;
	public static final int DAQmxErrorDeviceIDDoesNotMatch = (int)(-201063);
	public static final int DAQmx_AI_DataXferMech = (int)0x1821;
	public static final int DAQmx_Val_SentinelValue = (int)16063;
	public static final int DAQmx_Dev_AI_LowpassCutoffFreqDiscreteVals = (int)0x2995;
	public static final int DAQmx_Val_5V = (int)14619;
	public static final int DAQmxErrorSampRateTooLow = (int)(-200331);
	public static final int DAQmxWarningReversePowerProtectionActivated = (int)(200050);
	public static final int DAQmxErrorExternalFIFOFault = (int)(-201464);
	public static final int DAQmxErrorAIOverrun = (int)(-201319);
	public static final int DAQmxErrorChassisCommunicationInterrupted = (int)(-201423);
	public static final int DAQmxErrorOpNotSupportedWhenRefClkSrcNone = (int)(-200661);
	public static final int DAQmx_Exported_HshkEvent_Interlocked_AssertOnStart = (int)0x22BE;
	public static final int DAQmx_Val_Fixed50PercentDutyCycle = (int)14711;
	public static final int DAQmxWarningPALTransferNotInProgress = (int)(50402);
	public static final int DAQmx_Val_100MHzTimebase = (int)15857;
	public static final int DAQmxWarningPALTransferOverwritten = (int)(50410);
	public static final int DAQmx_AI_ChanCal_Verif_RefVals = (int)0x22A1;
	public static final int DAQmx_Val_SampleCompleteEvent = (int)12530;
	public static final int DAQmxErrorSwitchScanlistTooBig = (int)(-200201);
	public static final int DAQmx_Read_OpenThrmcplChans = (int)0x2A97;
	public static final int DAQmxErrorNoCDAQSyncBetweenPhysAndSimulatedDevs = (int)(-201455);
	public static final int DAQmx_Val_AccelUnit_g = (int)10186;
	public static final int DAQmx_Val_AandB = (int)12515;
	public static final int DAQmxErrorDevNotSupportedWithinDAQmxAPI = (int)(-201427);
	public static final int DAQmx_Val_MetersPerSecond = (int)15959;
	public static final int DAQmx_CI_TwoEdgeSep_SecondEdge = (int)0x0834;
	public static final int DAQmxErrorNoTEDSTerminalBlock = (int)(-200743);
	public static final int DAQmx_AI_Accel_dBRef = (int)0x29B2;
	public static final int DAQmx_AI_ChanCal_Verif_AcqVals = (int)0x22A2;
	public static final int DAQmx_Val_DoNotInvertPolarity = (int)0;
	public static final int DAQmx_Val_PathStatus_SourceChannelConflict = (int)10435;
	public static final int DAQmxErrorCouldNotDownloadFirmwareFileMissingOrDamaged = (int)(-200961);
	public static final int DAQmx_CI_Pulse_Time_Units = (int)0x2F13;
	public static final int DAQmxWarningInvalidHandle = (int)(26805);
	public static final int DAQmx_Dev_AO_TrigUsage = (int)0x2987;
	public static final int DAQmxErrorDeviceShutDownDueToHighTemp = (int)(-200680);
	public static final int DAQmxWarningPALBadCount = (int)(50008);
	public static final int DAQmxWarningPALLogicalBufferFull = (int)(50407);
	public static final int DAQmxErrorSimPXIDevReqSlotAndChassisSpecd = (int)(-201151);
	public static final int DAQmxWarningLowpassFilterSettlingTimeExceedsUserTimeBetween2ADCConversions = (int)(200038);
	public static final int DAQmxErrorMStudioNoForwardPolyScaleCoeffs = (int)(-200783);
	public static final int DAQmx_DO_DataXferMech = (int)0x2266;
	public static final int DAQmxErrorDelayFromSampClkTooShort = (int)(-200336);
	public static final int DAQmxErrorTrigAIMinAIMax = (int)(-200422);
	public static final int DAQmx_Val_mVoltsPerVoltPerDegree = (int)12507;
	public static final int DAQmxErrorOneTimestampChannelRequiredForCombinedNavigationRead = (int)(-201472);
	public static final int DAQmx_CI_Encoder_ZInputTerm = (int)0x219F;
	public static final int DAQmxErrorDigSyncNotAvailableOnTerm = (int)(-200773);
	public static final int DAQmx_Val_Accelerometer = (int)10356;
	public static final int DAQmxErrorInvalidAOOffsetCalConst = (int)(-200719);
	public static final int DAQmx_Val_ReferenceTrigger = (int)12490;
	public static final int DAQmx_PhysicalChan_AO_ManualControlEnable = (int)0x2A1E;
	public static final int DAQmxErrorRXBitErrorRateLimitExceeded = (int)(-201196);
	public static final int DAQmxErrorRepeatedPhysicalChan = (int)(-200371);
	public static final int DAQmx_Val_Implicit = (int)10451;
	public static final int DAQmx_AI_Pressure_Units = (int)0x2F76;
	public static final int DAQmxErrorRepeatLoopNestingTooDeepInScript = (int)(-200035);
	public static final int DAQmx_CI_Velocity_Encoder_AInputDigFltr_TimebaseSrc = (int)0x30E2;
	public static final int DAQmxErrorPALComponentNeverLoaded = (int)(-50261);
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_8x64_Matrix = (String)"2532/1-Wire 8x64 Matrix";
	public static final int DAQmxErrorPALSharingViolation = (int)(-50805);
	public static final int DAQmxErrorUnexpectedEndOfActionsInList = (int)(-200196);
	public static final int DAQmxErrorConnectionsNotReciprocal = (int)(-201463);
	public static final int DAQmx_DO_MemMapEnable = (int)0x296B;
	public static final int DAQmx_Logging_SampsPerFile = (int)0x2FE4;
	public static final String DAQmx_Val_Switch_Topology_1193_Quad_8x1_Mux = (String)"1193/Quad 8x1 Mux";
	public static final int DAQmx_CI_CountEdges_DirTerm = (int)0x21E1;
	public static final int DAQmxErrorInvalidStorage = (int)(-201234);
	public static final int DAQmxErrorChanAlreadyInTask = (int)(-200489);
	public static final int DAQmx_AI_UsbXferReqCount = (int)0x3000;
	public static final int DAQmx_AO_FuncGen_Freq = (int)0x2A19;
	public static final int DAQmxErrorTristateLogicLevelNotSupportedOnDigOutChan = (int)(-201393);
	public static final int DAQmxErrorInvalidCalConstGainDACValue = (int)(-200516);
	public static final int DAQmxErrorClearTEDSNotSupportedOnRT = (int)(-200809);
	public static final int DAQmxErrorWriteDataTypeTooSmall = (int)(-200790);
	public static final int DAQmxErrorSwitchOperationChansSpanMultipleDevsInList = (int)(-200596);
	public static final int DAQmxErrorAOMinMaxNotSupportedGivenDACOffsetVal = (int)(-200869);
	public static final String DAQmx_Val_Switch_Topology_2529_2_Wire_8x16_Matrix = (String)"2529/2-Wire 8x16 Matrix";
	public static final int DAQmxErrorMStudioPropertyGetWhileTaskNotVerified = (int)(-200593);
	public static final int DAQmx_SampClk_Term = (int)0x2F1B;
	public static final int DAQmxErrorSwitchDevShutDownDueToHighTemp = (int)(-200818);
	public static final int DAQmx_DO_InvertLines = (int)0x1133;
	public static final int DAQmxErrorNumLinesMismatchInReadOrWrite = (int)(-200463);
	public static final int DAQmx_Val_Action_Cancel = (int)1;
	public static final int DAQmxErrorPatternMatcherMayBeUsedByOneTrigOnly = (int)(-200928);
	public static final int DAQmx_Val_FallingSlope = (int)10171;
	public static final int DAQmxErrorCannotConnectChansDirectly = (int)(-200185);
	public static final String DAQmx_Val_Switch_Topology_2503_2_Wire_Quad_6x1_Mux = (String)"2503/2-Wire Quad 6x1 Mux";
	public static final int DAQmx_SampClk_OverrunBehavior = (int)0x2EFC;
	public static final int DAQmx_AI_ChanCal_Poly_ForwardCoeff = (int)0x229F;
	public static final int DAQmx_AIConv_ActiveEdge = (int)0x1853;
	public static final int DAQmxErrorMStudioNoPolyScaleCoeffsUseCalc = (int)(-200781);
	public static final int DAQmxErrorRefTrigWhenContinuous = (int)(-200358);
	public static final String DAQmx_Val_Switch_Topology_2599_2_SPDT = (String)"2599/2-SPDT";
	public static final int DAQmxErrorSimultaneousAOWhenNotOnDemandTiming = (int)(-200831);
	public static final int DAQmxErrorInvalidSampModeForPositionMeas = (int)(-200813);
	public static final int DAQmx_AI_Microphone_Sensitivity = (int)0x1536;
	public static final int DAQmx_AI_Thrmcpl_Type = (int)0x1050;
	public static final int DAQmxErrorNetworkDeviceReservedByAnotherHost = (int)(-201420);
	public static final int DAQmx_AI_Bridge_ShuntCal_ShuntCalASrc = (int)0x30CA;
	public static final int DAQmxErrorWriteOffsetNotMultOfIncr = (int)(-200630);
	public static final int DAQmxErrorTEDSSensorDataError = (int)(-200826);
	public static final int DAQmx_Task_Devices = (int)0x230E;
	public static final int DAQmxErrorOutputBufferSizeNotMultOfXferSize = (int)(-200838);
	public static final int DAQmx_Val_SampClkInactiveEdge = (int)14618;
	public static final int DAQmx_Task_Complete = (int)0x1274;
	public static final String DAQmx_Val_Switch_Topology_1193_32x1_Mux = (String)"1193/32x1 Mux";
	public static final int DAQmxErrorPauseTrigDigPatternSizeDoesNotMatchSrcSize = (int)(-201134);
	public static final int DAQmxErrorRepeatedAIPhysicalChan = (int)(-200620);
	public static final int DAQmx_AO_EnhancedImageRejectionEnable = (int)0x2241;
	public static final int DAQmx_CI_CountEdges_Term = (int)0x18C7;
	public static final int DAQmx_SwitchDev_NumRelays = (int)0x18E6;
	public static final int DAQmx_Val_ActiveHigh = (int)10095;
	public static final int DAQmxErrorInvalidIDInListAtBeginningOfSwitchOperation = (int)(-200595);
	public static final int DAQmx_AI_Bridge_ShuntCal_ShuntCalBResistance = (int)0x2F7A;
	public static final int DAQmxErrorWatchdogTimerNotSupported = (int)(-200662);
	public static final int DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseSrc = (int)0x21F3;
	public static final String DAQmx_Val_Switch_Topology_2557_8x1_Mux = (String)"2557/8x1 Mux";
	public static final int DAQmxErrorPALFileWriteFault = (int)(-50208);
	public static final int DAQmx_Val_ESeriesDAQ = (int)14642;
	public static final int DAQmx_AI_EddyCurrentProxProbe_SensitivityUnits = (int)0x2ABF;
	public static final int DAQmxErrorInconsistentAODACRangeAcrossTasks = (int)(-209825);
	public static final int DAQmxErrorReadNotSupportedForLoggingMode = (int)(-201301);
	public static final int DAQmxErrorAOMinMaxNotSupportedGivenDACRefVal = (int)(-200867);
	public static final int DAQmx_DI_UsbXferReqSize = (int)0x2A90;
	public static final int DAQmxErrorDeviceSerialPortError = (int)(-201283);
	public static final int DAQmxErrorMoreThanOneTerminal = (int)(-200098);
	public static final int DAQmx_Val_Save_AllowInteractiveEditing = (int)(1 << 1);
	public static final int DAQmxErrorOnboardRegenWithMoreThan16Channels = (int)(-201365);
	public static final int DAQmxErrorSCCCarrierSpecdIsMissing = (int)(-201050);
	public static final int DAQmxErrorPALResourceAmbiguous = (int)(-50107);
	public static final int DAQmx_Val_DigPattern = (int)10398;
	public static final int DAQmx_CI_Freq_Term = (int)0x18A2;
	public static final String DAQmx_Val_Switch_Topology_2532_2_Wire_16x16_Matrix = (String)"2532/2-Wire 16x16 Matrix";
	public static final int DAQmx_Read_OverWrite = (int)0x1211;
	public static final int DAQmx_Exported_HshkEvent_OutputBehavior = (int)0x22BB;
	public static final int DAQmx_Val_WaitForHandshakeTriggerDeassert = (int)12551;
	public static final int DAQmx_CO_UseOnlyOnBrdMem = (int)0x2ECB;
	public static final String DAQmx_Val_Switch_Topology_1127_Independent = (String)"1127/Independent";
	public static final int DAQmx_CI_PulseWidth_DigFltr_Enable = (int)0x220A;
	public static final int DAQmxErrorIfElseBlockNotAllowedInFiniteRepeatLoopInScript = (int)(-201014);
	public static final int DAQmx_Val_MaintainExistingValue = (int)12528;
	public static final int DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseSrc = (int)0x2207;
	public static final int DAQmxErrorWriteChanTypeMismatch = (int)(-200526);
	public static final int DAQmx_PersistedScale_Author = (int)0x22D4;
	public static final int DAQmx_AnlgEdge_StartTrig_Slope = (int)0x1397;
	public static final int DAQmxErrorVirtualTEDSFileNotFound = (int)(-200784);
	public static final int DAQmxErrorInvalidINIFileSyntax = (int)(-201060);
	public static final int DAQmx_AI_CurrentShunt_Loc = (int)0x17F2;
	public static final int DAQmxErrorAIMaxNotSpecified = (int)(-200695);
	public static final int DAQmxErrorMoreThanOneMatchForSpecdDevice = (int)(-201043);
	public static final int DAQmxErrorRecordOverwritten = (int)(-200006);
	public static final int DAQmx_Dev_Chassis_ModuleDevNames = (int)0x29B6;
	public static final int DAQmx_Exported_RdyForStartEvent_Lvl_ActiveLvl = (int)0x1751;
	public static final int DAQmx_Dev_AI_BridgeRngs = (int)0x2FD0;
	public static final int DAQmxErrorEveryNSamplesAcqIntoBufferEventNotSupportedByDevice = (int)(-200981);
	public static final int DAQmx_PhysicalChan_TEDS_MfgID = (int)0x21DA;
	public static final int DAQmxErrorAveragingWhenNotInternalHWTSP = (int)(-201408);
	public static final int DAQmxErrorInternalAIInputSrcInMultChanGroups = (int)(-200675);
	public static final int DAQmx_Task_Channels = (int)0x1273;
	public static final int DAQmxErrorInconsistentPullUpCfgAcrossTerminals = (int)(-201509);
	public static final int DAQmxErrorPALBadWriteCount = (int)(-50014);
	public static final int DAQmx_CI_Encoder_AInputTermCfg = (int)0x30A3;
	public static final int DAQmxErrorInvalidCharInString = (int)(-200552);
	public static final int DAQmxErrorFewerThan2PreScaledVals = (int)(-200434);
	public static final String DAQmx_Val_Switch_Topology_1161_8_SPDT = (String)"1161/8-SPDT";
	public static final int DAQmxErrorWriteBeforeEvent = (int)(-201315);
	public static final int DAQmxErrorSyncNoDevSampClkTimebaseOrSyncPulseInPXISlot2 = (int)(-200852);
	public static final int DAQmx_AO_ResolutionUnits = (int)0x182B;
	public static final int DAQmx_Val_PulseWidth = (int)10359;
	public static final int DAQmxWarningPxiResmanAllocationError = (int)(26100);
	public static final int DAQmx_AO_FuncGen_Square_DutyCycle = (int)0x2A1C;
	public static final int DAQmx_Val_FullBridgeII = (int)10184;
	public static final int DAQmx_Val_EnteringWin = (int)10163;
	public static final int DAQmxErrorIdentifierInListTooLong = (int)(-200058);
	public static final int DAQmx_Val_External = (int)10167;
	public static final int DAQmxWarningSampleRateMayCauseAcqToFail = (int)(200053);
	public static final int DAQmxErrorSampleTimebaseDivisorNotSupportedGivenTimingType = (int)(-200916);
	public static final int DAQmx_Val_HardwareDefined = (int)10191;
	public static final int DAQmxErrorSlaveAndNoExternalSyncPulse = (int)(-201346);
	public static final int DAQmxErrorDigitalLineUpdateTooFastForDevice = (int)(-201278);
	public static final int DAQmxErrorInvalidRefClkRate = (int)(-200427);
	public static final int DAQmxErrorEventDelayOutOfRange = (int)(-200345);
	public static final int DAQmx_CI_Freq_LogicLvlBehavior = (int)0x3098;
	public static final int DAQmxErrorHWTimedNonBufferedAONotSupported = (int)(-201116);
	public static final int DAQmx_Val_Bit_TriggerUsageTypes_Advance = (int)(1 << 0);
	public static final int DAQmxErrorNonBufferedAOAndDataXferNotProgIO = (int)(-200768);
	public static final int DAQmxErrorCalibrationRequiresPrototypingBoardEnabled = (int)(-201269);
	public static final int DAQmxErrorCOReadyForNewValNotSupportedWithOnDemand = (int)(-200999);
	public static final int DAQmxErrorNetworkStatusDown = (int)(-201253);
	public static final int DAQmxErrorCannotHandshakeWhenTristateIsFalse = (int)(-200729);
	public static final int DAQmxErrorPALResourceBusy = (int)(-50106);
	public static final int DAQmx_PhysicalChan_TEDS_BitStream = (int)0x21DF;
	public static final int DAQmxErrorTwoEdgeSeparationSameTerminalSameEdge = (int)(-201442);
	public static final int DAQmx_AI_ChanCal_Table_ScaledVals = (int)0x229E;
	public static final int DAQmx_Dev_NumDMAChans = (int)0x233C;
	public static final int DAQmxWarningPALBadMode = (int)(50006);
	public static final int DAQmx_Val_KilogramForce = (int)15877;
	public static final int DAQmxErrorOutputBufferEmpty = (int)(-200462);
	public static final int DAQmx_AI_Excit_Val = (int)0x17F5;
	public static final int DAQmx_Dev_Terminals = (int)0x2A40;
	public static final int DAQmx_Val_PathStatus_Available = (int)10431;
	public static final int DAQmxErrorThrmcplCalibrationChannelsOpen = (int)(-201372);
	public static final int DAQmxErrorCAPIChanIndexInvalid = (int)(-200570);
	public static final int DAQmx_AnlgWin_StartTrig_Coupling = (int)0x2234;
	public static final int DAQmxErrorMultipleRelaysForSingleRelayOp = (int)(-200211);
	public static final int DAQmxErrorInsufficientBuffer = (int)(-26113);
	public static final int DAQmxError2OutputPortCombinationGivenSampTimingType653x = (int)(-200930);
	public static final int DAQmxErrorChansCantAppearInSameTask = (int)(-200713);
	public static final int DAQmxErrorBridgeShuntCaNotSupported = (int)(-201204);
	public static final int DAQmxErrorInvalidShuntLocationForCalibration = (int)(-201338);
	public static final int DAQmx_Val_NoChange = (int)10160;
	public static final int DAQmxErrorCAPICannotPerformTaskOperationInAsyncCallback = (int)(-200968);
	public static final int DAQmx_ChangeDetect_DI_FallingEdgePhysicalChans = (int)0x2196;
	public static final int DAQmxErrorExternalTimebaseRateNotKnownForDelay = (int)(-200149);
	public static final int DAQmx_AIConv_DigSync_Enable = (int)0x2EE0;
	public static final int DAQmxErrorInvalidIdentifierInListFollowingDeviceID = (int)(-200047);
	public static final int DAQmx_Val_GND = (int)10066;
	public static final int DAQmxWarningUnrecognizedEnumValueEncounteredInStorage = (int)(200044);
	public static final int DAQmx_WatchdogExpirTrig_Type = (int)0x21A3;
	public static final int DAQmxErrorCannotWriteToFiniteCOTask = (int)(-201291);
	public static final int DAQmxErrorCtrMinMax = (int)(-200527);
	public static final int DAQmx_CI_Encoder_ZIndexVal = (int)0x0888;
	public static final int DAQmx_AnlgWin_StartTrig_DigSync_Enable = (int)0x2F03;
	public static final int DAQmxErrorCannotHaveCJTempWithOtherChans = (int)(-200167);
	public static final int DAQmxWarningPxiResmanPciDescriptionStringParseError = (int)(26550);
	public static final int DAQmx_SampClk_MaxRate = (int)0x22C8;
	public static final int DAQmxErrorTaskCannotRestartFirstSampNotAvailToGenerate = (int)(-201138);
	public static final int DAQmx_PauseTrig_Term = (int)0x2F20;
	public static final int DAQmx_Write_PowerSupplyFaultChansExist = (int)0x29EC;
	public static final int DAQmx_Val_FM = (int)14757;
	public static final int DAQmx_Val_VoltageRMS = (int)10350;
	public static final int DAQmxErrorOnlyContinuousScanSupported = (int)(-200192);
	public static final int DAQmxErrorReversePolyOrderLessThanNumPtsToCompute = (int)(-200403);
	public static final int DAQmxErrorPowerLimitExceeded = (int)(-200195);
	public static final int DAQmx_Logging_FilePreallocationSize = (int)0x2FC6;
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_Sixteen_16x1_Mux = (String)"1130/1-Wire Sixteen 16x1 Mux";
	public static final int DAQmx_CI_CountEdges_Gate_Enable = (int)0x30ED;
	public static final int DAQmx_CO_OutputState = (int)0x0294;
	public static final int DAQmxErrorTooManyPretrigPlusMinPostTrigSamps = (int)(-200213);
	public static final int DAQmxErrorCAPISyncCallbackNotSupportedOnThisPlatform = (int)(-200942);
	public static final int DAQmxErrorMultipleChansNotSupportedDuringCalSetup = (int)(-201004);
	public static final int DAQmx_Watchdog_AO_ExpirState = (int)0x305F;
	public static final int DAQmxErrorBufferedOperationsNotSupportedOnSelectedLines = (int)(-201062);
	public static final int DAQmxErrorCanExportOnlyOnboardSampClk = (int)(-200891);
	public static final int DAQmx_RefTrig_Type = (int)0x1419;
	public static final int DAQmx_Exported_AdvTrig_Pulse_Width = (int)0x1648;
	public static final int DAQmxErrorRoutingSrcTermPXIStarInStarTriggerSlot_Routing = (int)(-89152);
	public static final int DAQmxErrorBufferNameExpectedInScript = (int)(-200026);
	public static final int DAQmxErrorPALResourceInitialized = (int)(-50105);
	public static final int DAQmx_Val_DO = (int)10153;
	public static final int DAQmxErrorPALFunctionObsolete = (int)(-50254);
	public static final int DAQmxErrorSCXISerialCommunication = (int)(-200015);
	public static final int DAQmxErrorSuppliedCurrentDataOutsideSpecifiedRange = (int)(-200076);
	public static final int DAQmx_CO_UsbXferReqSize = (int)0x2A93;
	public static final String DAQmx_Val_Switch_Topology_2596_Dual_6x1_Mux = (String)"2596/Dual 6x1 Mux";
	public static final int DAQmx_Val_DI = (int)10151;
	public static final int DAQmx_CI_CountEdges_DigFltr_Enable = (int)0x21F6;
	public static final int DAQmxErrorChannelNotAvailableInParallelMode = (int)(-200150);
	public static final int DAQmx_Val_Position_LVDT = (int)10352;
	public static final int DAQmxErrorSpecdDeviceDoesNotSupportRTSI = (int)(-201030);
	public static final String DAQmx_Val_Switch_Topology_2529_2_Wire_Dual_4x16_Matrix = (String)"2529/2-Wire Dual 4x16 Matrix";
	public static final int DAQmxErrorTriggerTooFast = (int)(-201364);
	public static final int DAQmxErrorPropertyNotSupportedForScaleType = (int)(-200601);
	public static final String DAQmx_Val_Switch_Topology_2576_2_Wire_Sixteen_4x1_Mux = (String)"2576/2-Wire Sixteen 4x1 Mux";
	public static final int DAQmx_Val_CO = (int)10132;
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_256x1_Mux = (String)"1130/1-Wire 256x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2796_Dual_6x1_Mux = (String)"2796/Dual 6x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_4x64_Matrix = (String)"2532/1-Wire Dual 4x64 Matrix";
	public static final int DAQmxErrorExtCalAdjustExtRefVoltageFailed = (int)(-200546);
	public static final int DAQmx_Val_CI = (int)10131;
	public static final int DAQmxWarningPALResourceOwnedBySystem = (int)(50100);
	public static final String DAQmx_Val_Switch_Topology_1167_Independent = (String)"1167/Independent";
	public static final int DAQmx_Dev_CI_SampModes = (int)0x2FDE;
	public static final int DAQmx_Read_AccessoryInsertionOrRemovalDetected = (int)0x2F70;
	public static final String DAQmx_Val_Switch_Topology_1193_Quad_4x1_Terminated_Mux = (String)"1193/Quad 4x1 Terminated Mux";
	public static final int DAQmx_Val_PCI = (int)12582;
	public static final int DAQmx_Read_ExcitFaultChans = (int)0x3089;
	public static final int DAQmxErrorTristateConflict = (int)(-201223);
	public static final int DAQmx_Val_DC = (int)10050;
	public static final int DAQmxErrorCannotReadPastEndOfRecord = (int)(-200614);
	public static final int DAQmxErrorMeasurementTypeNotSupportedForLogging = (int)(-201307);
	public static final int DAQmx_DigPattern_PauseTrig_Pattern = (int)0x2188;
	public static final String DAQmx_Val_Switch_Topology_1193_Dual_8x1_Terminated_Mux = (String)"1193/Dual 8x1 Terminated Mux";
	public static final int DAQmxErrorCOCannotKeepUpInHWTimedSinglePointPolled = (int)(-201022);
	public static final String DAQmx_Val_Switch_Topology_2501_2_Wire_Dual_12x1_Mux = (String)"2501/2-Wire Dual 12x1 Mux";
	public static final int DAQmx_ChanIsGlobal = (int)0x2304;
	public static final int DAQmx_Val_AOSeries = (int)14647;
	public static final int DAQmx_Val_SCXI1124Range0to20mA = (int)14635;
	public static final String DAQmx_Val_Switch_Topology_2559_Terminated_2_SPDT = (String)"2559/Terminated 2-SPDT";
	public static final int DAQmxErrorPasswordRequired = (int)(-200111);
	public static final int DAQmxErrorPropertyValNotSupportedByHW = (int)(-200355);
	public static final int DAQmx_AnlgEdge_StartTrig_Lvl = (int)0x1396;
	public static final int DAQmxErrorMinMaxOutsideTableRange = (int)(-201363);
	public static final int DAQmxErrorDataLineReservedForDynamicOutput = (int)(-200384);
	public static final int DAQmx_Exported_AdvCmpltEvent_OutputTerm = (int)0x1651;
	public static final int DAQmxErrorUnknownFirmwareVersion = (int)(-201378);
	public static final int DAQmxErrorDevAlreadyInTask = (int)(-200481);
	public static final int DAQmx_Val_Radians = (int)10273;
	public static final int DAQmxWarningTrigmanConflictingRouteGeneric = (int)(26006);
	public static final int DAQmx_Val_AM = (int)14756;
	public static final int DAQmx_Val_SampClk = (int)10388;
	public static final int DAQmx_Val_AO = (int)10102;
	public static final int DAQmx_Exported_SampClkTimebase_OutputTerm = (int)0x18F9;
	public static final int DAQmx_DigLvl_PauseTrig_DigSync_Enable = (int)0x222C;
	public static final int DAQmx_Val_AC = (int)10045;
	public static final int DAQmxErrorShuntCalFailedOutOfRange = (int)(-201493);
	public static final int DAQmxErrorNetworkDeviceInUse = (int)(-201273);
	public static final int DAQmx_Val_AI = (int)10100;
	public static final int DAQmx_SampClk_Src = (int)0x1852;
	public static final int DAQmxErrorPALHardwareFault = (int)(-50152);
	public static final int DAQmx_Val_GroupByScanNumber = (int)1;
	public static final int DAQmxErrorInvalidTopology = (int)(-200198);
	public static final int DAQmxErrorPALMemoryBlockCheckFailed = (int)(-50354);
	public static final int DAQmx_Val_Temp_TC = (int)10303;
	public static final int DAQmxErrorInvalidActionInControlTask = (int)(-200538);
	public static final int DAQmxErrorRoutingDestTermPXIClk10InNotInSystemTimingSlot_Routing = (int)(-89161);
	public static final int DAQmxErrorRoutingDestTermPXIStarInSystemTimingSlot_Routing = (int)(-89153);
	public static final int DAQmx_Val_CompactDAQChassis = (int)14658;
	public static final int DAQmxErrorCannotUpdatePulseTrainWithAutoIncrementEnabled = (int)(-201330);
	public static final int DAQmxErrorCannotUpdatePulseGenProperty = (int)(-200301);
	public static final int DAQmxErrorCAPIDeviceIndexInvalid = (int)(-201128);
	public static final int DAQmx_DO_LineStates_DoneState = (int)0x2968;
	public static final int DAQmx_AI_Bridge_Poly_ReverseCoeff = (int)0x2F91;
	public static final int DAQmx_AI_Excit_VoltageOrCurrent = (int)0x17F6;
	public static final int DAQmxErrorInconsistentTermCfgAcrossTerminals = (int)(-201508);
	public static final int DAQmxErrorUnsupportedUnicodeByteOrderMarker = (int)(-201017);
	public static final int DAQmx_Val_PatternDoesNotMatch = (int)10253;
	public static final int DAQmx_Val_TIOSeries = (int)14661;
	public static final String DAQmx_Val_Switch_Topology_2590_4x1_Mux = (String)"2590/4x1 Mux";
	public static final int DAQmxError20MhzTimebaseNotSupportedGivenTimingType = (int)(-200909);
	public static final int DAQmxErrorScriptNotInMem = (int)(-200342);
	public static final int DAQmxErrorPALBadMode = (int)(-50006);
	public static final int DAQmx_Val_Off = (int)10231;
	public static final int DAQmxWarningReadOffsetCoercion = (int)(200019);
	public static final int DAQmx_Dev_PXI_ChassisNum = (int)0x2329;
	public static final int DAQmxErrorChanSizeTooBigForU32PortRead = (int)(-200564);
	public static final int DAQmxErrorDoneEventAlreadyRegistered = (int)(-200950);
	public static final int DAQmx_AnlgWin_RefTrig_Top = (int)0x1429;
	public static final int DAQmxErrorTemperatureOutOfRangeForCalibration = (int)(-200113);
	public static final int DAQmx_PhysicalChan_DI_SampClkSupported = (int)0x29A5;
	public static final int DAQmx_Val_ZeroVolts = (int)12526;
	public static final int DAQmx_CI_Pulse_Time_TermCfg = (int)0x30B3;
	public static final int DAQmxErrorPALBadAddressSpace = (int)(-50017);
	public static final int DAQmx_AO_IdleOutputBehavior = (int)0x2240;
	public static final int DAQmxErrorFunctionObsolete = (int)(-209823);
	public static final int DAQmxErrorForwardPolynomialCoefNotSpecd = (int)(-200351);
	public static final int DAQmxErrorIncorrectFirmwareFileUploaded = (int)(-201419);
	public static final int DAQmxErrorModuleUnsupportedFor9163 = (int)(-201415);
	public static final int DAQmx_Val_SCXI = (int)12584;
	public static final int DAQmx_AnlgWin_StartTrig_Src = (int)0x1400;
	public static final int DAQmx_Val_Handshake = (int)10389;
	public static final int DAQmxErrorLoadTaskFailsBecauseNoTimingOnDev = (int)(-200494);
	public static final int DAQmx_CI_CountEdges_CountReset_ResetCount = (int)0x2FB0;
	public static final int DAQmxErrorThrmcplLeadOffsetNullingCalNotSupported = (int)(-201375);
	public static final int DAQmxErrorCOWritePulseLowTicksNotSupported = (int)(-200689);
	public static final int DAQmxErrorSwitchOperationNotSupported = (int)(-200193);
	public static final int DAQmxErrorModuleChangeDuringConnectionLoss = (int)(-201389);
	public static final int DAQmx_Exported_AdvCmpltEvent_Pulse_Width = (int)0x1654;
	public static final int DAQmx_DigEdge_ArmStartTrig_DigFltr_Enable = (int)0x222D;
	public static final int DAQmx_Cal_DevTemp = (int)0x223B;
	public static final int DAQmx_DigEdge_AdvTrig_Src = (int)0x1362;
	public static final int DAQmxErrorDCMLock = (int)(-200385);
	public static final int DAQmx_CI_Pulse_Freq_Units = (int)0x2F0B;
	public static final int DAQmx_PersistedChan_AllowInteractiveDeletion = (int)0x22D2;
	public static final int DAQmxErrorRuntimeAborted_Routing = (int)(-88709);
	public static final int DAQmxErrorFilterOrDigitalSyncInternalSignal = (int)(-201367);
	public static final int DAQmxErrorAICouplingAndAIInputSourceConflict = (int)(-201125);
	public static final int DAQmx_Val_6Wire = (int)6;
	public static final int DAQmx_Read_ExcitFaultChansExist = (int)0x3088;
	public static final int DAQmx_Val_MapRanges = (int)10448;
	public static final int DAQmxErrorPropertyNotSupportedWithConflictingProperty = (int)(-201298);
	public static final int DAQmxErrorBothRefInAndRefOutEnabled = (int)(-201109);
	public static final int DAQmxWarningReadRepeatedData = (int)(200060);
	public static final int DAQmxErrorPALSyncAbandoned = (int)(-50551);
	public static final int DAQmxErrorAOPropertiesCauseVoltageBelowMin = (int)(-200583);
	public static final int DAQmxErrorSelfCalFailedTryExtCal = (int)(-201374);
	public static final int DAQmx_SwitchDev_PwrDownLatchRelaysAfterSettling = (int)0x22DB;
	public static final int DAQmxErrorInvalidOptionForDigitalPortChannel = (int)(-200376);
	public static final int DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseSrc = (int)0x222A;
	public static final int DAQmxErrorPHYBitErrorRateLimitExceeded = (int)(-201195);
	public static final int DAQmxErrorDeviceAndConnectorSpecdAlreadyOccupied = (int)(-201047);
	public static final int DAQmxErrorPropertyNotSupportedNotOutputTask = (int)(-200456);
	public static final int DAQmxErrorOffsetTooLargeForOffsetCalConst = (int)(-201201);
	public static final int DAQmxErrorTEDSMinElecValGEMaxElecVal = (int)(-200816);
	public static final int DAQmxErrorPropertyNotSupportedForBusType = (int)(-201262);
	public static final int DAQmxErrorNoMemMapWhenHWTimedSinglePoint = (int)(-200679);
	public static final int DAQmx_Val_HalfBridgeII = (int)10189;
	public static final int DAQmxErrorPathNotFound = (int)(-26110);
	public static final String DAQmx_Val_Switch_Topology_1175_1_Wire_196x1_Mux = (String)"1175/1-Wire 196x1 Mux";
	public static final int DAQmx_Sys_GlobalChans = (int)0x1265;
	public static final int DAQmxErrorSubsetStartOffsetNotAlignedInScript = (int)(-200033);
	public static final int DAQmxErrorDirCreateFault = (int)(-26112);
	public static final int DAQmxWarningUSBHotfixForDAQ = (int)(200078);
	public static final int DAQmx_AnlgWin_StartTrig_Btm = (int)0x1402;
	public static final int DAQmx_Scale_Type = (int)0x1929;
	public static final int DAQmxErrorWaitIsLastInstructionOfLoopInScript = (int)(-200038);
	public static final String DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Mux = (String)"2501/2-Wire 24x1 Mux";
	public static final int DAQmxErrorCounterMaxMinRangeFreq = (int)(-200139);
	public static final int DAQmx_CI_Period_LogicLvlBehavior = (int)0x309A;
	public static final int DAQmx_CI_CountEdges_CountDir_LogicLvlBehavior = (int)0x309E;
	public static final int DAQmx_Dev_AO_VoltageRngs = (int)0x299B;
	public static final int DAQmxErrorInvalidNumberOfCalAdjustmentPoints = (int)(-201368);
	public static final int DAQmxErrorInvalidTimeoutVal = (int)(-200453);
	public static final int DAQmxErrorCounterOutputPauseTriggerInvalid = (int)(-200144);
	public static final int DAQmx_AI_AutoZeroMode = (int)0x1760;
	public static final int DAQmxErrorNotEnoughSampsWrittenForInitialXferRqstCondition = (int)(-200294);
	public static final int DAQmxErrorSampleClockRateIsTooFastForBurstTiming = (int)(-201176);
	public static final int DAQmxErrorSelfCalTemperatureNotDAQmx = (int)(-200542);
	public static final int DAQmx_PhysicalChan_AO_TermCfgs = (int)0x29A3;
	public static final int DAQmxErrorUnableToLocateErrorResources = (int)(-200500);
	public static final int DAQmx_Dev_CI_MaxSize = (int)0x299F;
	public static final int DAQmxErrorDevOrDevPhysChanDoesNotSupportSCXIDigitization = (int)(-201238);
	public static final int DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherTask = (int)(-200775);
	public static final int DAQmxErrorInvalidNumberInRepeatStatementInList = (int)(-200049);
	public static final int DAQmxErrorSCCModSimMustMatchSCCCarrierSim = (int)(-201156);
	public static final int DAQmx_CI_Pulse_Freq_DigFltr_Enable = (int)0x2F06;
	public static final int DAQmxWarningBufferSizeNotMultipleOfSectorSize = (int)(200052);
	public static final int DAQmxErrorDevMustHaveAtLeastOneCard = (int)(-201357);
	public static final int DAQmx_CO_CtrTimebaseActiveEdge = (int)0x0341;
	public static final int DAQmxErrorOffsetTooSmall = (int)(-200268);
	public static final int DAQmx_AO_DataXferReqCond = (int)0x183C;
	public static final int DAQmx_DigEdge_StartTrig_DigFltr_Enable = (int)0x2223;
	public static final int DAQmxErrorMultipleCounterInputTask = (int)(-200147);
	public static final int DAQmx_Val_2point5V = (int)14620;
	public static final int DAQmx_CI_Velocity_Encoder_AInputTermCfg = (int)0x30DE;
	public static final int DAQmxErrorIncorrectPassword = (int)(-200110);
	public static final int DAQmxErrorInvalidRecordNum = (int)(-200410);
	public static final int DAQmx_Val_Hz = (int)10373;
	public static final int DAQmx_RealTime_ConvLateErrorsToWarnings = (int)0x22EE;
	public static final int DAQmx_Read_ChannelsToRead = (int)0x1823;
	public static final int DAQmx_Val_DoNotWrite = (int)12540;
	public static final int DAQmxErrorGlobalTaskNameAlreadyChanName = (int)(-200919);
	public static final int DAQmxErrorOutputBufSizeTooSmallToStartGen = (int)(-200609);
	public static final int DAQmxErrorInvalidPhysChanType = (int)(-200430);
	public static final int DAQmx_CI_CountEdges_CountReset_Enable = (int)0x2FAF;
	public static final int DAQmxErrorPALFirmwareFault = (int)(-50151);
	public static final int DAQmxErrorEveryNSampsTransferredFromBufferEventNotSupportedByDevice = (int)(-200980);
	public static final int DAQmxErrorNoLastExtCalDateTimeLastExtCalNotDAQmx = (int)(-200804);
	public static final int DAQmxErrorRouteFailedBecauseWatchdogExpired = (int)(-200681);
	public static final int DAQmx_AdvTrig_Type = (int)0x1365;
	public static final int DAQmxErrorCannotConnectChannelToItself = (int)(-200187);
	public static final int DAQmx_DO_LineStates_PausedState = (int)0x2967;
	public static final int DAQmx_Val_mVoltsPerMil = (int)14836;
	public static final String DAQmx_Val_Switch_Topology_1175_2_Wire_98x1_Mux = (String)"1175/2-Wire 98x1 Mux";
	public static final int DAQmxErrorCannotQueryManualControlAttribute = (int)(-201260);
	public static final int DAQmx_AI_Excit_ActualVal = (int)0x1883;
	public static final String DAQmx_Val_Switch_Topology_2558_4_SPDT = (String)"2558/4-SPDT";
	public static final int DAQmx_Val_Diff = (int)10106;
	public static final int DAQmxError2CounterMeasurementModeAndSampleClocked = (int)(-201323);
	public static final int DAQmx_Val_PPS = (int)10080;
	public static final int DAQmxErrorPALBadLibrarySpecifier = (int)(-50018);
	public static final int DAQmx_Dev_DigTrigSupported = (int)0x2985;
	public static final int DAQmxErrorSpecdDeviceIsAlreadyOnRTSIBus = (int)(-201029);
	public static final int DAQmx_Val_ProgrammedIO = (int)10264;
	public static final int DAQmxErrorStartTrigDelayWithDSAModule = (int)(-201429);
	public static final int DAQmxErrorSCXIModuleDoesNotSupportDigitizationMode = (int)(-201240);
	public static final int DAQmxErrorAcqStoppedToPreventInputBufferOverwriteOneDataXferMech = (int)(-200613);
	public static final int DAQmx_AnlgEdge_RefTrig_Src = (int)0x1424;
	public static final int DAQmxErrorHiddenChanMissingInChansPropertyInCfgFile = (int)(-201084);
	public static final int DAQmxWarningPXIe5606_NotConfigured = (int)(200072);
	public static final int DAQmxErrorPALDeviceUnknown = (int)(-50301);
	public static final int DAQmxErrorPALVersionMismatch = (int)(-50250);
	public static final int DAQmxErrorInvalidHandle = (int)(-26805);
	public static final int DAQmx_Val_USBDAQ = (int)14646;
	public static final int DAQmx_AI_MemMapEnable = (int)0x188C;
	public static final int DAQmxErrorWroteMultiSampsUsingSingleSampWrite = (int)(-200673);
	public static final int DAQmxErrorInvalidHWProductType = (int)(-201057);
	public static final int DAQmx_PhysicalChan_AO_SupportedOutputTypes = (int)0x2FD9;
	public static final int DAQmxErrorOperationAborted = (int)(-201452);
	public static final int DAQmxErrorCabledModuleCannotRouteSSH = (int)(-200320);
	public static final int DAQmx_Val_DigitalIO = (int)14648;
	public static final int DAQmxErrorAttrNotSupportedOnAccessory = (int)(-201421);
	public static final int DAQmxErrorTooManyChansForAnalogPauseTrigCDAQ = (int)(-201103);
	public static final int DAQmx_AI_ACExcit_SyncEnable = (int)0x0102;
	public static final int DAQmx_Dev_CO_SampClkSupported = (int)0x2F5B;
	public static final int DAQmx_Val_X2 = (int)10091;
	public static final String DAQmx_Val_Switch_Topology_2532_2_Wire_8x32_Matrix = (String)"2532/2-Wire 8x32 Matrix";
	public static final int DAQmxErrorWaitForNextSampleClockOrReadDetected3OrMoreMissedSampClks = (int)(-201027);
	public static final int DAQmx_Val_X4 = (int)10092;
	public static final int DAQmxErrorHWTSPMultiSampleWrite = (int)(-209815);
	public static final int DAQmx_AnlgEdge_StartTrig_DigFltr_MinPulseWidth = (int)0x2EE2;
	public static final int DAQmxErrorAuxPowerSourceRequired = (int)(-201475);
	public static final int DAQmxErrorSlaveWithNoStartTriggerConfigured = (int)(-201350);
	public static final int DAQmxErrorProgrammedIOConflict = (int)(-201226);
	public static final int DAQmx_Val_Once = (int)10244;
	public static final int DAQmx_Val_X1 = (int)10090;
	public static final int DAQmxWarningPXIe5663_IncorrectlyConfigured = (int)(200064);
	public static final int DAQmx_Dev_ProductType = (int)0x0631;
	public static final String DAQmx_Val_Switch_Topology_2569_50_DPST = (String)"2569/50-DPST";
	public static final int DAQmx_AI_ResistanceCfg = (int)0x1881;
	public static final int DAQmxErrorServiceNotRunning = (int)(-26804);
	public static final int DAQmxErrorTrigWindowAIMinAIMaxCombo = (int)(-200423);
	public static final int DAQmx_AnlgLvl_PauseTrig_Hyst = (int)0x1368;
	public static final int DAQmx_Val_OpenCollector = (int)12574;
	public static final int DAQmxErrorActiveChanNotSpecdWhenGetting1LinePrpty = (int)(-200642);
	public static final int DAQmxErrorSpecifiedAttrNotValid = (int)(-200233);
	public static final int DAQmx_Dev_DI_MaxRate = (int)0x2999;
	public static final int DAQmxErrorAccessoryNotPresent = (int)(-201413);
	public static final int DAQmxErrorCanExportOnlyDigEdgeTrigs = (int)(-200896);
	public static final int DAQmxErrorNetworkEEPROMHasChanged = (int)(-201255);
	public static final int DAQmxErrorNoAcqStarted = (int)(-200286);
	public static final int DAQmx_Val_PullUp = (int)15950;
	public static final int DAQmxErrorTrigmanInvalidParameter = (int)(-26002);
	public static final int DAQmx_Val_Interlocked = (int)12549;
	public static final int DAQmxErrorInvalidAIChanOrder = (int)(-200618);
	public static final int DAQmxErrorCOCannotKeepUpInHWTimedSinglePoint = (int)(-209805);
	public static final int DAQmxErrorMeasCalAdjustCalADC = (int)(-200509);
	public static final int DAQmxErrorDACRngHighNotEqualRefVal = (int)(-200448);
	public static final int DAQmx_DI_DigFltr_EnableBusMode = (int)0x2EFE;
	public static final int DAQmx_Cal_AccConnectionCount = (int)0x2FEB;
	public static final int DAQmxErrorUnexpectedIDFollowingRelayNameInList = (int)(-200530);
	public static final int DAQmxErrorMarkerPositionOutsideSubsetInScript = (int)(-200034);
	public static final int DAQmx_Val_mVoltsPerVoltPerRadian = (int)12508;
	public static final String DAQmx_Val_Switch_Topology_2566_16_SPDT = (String)"2566/16-SPDT";
	public static final int DAQmxErrorDevDoesNotSupportMultiplexedSCXIDigitizationMode = (int)(-201239);
	public static final int DAQmxErrorVirtualChanDoesNotExist = (int)(-200488);
	public static final int DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseSrc = (int)0x2216;
	public static final int DAQmx_CI_LinEncoder_Units = (int)0x18A9;
	public static final int DAQmxErrorSamplesWillNeverBeAvailable = (int)(-200278);
	public static final int DAQmxErrorWaitModeValueNotSupportedNonBuffered = (int)(-200924);
	public static final int DAQmxErrorNoChansOfGivenTypeInTask = (int)(-200611);
	public static final int DAQmxErrorControlLineConflictOnPortC = (int)(-200126);
	public static final int DAQmx_AnlgWin_PauseTrig_When = (int)0x1374;
	public static final String DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Mux = (String)"2501/1-Wire 48x1 Mux";
	public static final int DAQmx_AI_Bridge_InitialRatio = (int)0x2F86;
	public static final int DAQmxErrorCAPINoExtendedErrorInfoAvailable = (int)(-200399);
	public static final int DAQmx_Val_Sine = (int)14751;
	public static final int DAQmxErrorMasterTbRateMasterTbSrcMismatch = (int)(-200307);
	public static final int DAQmxErrorAcqStoppedToPreventInputBufferOverwrite = (int)(-200222);
	public static final int DAQmxErrorProductOfAOMinAndGainTooSmall = (int)(-200271);
	public static final int DAQmx_Val_DigEdge = (int)10150;
	public static final int DAQmxErrorTooManyEventsGenerated = (int)(-200992);
	public static final int DAQmxErrorStartTrigDigPatternChanNotTristated = (int)(-200886);
	public static final int DAQmx_AI_Bridge_ElectricalUnits = (int)0x2F87;
	public static final int DAQmxErrorAttrCannotBeSet = (int)(-200231);
	public static final int DAQmxErrorDuplicateCalibrationAdjustmentInput = (int)(-201387);
	public static final String DAQmx_Val_Switch_Topology_2595_4x1_Mux = (String)"2595/4x1 Mux";
	public static final int DAQmxErrorDeviceDoesNotSupportDMADataXferForNonBufferedAcq = (int)(-200734);
	public static final int DAQmxErrorChanSizeTooBigForU32PortWrite = (int)(-200566);
	public static final int DAQmx_CI_Encoder_BInputTerm = (int)0x219E;
	public static final int DAQmx_Dev_Accessory_SerialNums = (int)0x2F6F;
	public static final int DAQmx_Val_Force_IEPESensor = (int)15895;
	public static final int DAQmxErrorAccessorySettingNotApplicable = (int)(-201048);
	public static final int DAQmx_Val_NRSE = (int)10078;
	public static final String DAQmx_Val_Switch_Topology_2521_40_DPST = (String)"2521/40-DPST";
	public static final int DAQmx_CI_Encoder_ZInput_DigSync_Enable = (int)0x2209;
	public static final int DAQmxErrorRefTrigDigPatternChanNotTristated = (int)(-200888);
	public static final int DAQmx_CI_Velocity_LinEncoder_DistPerPulse = (int)0x30DB;
	public static final int DAQmxErrorWriteWhenTaskNotRunningCOTime = (int)(-200874);
	public static final int DAQmxErrorPALComponentAlreadyInstalled = (int)(-50263);
	public static final int DAQmxWarningPxiResmanMxsPxiSystemNotFound = (int)(26600);
	public static final int DAQmxErrorSCXIChassisCommModeInvalid = (int)(-201236);
	public static final int DAQmxErrorDrivePhaseShiftDCMBecameUnlocked = (int)(-200390);
	public static final int DAQmx_CI_Timestamp_Units = (int)0x22B3;
	public static final int DAQmxErrorDSFReadyForOutputNotAsserted = (int)(-200585);
	public static final int DAQmxErrorGenericFileIO = (int)(-201309);
	public static final int DAQmxErrorPlus5VFuseBlown = (int)(-201285);
	public static final int DAQmx_Write_OverloadedChansExist = (int)0x3084;
	public static final int DAQmx_Val_R4 = (int)14813;
	public static final String DAQmx_Val_Switch_Topology_2584_1_Wire_12x1_Mux = (String)"2584/1-Wire 12x1 Mux";
	public static final int DAQmxErrorPXIDevTempCausedShutDown = (int)(-200623);
	public static final int DAQmxErrorTaskDoesNotReferenceLocalChannel = (int)(-201231);
	public static final int DAQmxErrorSampClkTimingTypeWhenTristateIsFalse = (int)(-200839);
	public static final int DAQmx_Dev_AO_SupportedOutputTypes = (int)0x2FD3;
	public static final String DAQmx_Val_Switch_Topology_2586_5_DPST = (String)"2586/5-DPST";
	public static final int DAQmxErrorStartTrigConflictWithCOHWTimedSinglePt = (int)(-200787);
	public static final int DAQmxErrorInvalidInstallation = (int)(-200683);
	public static final int DAQmxErrorAIMaxTooLarge = (int)(-200579);
	public static final int DAQmx_Val_FullBridgeIII = (int)10185;
	public static final int DAQmx_AnlgLvl_PauseTrig_DigFltr_Enable = (int)0x2EF0;
	public static final int DAQmxErrorInvalidTableIdentifier = (int)(-201067);
	public static final int DAQmx_DigLvl_PauseTrig_When = (int)0x1380;
	public static final int DAQmx_Read_OpenChansDetails = (int)0x3102;
	public static final int DAQmx_Val_R1 = (int)12465;
	public static final int DAQmx_Val_R2 = (int)12466;
	public static final int DAQmx_Val_R3 = (int)12467;
	public static final int DAQmxErrorFileMissingRequiredDAQmxHeader = (int)(-201064);
	public static final int DAQmx_Dev_AI_MaxSingleChanRate = (int)0x298C;
	public static final int DAQmx_Exported_ChangeDetectEvent_OutputTerm = (int)0x2197;
	public static final int DAQmxErrorInvalidNumSampsToWrite = (int)(-200622);
	public static final int DAQmxErrorPXISAConfigurationLocked = (int)(-26808);
	public static final int DAQmx_Val_Pulse_Time = (int)10269;
	public static final int DAQmx_Val_Amps = (int)10342;
	public static final int DAQmxErrorInvalidPhysChanName = (int)(-201237);
	public static final int DAQmx_Val_CartesianStrainY = (int)15975;
	public static final int DAQmxErrorLinesUsedForStaticInputNotForHandshakingControl = (int)(-200728);
	public static final int DAQmxErrorReadBufferTooSmall = (int)(-200229);
	public static final int DAQmx_Val_mVoltsPerNewton = (int)15891;
	public static final String DAQmx_Val_Switch_Topology_2515_Independent = (String)"2515/Independent";
	public static final int DAQmx_Val_CartesianStrainX = (int)15974;
	public static final int DAQmx_CI_Pulse_Time_DigFltr_TimebaseSrc = (int)0x2F10;
	public static final int DAQmxWarningChildNotFound = (int)(26654);
	public static final String DAQmx_Val_Switch_Topology_1128_2_Wire_32x1_Mux = (String)"1128/2-Wire 32x1 Mux";
	public static final int DAQmxErrorPreScaledMinEqualMax = (int)(-200602);
	public static final String DAQmx_Val_Switch_Topology_1193_Independent = (String)"1193/Independent";
	public static final int DAQmxErrorPhysChanReservedForOutputWhenDesiredForInput = (int)(-201162);
	public static final int DAQmx_AI_EddyCurrentProxProbe_Units = (int)0x2AC0;
	public static final int DAQmxErrorMaxSoundPressureMicSensitivitRelatedAIPropertiesNotSupportedByDev = (int)(-200861);
	public static final int DAQmxWarningAIConvRateTooLow = (int)(200018);
	public static final int DAQmx_SampClk_DigFltr_TimebaseRate = (int)0x2221;
	public static final int DAQmxErrorDevCannotBeAccessed = (int)(-201003);
	public static final int DAQmx_Val_PathStatus_ChannelReservedForRouting = (int)10436;
	public static final int DAQmx_DigPattern_StartTrig_Src = (int)0x1410;
	public static final int DAQmxErrorHandlerNotFound = (int)(-26657);
	public static final int DAQmxErrorCantSaveTaskWithPerDeviceTimingProperties = (int)(-201099);
	public static final int DAQmxErrorCannotTristate8255OutputLines = (int)(-200116);
	public static final int DAQmxErrorTooManyInstructionsInLoopInScript = (int)(-201016);
	public static final int DAQmxErrorInvalidCfgCalAdjustMainPreAmpOffset = (int)(-200510);
	public static final int DAQmxErrorInvalidWaveformLengthBeforeBreakBlock = (int)(-201209);
	public static final int DAQmx_CI_Max = (int)0x189C;
	public static final int DAQmxErrorLabVIEWInvalidTaskOrChans = (int)(-200428);
	public static final int DAQmxErrorTableScalePreScaledValsNotSpecd = (int)(-200349);
	public static final String DAQmx_Val_Switch_Topology_2523_26_DPDT = (String)"2523/26-DPDT";
	public static final String DAQmx_Val_Switch_Topology_2593_16x1_Mux = (String)"2593/16x1 Mux";
	public static final int DAQmx_AO_Gain = (int)0x0118;
	public static final int DAQmx_Val_OnDemand = (int)10390;
	public static final int DAQmx_Write_OverloadedChans = (int)0x3085;
	public static final int DAQmxErrorElvis2PhysicalChansThermalEvent = (int)(-201197);
	public static final int DAQmx_AI_Bridge_NomResistance = (int)0x17EC;
	public static final int DAQmx_CI_LinEncoder_InitialPos = (int)0x0915;
	public static final int DAQmxErrorTrailingSpaceInString = (int)(-200554);
	public static final int DAQmxErrorHardwareTooNewForSoftware = (int)(-201139);
	public static final int DAQmxErrorOutputCantStartChangedBufferSize = (int)(-200567);
	public static final int DAQmx_AO_DAC_Ref_ConnToGnd = (int)0x0130;
	public static final int DAQmx_Val_InchesPerSecondSquared = (int)12471;
	public static final int DAQmx_AI_StrainGage_GageFactor = (int)0x0994;
	public static final int DAQmx_Read_AutoStart = (int)0x1826;
	public static final int DAQmxErrorTooManyPhysicalChansForTEDSInterfaceSpecd = (int)(-201052);
	public static final int DAQmxErrorDeviceDoesNotSupportThisOperation = (int)(-201380);
	public static final int DAQmxErrorInconsistentAnalogTrigSettingsCDAQ = (int)(-201104);
	public static final int DAQmxWarningFileCloseFault = (int)(26105);
	public static final int DAQmx_ChangeDetect_DI_RisingEdgePhysicalChans = (int)0x2195;
	public static final int DAQmxErrorDataXferCustomThresholdNotDMAXferMethodSpecifiedForDev = (int)(-200945);
	public static final int DAQmx_Val_HandshakeTriggerDeasserts = (int)12553;
	public static final int DAQmx_CI_Encoder_DecodingType = (int)0x21E6;
	public static final int DAQmx_HshkTrig_Type = (int)0x22B7;
	public static final int DAQmx_Val_Auto = (int)-1;
	public static final int DAQmx_Scale_ScaledUnits = (int)0x191B;
	public static final int DAQmxWarningRISAcqCompletedSomeBinsNotFilled = (int)(200029);
	public static final String DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_4x32_Matrix = (String)"1129/2-Wire Dual 4x32 Matrix";
	public static final int DAQmxErrorPALTransferStopped = (int)(-50404);
	public static final int DAQmx_Val_High = (int)10192;
	public static final int DAQmx_AnlgLvl_PauseTrig_DigSync_Enable = (int)0x2EF4;
	public static final int DAQmx_Exported_AdvCmpltEvent_Delay = (int)0x1757;
	public static final int DAQmx_Dev_CO_SupportedOutputTypes = (int)0x2FD5;
	public static final int DAQmxWarningPXI5600_NotConfigured = (int)(200061);
	public static final int DAQmx_Val_FixedLowFreq = (int)14710;
	public static final int DAQmxErrorAttrNotSupported = (int)(-200197);
	public static final int DAQmx_Scale_Poly_ReverseCoeff = (int)0x1235;
	public static final int DAQmx_CO_Pulse_Term = (int)0x18E1;
	public static final int DAQmxErrorPropertyUnavailWhenUsingOnboardMemory = (int)(-200297);
	public static final int DAQmxErrorRefTrigMasterSessionUnavailable = (int)(-200682);
	public static final int DAQmx_AO_FuncGen_FMDeviation = (int)0x2A23;
	public static final int DAQmxErrorPALThreadCouldNotRun = (int)(-50600);
	public static final int DAQmx_Val_Sawtooth = (int)14754;
	public static final int DAQmxErrorChangeDetectionRisingAndFallingEdgeChanDontMatch = (int)(-200893);
	public static final int DAQmx_Dev_DI_TrigUsage = (int)0x2988;
	public static final String DAQmx_Val_Switch_Topology_2527_2_Wire_Dual_16x1_Mux = (String)"2527/2-Wire Dual 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2722_Independent = (String)"2722/Independent";
	public static final int DAQmx_AI_Thrmcpl_ScaleType = (int)0x29D0;
	public static final int DAQmxErrorSelfCalFailedContactTechSupport = (int)(-201386);
	public static final int DAQmxWarningPxiResmanSystemDescriptionWriteError = (int)(26402);
	public static final int DAQmx_CO_CtrTimebase_DigFltr_Enable = (int)0x2276;
	public static final int DAQmxErrorInterruptsInsufficientDataXferMech = (int)(-200322);
	public static final int DAQmxErrorPALBadDevice = (int)(-50002);
	public static final int DAQmxErrorMemMapDataXferModeSampTimingCombo = (int)(-200260);
	public static final int DAQmx_Dev_CI_SampClkSupported = (int)0x299E;
	public static final int DAQmxErrorInvalidWaitDurationInBreakBlock = (int)(-201214);
	public static final int DAQmx_Val_Loopback180 = (int)1;
	public static final int DAQmx_CI_Encoder_ZIndexEnable = (int)0x0890;
	public static final int DAQmxErrorDifferentInternalAIInputSources = (int)(-200573);
	public static final int DAQmx_Read_OvercurrentChansExist = (int)0x29E6;
	public static final int DAQmxErrorEEPROMDataInvalid = (int)(-200152);
	public static final int DAQmxErrorLines4To7ConfiguredForInput = (int)(-200124);
	public static final int DAQmxErrorAIInputBufferSizeNotMultOfXferSize = (int)(-200763);
	public static final int DAQmx_Val_SCXI1124RangeNeg10to10V = (int)14634;
	public static final int DAQmxErrorPowerLevelTooLowForOOK = (int)(-201113);
	public static final int DAQmx_CI_Period_StartingEdge = (int)0x0852;
	public static final int DAQmx_Val_Bit_CouplingTypes_HFReject = (int)(1 << 3);
	public static final int DAQmxErrorDACUnderflow = (int)(-200018);
	public static final int DAQmxErrorConflictingAutoZeroMode = (int)(-201098);
	public static final int DAQmxErrorCannotUnregisterDAQmxSoftwareEventWhileTaskIsRunning = (int)(-200986);
	public static final int DAQmxErrorInvalidCharInPattern = (int)(-200496);
	public static final int DAQmxErrorResourcesInUseForRoute_Routing = (int)(-89137);
	public static final int DAQmxErrorSignalEventsNotSupportedByDevice = (int)(-200982);
	public static final int DAQmx_CI_Min = (int)0x189D;
	public static final int DAQmx_Exported_StartTrig_Pulse_Polarity = (int)0x0585;
	public static final int DAQmxErrorAnalogTrigNotFirstInScanListCDAQ = (int)(-201102);
	public static final int DAQmx_Dev_CI_PhysicalChans = (int)0x2324;
	public static final int DAQmx_SampClk_DigFltr_Enable = (int)0x221E;
	public static final int DAQmx_StartTrig_DelayUnits = (int)0x18C8;
	public static final int DAQmxErrorSuitableTimebaseNotFoundTimeCombo = (int)(-200137);
	public static final int DAQmxErrorMissingStartOfTable = (int)(-201065);
	public static final int DAQmx_Sys_Scales = (int)0x1266;
	public static final int DAQmx_AnlgEdge_StartTrig_Hyst = (int)0x1395;
	public static final int DAQmxErrorClkOutPhaseShiftDCMBecameUnlocked = (int)(-200389);
	public static final int DAQmx_SampTimingEngine = (int)0x2A26;
	public static final int DAQmxErrorInvalidDeviceConnectorNumberSpecd = (int)(-201045);
	public static final int DAQmxErrorReadNoInputChansInTask = (int)(-200460);
	public static final int DAQmx_AI_Rng_High = (int)0x1815;
	public static final int DAQmxErrorDifferentDigitizerFromCommunicator = (int)(-201469);
	public static final int DAQmx_CI_CountEdges_Gate_TermCfg = (int)0x30EF;
	public static final int DAQmx_Val_MostRecentSamp = (int)10428;
	public static final int DAQmxErrorDigFilterIntervalAlreadyCfgd = (int)(-200645);
	public static final int DAQmxErrorInvalidChanName = (int)(-200461);
	public static final int DAQmxErrorCOInvalidTimingSrcDueToSignal = (int)(-200801);
	public static final int DAQmxWarningPotentialGlitchDuringWrite = (int)(200015);
	public static final int DAQmx_Val_Elliptical = (int)16077;
	public static final int DAQmx_SampClk_DigSync_Enable = (int)0x2222;
	public static final int DAQmx_Val_Triangle = (int)14752;
	public static final int DAQmx_Val_AllowRegen = (int)10097;
	public static final int DAQmxWarningPALValueConflict = (int)(50000);
	public static final int DAQmx_SelfCal_LastTemp = (int)0x1864;
	public static final int DAQmxErrorTrigmanDisconnected = (int)(-26010);
	public static final int DAQmx_Logging_FileWriteSize = (int)0x2FC3;
	public static final int DAQmx_Val_IgnoreOverruns = (int)15863;
	public static final int DAQmx_Sys_NIDAQMinorVersion = (int)0x1923;
	public static final int DAQmxErrorTrigBusLineNotAvail = (int)(-200226);
	public static final String DAQmx_Val_Switch_Topology_2798_Dual_Transfer = (String)"2798/Dual Transfer";
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_Dual_128x1_Mux = (String)"1130/1-Wire Dual 128x1 Mux";
	public static final int DAQmxErrorInputBoardClkDCMBecameUnlocked = (int)(-200387);
	public static final int DAQmxErrorPALBadOffset = (int)(-50007);
	public static final int DAQmxErrorGainTooLargeForGainCalConst = (int)(-201202);
	public static final int DAQmx_Buf_Input_OnbrdBufSize = (int)0x230A;
	public static final int DAQmxErrorResourcesInUseForInversionInTask_Routing = (int)(-89135);
	public static final int DAQmxErrorWaveformPreviouslyAllocated = (int)(-200310);
	public static final int DAQmxErrorParallelSSHOnConnector1 = (int)(-201297);
	public static final int DAQmxErrorRefAndStartTriggerSrcCantBeSame = (int)(-201131);
	public static final String DAQmx_Val_Switch_Topology_1130_4_Wire_64x1_Mux = (String)"1130/4-Wire 64x1 Mux";
	public static final int DAQmxErrorCOMultipleWritesBetweenSampClks = (int)(-200951);
	public static final String DAQmx_Val_Switch_Topology_2547_8x1_Mux = (String)"2547/8x1 Mux";
	public static final int DAQmxErrorPhysChanNotInTask = (int)(-200649);
	public static final int DAQmxWarningTrigmanLineAlreadyReserved = (int)(26005);
	public static final int DAQmxErrorChanCalTablePreScaledValsNotSpecd = (int)(-200936);
	public static final int DAQmx_Val_DeltaRosette = (int)15969;
	public static final int DAQmxErrorSwitchChanInUse = (int)(-200200);
	public static final int DAQmxErrorWatchdogStatesNotUniform = (int)(-209817);
	public static final int DAQmxErrorMDNSServiceInstanceAlreadyInUse = (int)(-201371);
	public static final int DAQmxErrorNetworkDeviceConfigurationLocked = (int)(-201248);
	public static final int DAQmxErrorDevDoesNotSupportSCXIComm = (int)(-201242);
	public static final int DAQmxErrorTooManyPostTrigSampsPerChan = (int)(-200575);
	public static final int DAQmxErrorDurationBasedNotSupportedForSpecifiedTimingMode = (int)(-209819);
	public static final int DAQmxErrorPALComponentCircularDependency = (int)(-50259);
	public static final int DAQmxErrorCannotSelfCalDuringExtCal = (int)(-200522);
	public static final int DAQmx_AI_RVDT_Sensitivity = (int)0x0903;
	public static final int DAQmx_AI_DCOffset = (int)0x2A89;
	public static final String DAQmx_Val_Switch_Topology_2530_4_Wire_32x1_Mux = (String)"2530/4-Wire 32x1 Mux";
	public static final int DAQmxErrorLines0To3ConfiguredForInput = (int)(-200122);
	public static final int DAQmxErrorCounterTimebaseRateNotFound = (int)(-200142);
	public static final int DAQmxErrorNoPathToDisconnect = (int)(-200182);
	public static final int DAQmxErrorLoggingSampsPerFileNotDivisible = (int)(-201402);
	public static final int DAQmx_DO_LineStates_StartState = (int)0x2972;
	public static final int DAQmx_Read_OpenCurrentLoopChans = (int)0x2A0A;
	public static final int DAQmxErrorSetupCalibrationNotCalled = (int)(-201486);
	public static final int DAQmxErrorLinesReservedForSCXIControl = (int)(-200159);
	public static final int DAQmxErrorClockMasterForExternalClockNotLongestPipeline = (int)(-201018);
	public static final int DAQmx_Dev_PCI_DevNum = (int)0x2328;
	public static final int DAQmxErrorRoutingDestTermPXIStarInSlot2_Routing = (int)(-89144);
	public static final int DAQmx_Exported_RdyForXferEvent_Lvl_ActiveLvl = (int)0x22B6;
	public static final int DAQmxErrorFileDoesNotExist = (int)(-26852);
	public static final String DAQmx_Val_Switch_Topology_2568_15_DPST = (String)"2568/15-DPST";
	public static final int DAQmxErrorPALDeviceInitializationFault = (int)(-50303);
	public static final int DAQmxErrorAIEveryNSampsEventIntervalNotMultipleOf2 = (int)(-200970);
	public static final int DAQmxErrorEveryNSampsTransferredFromBufferNotForInput = (int)(-200965);
	public static final int DAQmxWarningAccessoryConnectionCountIsInvalid = (int)(200058);
	public static final int DAQmxErrorIncompatibleSensorOutputAndDeviceInputRanges = (int)(-200357);
	public static final int DAQmx_AO_OutputType = (int)0x1108;
	public static final int DAQmxErrorCalibrationHandleInvalid = (int)(-200112);
	public static final int DAQmxWarningInvalidAttribute = (int)(26806);
	public static final int DAQmx_AI_Bridge_ShuntCal_ShuntCalAActualResistance = (int)0x2F79;
	public static final String DAQmx_Val_Switch_Topology_2530_4_Wire_Dual_16x1_Mux = (String)"2530/4-Wire Dual 16x1 Mux";
	public static final int DAQmxWarningPALDispatcherAlreadyExported = (int)(50500);
	public static final int DAQmx_Dev_AI_SampModes = (int)0x2FDC;
	public static final int DAQmxErrorInvalidCalArea = (int)(-200438);
	public static final int DAQmxErrorInvalidCalConstOscillatorPhaseDACValue = (int)(-200518);
	public static final int DAQmxErrorAIDuringCounter0DMAConflict = (int)(-200078);
	public static final int DAQmxErrorDelayFromStartTrigTooShort = (int)(-200333);
	public static final int DAQmxErrorResourcesInUseForRoute = (int)(-200369);
	public static final int DAQmx_CO_CtrTimebase_DigSync_Enable = (int)0x227A;
	public static final int DAQmx_SwitchChan_MaxACCarryPwr = (int)0x0642;
	public static final int DAQmxErrorMeasCalAdjustDirectPathOutputImpedance = (int)(-200507);
	public static final int DAQmxWarningPALResourceInitialized = (int)(50105);
	public static final int DAQmxErrorSetupCalNeededBeforeAdjustCal = (int)(-201005);
	public static final int DAQmxErrorInternalSampClkNotRisingEdge = (int)(-200890);
	public static final int DAQmxErrorWriteFailedBecauseWatchdogChangedLineDirection = (int)(-201433);
	public static final int DAQmx_Val_HighImpedance = (int)12527;
	public static final int DAQmx_DI_UsbXferReqCount = (int)0x3002;
	public static final int DAQmx_AI_TermCfg = (int)0x1097;
	public static final int DAQmxErrorChanCalRepeatedNumberInPreScaledVals = (int)(-200939);
	public static final int DAQmxWarningTrigmanUnsupportedOper = (int)(26001);
	public static final int DAQmxErrorInvalidHWProductNumber = (int)(-201058);
	public static final int DAQmx_Val_Finite = (int)10172;
	public static final int DAQmxErrorTooManyChansForInternalAIInputSrc = (int)(-200710);
	public static final int DAQmxErrorOperationNotPermittedWhileScanning = (int)(-200176);
	public static final int DAQmxErrorPhysicalChanDoesNotExist = (int)(-200170);
	public static final int DAQmx_AI_Bridge_ScaleType = (int)0x2F89;
	public static final int DAQmxErrorRTSISimMustMatchDevSim = (int)(-201205);
	public static final int DAQmx_CO_Pulse_Ticks_InitialDelay = (int)0x0298;
	public static final int DAQmxErrorInvalidSubsetLengthBeforeBreakBlock = (int)(-201210);
	public static final int DAQmxWarningPxiResmanSystemDescriptionFileNotFound = (int)(26400);
	public static final int DAQmxErrorDisconnectionRequiredInScanlist = (int)(-200639);
	public static final int DAQmx_Val_CountDown = (int)10124;
	public static final int DAQmxErrorZeroReversePolyScaleCoeffs = (int)(-200408);
	public static final int DAQmxErrorCantExceedSlotRelayDriveLimit = (int)(-201416);
	public static final int DAQmxErrorCannotAddNewDevsAfterTaskConfiguration = (int)(-200855);
	public static final int DAQmx_Val_Bit_TermCfg_Diff = (int)(1 << 2);
	public static final int DAQmx_Val_SwitchBlock = (int)15870;
	public static final int DAQmx_AO_UsbXferReqSize = (int)0x2A8F;
	public static final int DAQmxErrorEveryNSampsAcqIntoBufferEventAlreadyRegistered = (int)(-200966);
	public static final int DAQmxErrorCfgTEDSNotSupportedOnRT = (int)(-200808);
	public static final int DAQmxErrorNonBufferedAndHWTimed = (int)(-201025);
	public static final int DAQmxErrorSamplesCanNotYetBeWritten = (int)(-200292);
	public static final int DAQmx_Val_Seconds = (int)10364;
	public static final int DAQmxErrorChannelSizeTooBigForPortReadType = (int)(-200466);
	public static final int DAQmxErrorSampClkRateNotSupportedWithEAREnabled = (int)(-201097);
	public static final int DAQmx_CO_PulseDone = (int)0x190E;
	public static final String DAQmx_Val_Switch_Topology_2568_31_SPST = (String)"2568/31-SPST";
	public static final int DAQmxErrorSCXIModuleDoesNotSupportSimulation = (int)(-201155);
	public static final int DAQmxErrorInternalClkDCMBecameUnlocked = (int)(-200386);
	public static final int DAQmxErrorCAPIReservedParamNotZero = (int)(-200491);
	public static final int DAQmxErrorSwitchDifferentTopologyWhenScanning = (int)(-200191);
	public static final int DAQmx_Val_TwoPulseCounting = (int)10313;
	public static final int DAQmxErrorCustomTimingModeNotSet = (int)(-201344);
	public static final int DAQmxErrorReadyForTransferOutputTermNotSupportedGivenTimingType = (int)(-200913);
	public static final int DAQmxErrorAnalogMultiSampWriteNotSupported = (int)(-200539);
	public static final int DAQmxErrorPALFileReadFault = (int)(-50207);
	public static final String DAQmx_Val_Switch_Topology_2540_1_Wire_8x9_Matrix = (String)"2540/1-Wire 8x9 Matrix";
	public static final int DAQmxErrorNoRegenWhenUsingBrdMem = (int)(-200656);
	public static final int DAQmx_CI_Encoder_ZInput_DigFltr_Enable = (int)0x2205;
	public static final int DAQmxErrorActionSeparatorRequiredAfterBreakingConnectionInScanlist = (int)(-200637);
	public static final int DAQmxErrorPxiResmanModuleParseError = (int)(-26500);
	public static final int DAQmxErrorTrigmanUnsupportedOper = (int)(-26001);
	public static final int DAQmx_Dev_AI_ResistanceRngs = (int)0x2A15;
	public static final int DAQmxErrorFirmwareCouldntUpdate = (int)(-201167);
	public static final int DAQmxErrorCSeriesModSimMustMatchCDAQChassisSim = (int)(-201158);
	public static final int DAQmx_Logging_Pause = (int)0x2FE3;
	public static final int DAQmx_AnlgWin_PauseTrig_Coupling = (int)0x2237;
	public static final int DAQmxErrorPROMOnTEDSAlreadyWritten = (int)(-200823);
	public static final String DAQmx_Val_Switch_Topology_1128_4_Wire_16x1_Mux = (String)"1128/4-Wire 16x1 Mux";
	public static final int DAQmxErrorMissingRequiredScalingParameter = (int)(-201333);
	public static final int DAQmxWarningTimeout = (int)(26802);
	public static final int DAQmxWarningPALResourceNotAvailable = (int)(50101);
	public static final int DAQmx_Read_OverloadedChans = (int)0x2175;
	public static final int DAQmxErrorPALThreadControllerIsNotThreadCreator = (int)(-50602);
	public static final int DAQmxErrorSpecdPropertyValueIsIncompatibleWithSampleTimingType = (int)(-201122);
	public static final int DAQmx_AI_ChanCal_EnableCal = (int)0x2298;
	public static final String DAQmx_Val_Switch_Topology_2576_2_Wire_64x1_Mux = (String)"2576/2-Wire 64x1 Mux";
	public static final int DAQmxErrorSpecdPropertyValueIsIncompatibleWithSampleTimingResponseMode = (int)(-201120);
	public static final int DAQmxErrorAttributeNotSupportedInTaskContext = (int)(-200452);
	public static final int DAQmx_StartTrig_Delay = (int)0x1856;
	public static final int DAQmxErrorCannotRegisterDAQmxSoftwareEventWhileTaskIsRunning = (int)(-200960);
	public static final int DAQmx_ArmStartTrig_Type = (int)0x1414;
	public static final int DAQmxErrorMStudioMultiplePhysChansNotSupported = (int)(-200792);
	public static final int DAQmx_SwitchChan_MaxACCarryCurrent = (int)0x0648;
	public static final int DAQmx_Val_Pulse_Freq = (int)10119;
	public static final int DAQmxErrorCantUsePort1AloneGivenSampTimingTypeOn653x = (int)(-200899);
	public static final int DAQmx_AI_EddyCurrentProxProbe_Sensitivity = (int)0x2ABE;
	public static final int DAQmx_CI_CountEdges_TermCfg = (int)0x309B;
	public static final int DAQmxErrorCantSyncToExtStimulusFreqDuringCal = (int)(-200442);
	public static final int DAQmx_Val_ActiveLow = (int)10096;
	public static final int DAQmxErrorOddTotalBufferSizeToWrite = (int)(-200693);
	public static final int DAQmx_Val_ChangeDetectionEvent = (int)12511;
	public static final int DAQmxErrorGetPropertyNotInputBufferedTask = (int)(-200455);
	public static final int DAQmxErrorIOError = (int)(-26652);
	public static final int DAQmx_CI_Pulse_Time_DigFltr_MinPulseWidth = (int)0x2F0F;
	public static final String DAQmx_Val_Switch_Topology_2797_6x1_Terminated_Mux = (String)"2797/6x1 Terminated Mux";
	public static final int DAQmx_Val_Multicycle = (int)14614;
	public static final int DAQmxErrorPALRetryLimitExceeded = (int)(-50412);
	public static final int DAQmxErrorPropertyConflictsWithScale = (int)(-201061);
	public static final int DAQmxErrorDigLinesReservedOrUnavailable = (int)(-200587);
	public static final int DAQmx_AI_Thrmstr_B = (int)0x18CB;
	public static final int DAQmx_AI_Thrmstr_C = (int)0x18CA;
	public static final int DAQmx_AI_Thrmstr_A = (int)0x18C9;
	public static final int DAQmxErrorTrigmanUnknownError = (int)(-26000);
	public static final int DAQmxErrorBufferWithWaitMode = (int)(-200691);
	public static final int DAQmxErrorInvalidSCXISlotNumberSpecd = (int)(-201032);
	public static final int DAQmxWarningRecursiveCall = (int)(26803);
	public static final int DAQmx_AI_RosetteStrainGage_RosetteMeasType = (int)0x2FFD;
	public static final int DAQmx_AI_SoundPressure_Units = (int)0x1528;
	public static final int DAQmxErrorInadequateResolutionForTimebaseCal = (int)(-200721);
	public static final int DAQmx_CI_DupCountPrevent = (int)0x21AC;
	public static final int DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqRangeVals = (int)0x30C9;
	public static final int DAQmxErrorInvalidAttributeName = (int)(-201086);
	public static final int DAQmxErrorFewerThan2ScaledValues = (int)(-200433);
	public static final int DAQmxErrorEveryNSamplesEventNotSupportedForNonBufferedTasks = (int)(-200848);
	public static final int DAQmxErrorFirmwareTooNew = (int)(-201165);
	public static final int DAQmx_Val_Table = (int)10450;
	public static final int DAQmxErrorInvalidCalInputRef = (int)(-201180);
	public static final int DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalNoIrqOnDev = (int)(-200920);
	public static final int DAQmxErrorWriteWhenTaskNotRunningCOFreq = (int)(-200875);
	public static final int DAQmx_Val_Voltage = (int)10322;
	public static final int DAQmxErrorCanNotPerformOpWhenNoDevInTask = (int)(-200477);
	public static final int DAQmxWarningPXI5661_IncorrectlyConfigured = (int)(200062);
	public static final int DAQmxErrorDAQmxCantRetrieveStringDueToUnknownChar = (int)(-200810);
	public static final int DAQmxErrorInvalidSubsetLengthBeforeIfElseBlockInScript = (int)(-201009);
	public static final int DAQmx_Scale_Lin_YIntercept = (int)0x1228;
	public static final int DAQmx_AnlgLvl_PauseTrig_Src = (int)0x1370;
	public static final int DAQmx_Val_Pulse = (int)10265;
	public static final int DAQmxWarningPALPhysicalBufferEmpty = (int)(50408);
	public static final int DAQmxErrorCouldNotDownloadFirmwareHWDamaged = (int)(-200962);
	public static final int DAQmx_CI_CountEdges_Gate_DigFltrTimebaseRate = (int)0x30F4;
	public static final int DAQmx_SwitchDev_Topology = (int)0x193D;
	public static final int DAQmx_Carrier_SerialNum = (int)0x2A8A;
	public static final int DAQmx_AI_DigFltr_Type = (int)0x30BE;
	public static final int DAQmxErrorChanCalTableScaledValsNotSpecd = (int)(-200937);
	public static final int DAQmx_AI_DigFltr_Response = (int)0x30BF;
	public static final int DAQmxErrorExtMasterTimebaseRateNotSpecified = (int)(-200304);
	public static final int DAQmx_Exported_10MHzRefClk_OutputTerm = (int)0x226E;
	public static final int DAQmx_CO_Pulse_Time_InitialDelay = (int)0x18BC;
	public static final int DAQmxErrorEventPulseWidthOutOfRange = (int)(-200346);
	public static final int DAQmxErrorPALOSUnsupported = (int)(-50200);
	public static final int DAQmx_Val_Position_RVDT = (int)10353;
	public static final int DAQmx_CI_UsbXferReqSize = (int)0x2A92;
	public static final int DAQmx_Val_HaltOutputAndError = (int)14615;
	public static final int DAQmxErrorPALValueConflict = (int)(-50000);
	public static final int DAQmxWarningPALBadWriteOffset = (int)(50013);
	public static final int DAQmx_AO_UseOnlyOnBrdMem = (int)0x183A;
	public static final int DAQmxErrorNetworkTargetUnreachable = (int)(-201252);
	public static final int DAQmxErrorDigFilterEnabledMinPulseWidthNotCfg = (int)(-200771);
	public static final int DAQmx_Val_SCXI1124Range0to10V = (int)14631;
	public static final int DAQmx_Val_ChanPerLine = (int)0;
	public static final int DAQmx_CI_CountEdges_CountDir_DigFltr_MinPulseWidth = (int)0x21F2;
	public static final int DAQmxErrorChanNamesNotSpecdInCfgFile = (int)(-201083);
	public static final int DAQmxErrorCalTempNotSupported = (int)(-200338);
	public static final int DAQmx_Read_OvertemperatureChans = (int)0x3082;
	public static final int DAQmxErrorInvalidRelayName = (int)(-200202);
	public static final int DAQmxErrorInvalidSampAndMasterTimebaseRateCombo = (int)(-200173);
	public static final int DAQmx_Val_OnbrdMemFull = (int)10236;
	public static final int DAQmx_CI_Freq_StartingEdge = (int)0x0799;
	public static final int DAQmxErrorSwitchActionInListSpansMultipleDevices = (int)(-200053);
	public static final int DAQmxErrorDACRngLowNotMinusRefValNorZero = (int)(-200449);
	public static final int DAQmxErrorUserDefInfoStringTooLong = (int)(-201245);
	public static final int DAQmxErrorElvis2PhysicalChansFault = (int)(-201198);
	public static final int DAQmxErrorPALFileFault = (int)(-50209);
	public static final int DAQmxErrorCalInputsShortedNotSupported = (int)(-201289);
	public static final int DAQmxErrorCantReserveWatchdogTaskWhileOtherTasksReserved = (int)(-201477);
	public static final int DAQmxErrorDifferentAIInputSrcInOneChanGroup = (int)(-200572);
	public static final int DAQmxErrorMismatchedInputArraySizes = (int)(-200672);
	public static final int DAQmxErrorRatiometricDevicesMustUseExcitationForScaling = (int)(-201127);
	public static final int DAQmxErrorChanDoesNotSupportCompression = (int)(-200956);
	public static final int DAQmxErrorPxiResmanChassisSlotParseError = (int)(-26204);
	public static final int DAQmxWarningMultipleWritesBetweenSampClks = (int)(200033);
	public static final int DAQmxErrorDACRefValNotSet = (int)(-200540);
	public static final int DAQmx_Dev_CO_PhysicalChans = (int)0x2325;
	public static final int DAQmxWarningDeviceMayShutDownDueToHighTemp = (int)(200034);
	public static final int DAQmx_CI_Pulse_Ticks_DigFltr_Enable = (int)0x2F16;
	public static final int DAQmx_Exported_SampClk_DelayOffset = (int)0x21C4;
	public static final int DAQmx_Val_Strain_Gage = (int)10300;
	public static final int DAQmxErrorRoutingDestTermPXIStarXNotInSystemTimingSlot_Routing = (int)(-89159);
	public static final int DAQmxErrorSensorValTooHigh = (int)(-200535);
	public static final int DAQmx_CI_Velocity_Encoder_AInputDigFltr_Enable = (int)0x30E0;
	public static final int DAQmx_Scale_Table_PreScaledVals = (int)0x1237;
	public static final int DAQmx_Interlocked_HshkTrig_AssertedLvl = (int)0x22B9;
	public static final int DAQmx_AnlgEdge_StartTrig_Src = (int)0x1398;
	public static final int DAQmxErrorPALCalculationOverflow = (int)(-50175);
	public static final int DAQmxErrorCounterMultipleBufferedChannels = (int)(-201317);
	public static final int DAQmxWarningAISampRateTooLow = (int)(200017);
	public static final int DAQmxErrorMemMapEnabledForHWTimedNonBufferedAO = (int)(-200796);
	public static final int DAQmx_Val_Immediate = (int)10198;
	public static final int DAQmxErrorRoutingDestTermPXIStarInNonStarTriggerSlot_Routing = (int)(-89155);
	public static final int DAQmx_Cal_UserDefinedInfo = (int)0x1861;
	public static final int DAQmx_Val_T_Type_TC = (int)10086;
	public static final int DAQmxErrorSampClkRateAndDivCombo = (int)(-200273);
	public static final int DAQmx_DI_AcquireOn = (int)0x2966;
	public static final int DAQmxErrorMemMappingIncompatibleWithPhysChansInTask = (int)(-201130);
	public static final int DAQmxErrorIntermediateBufferFull = (int)(-200495);
	public static final int DAQmx_PersistedScale_AllowInteractiveEditing = (int)0x22D5;
	public static final int DAQmxErrorInvalidAODataWrite = (int)(-200561);
	public static final int DAQmx_CI_Encoder_BInputTermCfg = (int)0x30A5;
	public static final int DAQmxWarningDirCreateFault = (int)(26112);
	public static final int DAQmxErrorSampClkSrcInvalidForOutputValidForInput = (int)(-200610);
	public static final int DAQmxErrorMultipleDevIDsPerChassisSpecifiedInList = (int)(-200210);
	public static final int DAQmx_Watchdog_Timeout = (int)0x21A9;
	public static final int DAQmxErrorExpectedNumberOfChannelsVerificationFailed = (int)(-200464);
	public static final int DAQmxWarningPXIe5611_IncorrectlyConfigured = (int)(200077);
	public static final int DAQmx_Val_RefTrig = (int)10426;
	public static final int DAQmxErrorSyncPulseSrcInvalidForTask = (int)(-201361);
	public static final int DAQmxErrorIllegalAccessoryTypeForDeviceSpecd = (int)(-201046);
	public static final int DAQmx_Val_3point3V = (int)14621;
	public static final int DAQmxErrorDAQmxIsNotInstalledOnTarget = (int)(-209806);
	public static final int DAQmx_AI_AveragingWinSize = (int)0x2FEE;
	public static final int DAQmxErrorUnexpectedSeparatorInList = (int)(-200064);
	public static final int DAQmxErrorCannotQueryTerminalForSWArmStart = (int)(-201479);
	public static final int DAQmx_Val_AdvCmpltEvent = (int)12492;
	public static final int DAQmx_Val_Bit_TriggerUsageTypes_Reference = (int)(1 << 2);
	public static final int DAQmxErrorCantAllowConnectDACToGnd = (int)(-200669);
	public static final int DAQmxErrorRoutingDestTermPXIChassisNotIdentified_Routing = (int)(-89142);
	public static final int DAQmx_Val_Save_Overwrite = (int)(1 << 0);
	public static final int DAQmx_Write_SleepTime = (int)0x22B2;
	public static final int DAQmxErrorRepeatUntilTriggerLoopNotAllowedInBreakBlock = (int)(-201217);
	public static final int DAQmxErrorStrainGageCalibration = (int)(-200380);
	public static final int DAQmx_Val_SameAsSampTimebase = (int)10284;
	public static final int DAQmxErrorFileExists = (int)(-26109);
	public static final int DAQmxErrorRuntimeAborting_Routing = (int)(-88710);
	public static final int DAQmx_AI_Excit_Sense = (int)0x30FD;
	public static final int DAQmxErrorExcitationNotSupportedWhenTermCfgDiff = (int)(-200817);
	public static final int DAQmx_Read_ReadAllAvailSamp = (int)0x1215;
	public static final int DAQmx_AO_UsbXferReqCount = (int)0x3001;
	public static final int DAQmx_AO_MemMapEnable = (int)0x188F;
	public static final int DAQmx_AI_Voltage_Units = (int)0x1094;
	public static final int DAQmxWarningPXI5610_NotConfigured = (int)(200074);
	public static final int DAQmx_Write_AccessoryInsertionOrRemovalDetected = (int)0x3053;
	public static final int DAQmx_Val_Pt3916 = (int)10069;
	public static final int DAQmx_Val_Pt3911 = (int)12482;
	public static final int DAQmxErrorHystTrigLevelAIMax = (int)(-200425);
	public static final int DAQmxErrorFirmwareIsCorrupt = (int)(-201166);
	public static final int DAQmxErrorInvalidIPv4AddressFormat = (int)(-201272);
	public static final int DAQmxErrorInvalidAccessoryName = (int)(-201044);
	public static final int DAQmx_Val_Log = (int)15844;
	public static final int DAQmx_AO_FuncGen_Offset = (int)0x2A1B;
	public static final int DAQmx_CI_Encoder_AInputLogicLvlBehavior = (int)0x30A4;
	public static final int DAQmx_AnlgWin_PauseTrig_DigFltr_TimebaseRate = (int)0x2EF8;
	public static final int DAQmx_Val_Pt3920 = (int)10053;
	public static final int DAQmxErrorInvalidSignalTypeExportSignal = (int)(-200374);
	public static final int DAQmx_Val_PullDown = (int)15951;
	public static final int DAQmx_Val_ChangeDetection = (int)12504;
	public static final int DAQmxErrorNoReversePolyScaleCoeffs = (int)(-200406);
	public static final int DAQmx_Val_Position_EddyCurrentProximityProbe = (int)14835;
	public static final int DAQmxErrorChannelSizeTooBigForPortWriteType = (int)(-200465);
	public static final int DAQmx_Val_Pt3928 = (int)12483;
	public static final int DAQmxErrorLoggingModeNotSupportedNonBuffered = (int)(-201299);
	public static final int DAQmxErrorIntegerExpectedInScript = (int)(-200247);
	public static final int DAQmx_Val_Ticks = (int)10304;
	public static final int DAQmx_Val_Low = (int)10214;
	public static final int DAQmxErrorSuitableTimebaseNotFoundTimeCombo2 = (int)(-200746);
	public static final int DAQmx_RefTrig_AutoTriggered = (int)0x2EC2;
	public static final int DAQmxErrorLostRefClk = (int)(-201504);
	public static final int DAQmx_CO_Pulse_Time_Units = (int)0x18D6;
	public static final int DAQmxErrorPALSyncTimedOut = (int)(-50550);
	public static final int DAQmxErrorNoDevicesSupportCDAQSyncConnections = (int)(-201459);
	public static final int DAQmx_CI_TwoEdgeSep_First_DigFltr_MinPulseWidth = (int)0x2210;
	public static final int DAQmx_CI_CountEdges_Gate_DigFltrTimebaseSrc = (int)0x30F3;
	public static final int DAQmx_SwitchScan_WaitingForAdv = (int)0x17D9;
	public static final int DAQmx_Val_ActiveDrive = (int)12573;
	public static final int DAQmxErrorSwitchOpFailedDueToPrevError = (int)(-200674);
	public static final int DAQmxWarningDevNotSelfCalibratedWithDAQmx = (int)(200016);
	public static final int DAQmx_Buf_Input_BufSize = (int)0x186C;
	public static final int DAQmxErrorDevAbsentOrUnavailable = (int)(-200324);
	public static final int DAQmxErrorCannotReadWhenAutoStartFalseOnDemandAndTaskNotRunning = (int)(-200832);
	public static final int DAQmxErrorAutoConfigOfOfflineDevicesInvalid = (int)(-201465);
	public static final int DAQmxErrorClearIsLastInstructionInIfElseBlockInScript = (int)(-201012);
	public static final int DAQmx_Val_Period = (int)10256;
	public static final int DAQmxErrorPrptyGetSpecdActiveItemFailedDueToDifftValues = (int)(-200708);
	public static final int DAQmxErrorInvalidWirelessChannel = (int)(-201256);
	public static final int DAQmxErrorNetworkDAQDeviceNotSupported = (int)(-201247);
	public static final int DAQmxErrorUnableToContainCards = (int)(-201454);
	public static final int DAQmxErrorPALPhysicalBufferEmpty = (int)(-50408);
	public static final int DAQmxWarningPxiResmanChassisBridgeParseError = (int)(26205);
	public static final int DAQmx_Val_PCCard = (int)12585;
	public static final String DAQmx_Val_Switch_Topology_2564_8_DPST = (String)"2564/8-DPST";
	public static final int DAQmx_CI_Pulse_Ticks_TermCfg = (int)0x30B5;
	public static final int DAQmx_Val_SampClkActiveEdge = (int)14617;
	public static final int DAQmxErrorPxiResmanSystemDescriptionFileNotFound = (int)(-26400);
	public static final int DAQmx_AI_UsbXferReqSize = (int)0x2A8E;
	public static final int DAQmx_DigEdge_WatchdogExpirTrig_Edge = (int)0x21A5;
	public static final int DAQmx_Val_ChannelHighImpedance = (int)2;
	public static final int DAQmxErrorStreamDCMLock = (int)(-200313);
	public static final int DAQmx_CI_Period_DigFltr_TimebaseSrc = (int)0x21EE;
	public static final int DAQmxWarningFileExists = (int)(26109);
	public static final String DAQmx_Val_Switch_Topology_2597_6x1_Terminated_Mux = (String)"2597/6x1 Terminated Mux";
	public static final int DAQmx_AI_Temp_Units = (int)0x1033;
	public static final int DAQmx_CI_Period_Units = (int)0x18A3;
	public static final int DAQmx_AI_Bridge_ShuntCal_ShuntCalAResistance = (int)0x2F78;
	public static final int DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherProperty = (int)(-200774);
	public static final int DAQmxErrorInvalidTerm_Routing = (int)(-89129);
	public static final int DAQmxErrorPrescalerNot1ForInputTerminal = (int)(-200841);
	public static final int DAQmxErrorPFI0UsedForAnalogAndDigitalSrc = (int)(-200330);
	public static final int DAQmx_Val_Unknown = (int)12588;
	public static final int DAQmxErrorMStudioNoReversePolyScaleCoeffs = (int)(-200782);
	public static final int DAQmxErrorPALDeviceNotFound = (int)(-50300);
	public static final int DAQmx_Val_B_Type_TC = (int)10047;
	public static final String DAQmx_Val_Switch_Topology_2530_1_Wire_8x16_Matrix = (String)"2530/1-Wire 8x16 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2575_1_Wire_196x1_Mux = (String)"2575/1-Wire 196x1 Mux";
	public static final int DAQmxErrorUserDefInfoStringBadLength = (int)(-201267);
	public static final int DAQmxErrorDDCClkOutDCMBecameUnlocked = (int)(-200244);
	public static final int DAQmxErrorMultipleSubsytemCalibration = (int)(-201432);
	public static final int DAQmxWarningPxiResmanChassisSegmentParseError = (int)(26203);
	public static final int DAQmx_Exported_CtrOutEvent_OutputBehavior = (int)0x174F;
	public static final int DAQmx_SwitchChan_MaxACVoltage = (int)0x0651;
	public static final int DAQmxErrorPxiResmanChassisTriggerParseError = (int)(-26206);
	public static final int DAQmx_CI_Velocity_Encoder_AInputDigFltr_MinPulseWidth = (int)0x30E1;
	public static final int DAQmxErrorVoltageNotCalibrated = (int)(-201496);
	public static final int DAQmxWarningRateViolatesMinADCRate = (int)(200035);
	public static final int DAQmx_SampClk_Timebase_MasterTimebaseDiv = (int)0x1305;
	public static final int DAQmxErrorCantSaveTaskWithoutReplace = (int)(-200484);
	public static final int DAQmx_AI_Bridge_Balance_CoarsePot = (int)0x17F1;
	public static final int DAQmxErrorRoutingSrcTermPXIStarInSlot2_Routing = (int)(-89143);
	public static final int DAQmxErrorSensorValTooLow = (int)(-200536);
	public static final String DAQmx_Val_Switch_Topology_1128_2_Wire_4x8_Matrix = (String)"1128/2-Wire 4x8 Matrix";
	public static final int DAQmx_Val_Lvl = (int)10210;
	public static final int DAQmx_CI_Pulse_Time_DigSync_Enable = (int)0x2F12;
	public static final int DAQmxErrorPhysChanOutputType = (int)(-200432);
	public static final int DAQmx_Val_TwoPointLinear = (int)15898;
	public static final int DAQmxErrorPALResourceOwnedBySystem = (int)(-50100);
	public static final int DAQmx_DigEdge_WatchdogExpirTrig_Src = (int)0x21A4;
	public static final int DAQmxWarningIOError = (int)(26652);
	public static final int DAQmxWarningTrigmanInvalidClient = (int)(26009);
	public static final int DAQmxErrorInvalidDigDataWrite = (int)(-200562);
	public static final int DAQmxWarningPXI5610_IncorrectlyConfigured = (int)(200075);
	public static final int DAQmx_SelfCal_Supported = (int)0x1860;
	public static final int TRUE = (int)(1);
	public static final int DAQmx_Val_DegreesPerSecond = (int)16082;
	public static final int DAQmxErrorInvalidWirelessConfiguration = (int)(-201258);
	public static final int DAQmx_Exported_DataActiveEvent_Lvl_ActiveLvl = (int)0x1634;
	public static final int DAQmx_AIConv_MaxRate = (int)0x22C9;
	public static final int DAQmx_Val_Slave = (int)15889;
	public static final int DAQmxErrorCantSetWatchdogExpirationOnDigInChan = (int)(-200651);
	public static final int DAQmxErrorPROMOnTEDSContainsBasicTEDSData = (int)(-200824);
	public static final int DAQmxErrorInputFIFOOverflow = (int)(-200010);
	public static final int DAQmx_AnlgEdge_RefTrig_DigFltr_MinPulseWidth = (int)0x2EE7;
	public static final int DAQmx_DigEdge_AdvTrig_Edge = (int)0x1360;
	public static final int DAQmx_AI_Torque_Units = (int)0x2F77;
	public static final int DAQmx_Dev_AI_Gains = (int)0x2993;
	public static final int DAQmx_Write_RegenMode = (int)0x1453;
	public static final int DAQmx_DO_GenerateOn = (int)0x2969;
	public static final int DAQmxErrorInvalidAOChanOrder = (int)(-200219);
	public static final int DAQmxErrorInvalidCDAQSlotNumberSpecd = (int)(-201159);
	public static final int DAQmx_CI_CountEdges_Gate_DigFltrMinPulseWidth = (int)0x30F2;
	public static final int DAQmxErrorPALResourceNotInitialized = (int)(-50104);
	public static final int DAQmxErrorSoftwareTooNewForSelfCalibrationData = (int)(-201146);
	public static final int DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseSrc = (int)0x2FB5;
	public static final int DAQmxWarningPALFirmwareFault = (int)(50151);
	public static final int DAQmx_AO_Max = (int)0x1186;
	public static final int DAQmxErrorLinesUsedForHandshakingInputNotForStaticInput = (int)(-200725);
	public static final int DAQmx_SwitchChan_MaxDCCarryCurrent = (int)0x0647;
	public static final int DAQmxErrorCannotStoreCalConst = (int)(-200074);
	public static final int DAQmx_PhysicalChan_TEDS_VersionNum = (int)0x21DD;
	public static final int DAQmxErrorFirmwareUpdateAutomaticManagementEnabled = (int)(-201487);
	public static final int DAQmxErrorDeviceInfoFailedPXIChassisNotIdentified = (int)(-201059);
	public static final int DAQmxErrorOffsetTooLarge = (int)(-200269);
	public static final int DAQmx_SwitchChan_MaxDCSwitchPwr = (int)0x0649;
	public static final int DAQmxErrorPxiResmanPciDescriptionStringParseError = (int)(-26550);
	public static final int DAQmx_AI_RTD_A = (int)0x1010;
	public static final int DAQmx_AI_RTD_B = (int)0x1011;
	public static final int DAQmx_AI_RTD_C = (int)0x1013;
	public static final int DAQmxErrorInvalidWaitDurationBeforeBreakBlock = (int)(-201211);
	public static final int DAQmx_AI_RawDataCompressionType = (int)0x22D8;
	public static final int DAQmx_AnlgWin_PauseTrig_DigFltr_TimebaseSrc = (int)0x2EF7;
	public static final int DAQmx_Read_RawDataWidth = (int)0x217A;
	public static final int DAQmxWarningSampClkRateAboveDevSpecs = (int)(200036);
	public static final int DAQmx_AIConv_TimebaseDiv = (int)0x1335;
	public static final int DAQmxErrorRateTooFastForHWTSP = (int)(-201410);
	public static final int DAQmxErrorNoForwardPolyScaleCoeffs = (int)(-200405);
	public static final int DAQmx_AI_Thrmcpl_CJCVal = (int)0x1036;
	public static final int DAQmx_AI_ChanCal_ScaleType = (int)0x229C;
	public static final int DAQmx_DigEdge_StartTrig_DigFltr_TimebaseRate = (int)0x2226;
	public static final int DAQmx_AI_DigFltr_Highpass_CutoffFreq = (int)0x30C2;
	public static final int DAQmxWarningPALBadThreadMultitask = (int)(50019);
	public static final int DAQmx_CI_CountEdges_GateWhen = (int)0x30F5;
	public static final int DAQmxErrorFirmwareVersionOlderThanInstalledVersion = (int)(-201490);
	public static final int DAQmx_AI_Impedance = (int)0x0062;
	public static final int DAQmxErrorCouldNotConnectToServer_Routing = (int)(-88900);
	public static final int DAQmxErrorSWObjectsFoundInFile = (int)(-201075);
	public static final int DAQmxErrorInvalidSubsetLengthInScript = (int)(-200032);
	public static final int DAQmx_Exported_PauseTrig_Lvl_ActiveLvl = (int)0x1616;
	public static final int DAQmxWarningPALBadDataSize = (int)(50005);
	public static final int DAQmx_SwitchDev_NumSwitchChans = (int)0x18E8;
	public static final int DAQmxErrorInvalidPhysicalChanForCal = (int)(-200444);
	public static final int DAQmxErrorMarkerPosInvalidBeforeIfElseBlockInScript = (int)(-201010);
	public static final int DAQmx_Val_FromCustomScale = (int)10065;
	public static final int DAQmx_Val_8MHzTimebase = (int)16023;
	public static final int DAQmxErrorStrainShuntCaNotSupported = (int)(-201203);
	public static final int DAQmx_Val_Custom = (int)10137;
	public static final int DAQmx_StartTrig_Term = (int)0x2F1E;
	public static final int DAQmxWarningTableCRCNotCorrect = (int)(200045);
	public static final int DAQmx_Val_Highpass = (int)16072;
	public static final int DAQmxErrorGenerateOrFiniteWaitExpectedBeforeBreakBlock = (int)(-201222);
	public static final int DAQmxErrorInvalidDigitalModulationUserDefinedWaveform = (int)(-201110);
	public static final String DAQmx_Val_Switch_Topology_1128_1_Wire_64x1_Mux = (String)"1128/1-Wire 64x1 Mux";
	public static final int DAQmxErrorResourceAlreadyReserved = (int)(-200022);
	public static final int DAQmx_AI_Bridge_Cfg = (int)0x0087;
	public static final int DAQmx_Scale_Map_ScaledMax = (int)0x1229;
	public static final int DAQmx_Watchdog_CO_ExpirState = (int)0x3060;
	public static final int DAQmxErrorRecursiveCall = (int)(-26803);
	public static final int DAQmx_Hshk_StartCond = (int)0x22C3;
	public static final String DAQmx_Val_Switch_Topology_1160_16_SPDT = (String)"1160/16-SPDT";
	public static final int DAQmx_Sys_DevNames = (int)0x193B;
	public static final int DAQmxErrorAttributeNotFound = (int)(-26653);
	public static final int DAQmx_AnlgWin_RefTrig_Coupling = (int)0x1857;
	public static final int DAQmx_Val_mVoltsPerG = (int)12509;
	public static final int DAQmx_PhysicalChan_CO_SupportedOutputTypes = (int)0x2FDB;
	public static final int DAQmxErrorNoPathAvailableBetween2SwitchChans = (int)(-200180);
	public static final int DAQmxErrorAIMaxTooSmall = (int)(-200580);
	public static final int DAQmxWarningUserDefinedInfoTooLong = (int)(200025);
	public static final int DAQmxErrorInvalidCalConstOscillatorFreqDACValue = (int)(-200519);
	public static final int DAQmxErrorProductTypeAndProductNumberConflict = (int)(-201041);
	public static final int DAQmx_Val_ReservedForRouting = (int)10441;
	public static final String DAQmx_Val_Switch_Topology_2531_1_Wire_Dual_8x32_Matrix = (String)"2531/1-Wire Dual 8x32 Matrix";
	public static final int DAQmxWarningPXIe5665_5605_IncorrectlyConfigured = (int)(200070);
	public static final int DAQmx_Exported_AdvCmpltEvent_Pulse_Polarity = (int)0x1652;
	public static final int DAQmx_AIConv_Src = (int)0x1502;
	public static final int DAQmxErrorPALBadAddressClass = (int)(-50015);
	public static final int DAQmx_Write_OpenCurrentLoopChansExist = (int)0x29EA;
	public static final int DAQmx_Exported_AIHoldCmpltEvent_PulsePolarity = (int)0x18EE;
	public static final int DAQmxErrorReferenceFrequencyInvalid = (int)(-200156);
	public static final int DAQmxErrorCouldNotReserveRequestedTrigLine = (int)(-200225);
	public static final int DAQmx_Val_Load = (int)10440;
	public static final int DAQmxErrorReferenceVoltageInvalid = (int)(-200153);
	public static final int DAQmxErrorInvalidCfgCalAdjustDirectPathOutputImpedance = (int)(-200514);
	public static final int DAQmx_AI_Strain_Units = (int)0x0981;
	public static final int DAQmxErrorInvalidRoutingSourceTerminalName_Routing = (int)(-89120);
	public static final int DAQmxErrorZeroForwardPolyScaleCoeffs = (int)(-200407);
	public static final int DAQmxErrorChangeDetectionOutputTermNotSupportedGivenTimingType = (int)(-200914);
	public static final int DAQmxErrorReadWaitNextSampClkWaitMismatchTwo = (int)(-200989);
	public static final int DAQmxErrorDigDevChansSpecdInModeOtherThanParallel = (int)(-201035);
	public static final int DAQmxErrorPALInvalidAddressComponent = (int)(-50806);
	public static final int DAQmxErrorMultScanOpsInOneChassis = (int)(-200619);
	public static final int DAQmxErrorWaitUntilTriggerNotAllowedInBreakBlock = (int)(-201216);
	public static final int DAQmx_Val_AnlgLvl = (int)10101;
	public static final int DAQmx_Dev_AI_VoltageIntExcitRangeVals = (int)0x29CA;
	public static final int DAQmx_CI_Encoder_AInput_DigFltr_TimebaseRate = (int)0x21FE;
	public static final String DAQmx_Val_Switch_Topology_2531_1_Wire_4x128_Matrix = (String)"2531/1-Wire 4x128 Matrix";
	public static final int DAQmxErrorPALSocketListenerAlreadyRegistered = (int)(-50501);
	public static final int DAQmx_DI_DigSync_Enable = (int)0x2ED6;
	public static final int DAQmx_Task_Name = (int)0x1276;
	public static final int DAQmx_Val_RectangularRosette = (int)15968;
	public static final int DAQmx_CI_PulseWidth_Units = (int)0x0823;
	public static final int DAQmxErrorUnableToDetectExtStimulusFreqDuringCal = (int)(-200441);
	public static final int DAQmx_CI_Velocity_Encoder_AInputDigFltr_TimebaseRate = (int)0x30E3;
	public static final int DAQmxErrorSwitchCannotDriveMultipleTrigLines = (int)(-200203);
	public static final int DAQmx_Val_Automatic = (int)16097;
	public static final int DAQmx_Val_PatternMatches = (int)10254;
	public static final int DAQmx_Val_OverwriteUnreadSamps = (int)10252;
	public static final int DAQmxErrorNestingNotAllowedInBreakBlock = (int)(-201219);
	public static final int DAQmxErrorInputFIFOOverflowDuringCalibrationOnFullSpeedUSB = (int)(-201189);
	public static final int DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunning = (int)(-200846);
	public static final int DAQmxErrorAIMinNotSpecified = (int)(-200694);
	public static final int DAQmx_CI_CountEdges_DigFltr_MinPulseWidth = (int)0x21F7;
	public static final int DAQmxErrorPxiResmanChassisBridgeNotFound = (int)(-26201);
	public static final int DAQmx_AI_Lowpass_SwitchCap_OutClkDiv = (int)0x1887;
	public static final int DAQmx_AO_Min = (int)0x1187;
	public static final String DAQmx_Val_Switch_Topology_1195_Quad_4x1_Mux = (String)"1195/Quad 4x1 Mux";
	public static final int DAQmx_AI_Velocity_IEPESensor_dBRef = (int)0x2FF5;
	public static final int DAQmxWarningTrigmanConflictingRoute = (int)(26008);
	public static final String DAQmx_Val_Switch_Topology_2576_2_Wire_Dual_32x1_Mux = (String)"2576/2-Wire Dual 32x1 Mux";
	public static final int DAQmxErrorInvalidRefClkSrcGivenSampClkSrc = (int)(-200383);
	public static final int DAQmx_Val_Bits = (int)10109;
	public static final int DAQmxErrorRoutingPathNotAvailable_Routing = (int)(-89124);
	public static final int DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2 = (int)(-200704);
	public static final int DAQmxErrorLeadingUnderscoreInString = (int)(-200555);
	public static final int DAQmxErrorNoIEPEWithACNotAllowed = (int)(-201498);
	public static final int DAQmx_DO_Overcurrent_AutoReenable = (int)0x2A86;
	public static final int DAQmx_AI_FilterDelayAdjustment = (int)0x3074;
	public static final int DAQmxErrorTEDSLinearMappingSlopeZero = (int)(-200764);
	public static final int DAQmxErrorRecordNotAvailable = (int)(-200007);
	public static final int DAQmx_Val_Pulse_Ticks = (int)10268;
	public static final int DAQmxErrorAccessoryPowerTripped = (int)(-201343);
	public static final int DAQmxErrorNoExternalSyncPulseDetected = (int)(-201347);
	public static final int DAQmxErrorCOReadyForNewValNotSupportedWithHWTimedSinglePoint = (int)(-200975);
	public static final int DAQmxErrorRetriggeringFiniteCONotAllowed = (int)(-201439);
	public static final int DAQmx_CI_TwoEdgeSep_First_DigFltr_Enable = (int)0x220F;
	public static final int DAQmxErrorBadDDSSource = (int)(-201366);
	public static final int DAQmxErrorCantConfigureTEDSForChan = (int)(-200791);
	public static final int DAQmxErrorCalibrationFailedAIOutOfRange = (int)(-201294);
	public static final int DAQmx_CI_Encoder_BInputLogicLvlBehavior = (int)0x30A6;
	public static final int DAQmxErrorPALResourceNotAvailable = (int)(-50101);
	public static final int DAQmx_CI_CtrTimebase_DigFltr_TimebaseSrc = (int)0x2273;
	public static final int DAQmxErrorWatchdogExpirationTristateNotSpecdForEntirePort = (int)(-200654);
	public static final int DAQmx_CI_Freq_DigFltr_TimebaseSrc = (int)0x21E9;
	public static final int DAQmxErrorTimeoutExceeded = (int)(-200221);
	public static final int DAQmxErrorSCXIModuleNotFound = (int)(-200073);
	public static final int DAQmx_CI_Pulse_Freq_TermCfg = (int)0x30B1;
	public static final String DAQmx_Val_Switch_Topology_2584_Independent = (String)"2584/Independent";
	public static final int DAQmxErrorInvalidAIOffsetCalConst = (int)(-200717);
	public static final int DAQmx_Dev_AI_MaxMultiChanRate = (int)0x298D;
	public static final int DAQmx_CI_Pulse_Time_DigFltr_Enable = (int)0x2F0E;
	public static final int DAQmx_CO_Pulse_HighTime = (int)0x18BA;
	public static final int DAQmxErrorChannelNameGenerationNumberTooBig = (int)(-200600);
	public static final int DAQmxErrorBuiltInCJCSrcNotSupported = (int)(-200576);
	public static final int DAQmxErrorAOMinMaxNotSupportedDACOffsetValInappropriate = (int)(-200870);
	public static final int DAQmxErrorSamplesNoLongerAvailable = (int)(-200279);
	public static final int DAQmxErrorModuleMismatchInSameTimedTask = (int)(-201399);
	public static final String DAQmx_Val_Switch_Topology_1129_2_Wire_8x32_Matrix = (String)"1129/2-Wire 8x32 Matrix";
	public static final int DAQmx_Val_Yield = (int)12525;
	public static final int DAQmxErrorPxiResmanControllerFileNotFound = (int)(-26300);
	public static final int DAQmx_Val_Bit_CouplingTypes_Ground = (int)(1 << 2);
	public static final int DAQmx_AnlgWin_RefTrig_DigFltr_TimebaseRate = (int)0x2EEE;
	public static final int DAQmxErrorTEDSMultipleCalTemplatesNotSupported = (int)(-200755);
	public static final int DAQmxErrorInternalTimebaseSourceDivisorCombo = (int)(-200135);
	public static final int DAQmxErrorDevAbsentOrUnavailable_Routing = (int)(-89130);
	public static final int DAQmxErrorSwitchDifferentSettlingTimeWhenScanning = (int)(-200178);
	public static final int DAQmxErrorPALMemoryHeapNotEmpty = (int)(-50355);
	public static final int DAQmx_CI_TwoEdgeSep_SecondTerm = (int)0x18AE;
	public static final int DAQmx_AO_PowerAmp_ScalingCoeff = (int)0x3063;
	public static final int DAQmx_Scale_Map_ScaledMin = (int)0x1230;
	public static final int DAQmxErrorCJCChanNameMustBeSetWhenCJCSrcIsScannableChan = (int)(-201085);
	public static final String DAQmx_Val_Switch_Topology_1128_Independent = (String)"1128/Independent";
	public static final int DAQmxErrorLinesUsedForStaticInputNotForHandshakingInput = (int)(-200726);
	public static final int DAQmxErrorDigInputOverrun = (int)(-200715);
	public static final int DAQmx_CI_TCReached = (int)0x0150;
	public static final int DAQmx_Scale_Table_ScaledVals = (int)0x1236;
	public static final int DAQmxErrorInvalidSCXIChassisAddress = (int)(-201193);
	public static final int DAQmxErrorCalibrationDataConflictCouldNotBeResolved = (int)(-201147);
	public static final int DAQmxErrorFirmwareVersionSameAsInstalledVersion = (int)(-201491);
	public static final int DAQmxErrorInvalidLocalChanName = (int)(-201069);
	public static final int DAQmxErrorInvalidRoutingSourceTerminalName = (int)(-200040);
	public static final int DAQmxErrorNonbufferedReadMoreThanSampsPerChan = (int)(-200655);
	public static final int DAQmxWarningHandlerNotFound = (int)(26657);
	public static final int DAQmx_CI_TwoEdgeSep_SecondLogicLvlBehavior = (int)0x30AE;
	public static final int DAQmx_Val_Local = (int)16095;
	public static final int DAQmx_CI_CountEdges_CountReset_Term = (int)0x2FB1;
	public static final int DAQmx_DI_DigFltr_Enable = (int)0x21D6;
	public static final int DAQmxErrorAOMinMaxNotSupportedDACRefValTooSmall = (int)(-200868);
	public static final int DAQmxErrorLineConflictCDAQ = (int)(-201133);
	public static final int DAQmxErrorConnectionSeparatorAtEndOfList = (int)(-200059);
	public static final int DAQmxErrorSCXI1126ThreshHystCombination = (int)(-200223);
	public static final int DAQmxErrorEveryNSampsEventAlreadyRegistered = (int)(-200881);
	public static final int DAQmx_CI_CountEdges_CountReset_LogicLvlBehavior = (int)0x30A0;
	public static final int DAQmxErrorMultiDevsInTask = (int)(-200558);
	public static final int DAQmx_AI_DataXferReqCond = (int)0x188B;
	public static final String DAQmx_Val_Switch_Topology_2554_4x1_Mux = (String)"2554/4x1 Mux";
	public static final int DAQmx_Val_Best50HzRejection = (int)14713;
	public static final int DAQmx_Dev_Accessory_ProductTypes = (int)0x2F6D;
	public static final int DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseSrc = (int)0x2211;
	public static final int DAQmxErrorChanVersionNew = (int)(-200469);
	public static final int DAQmx_Val_CreateOrReplace = (int)15847;
	public static final int DAQmx_Val_HalfBridgeI = (int)10188;
	public static final int DAQmxErrorInvalidAttributeValue = (int)(-200077);
	public static final int DAQmxErrorTEDSNotSupported = (int)(-200741);
	public static final int DAQmx_Val_ResetTimer = (int)0;
	public static final int DAQmx_Val_MillivoltsPerMillimeterPerSecond = (int)15963;
	public static final int DAQmxErrorInvalidChannel = (int)(-200087);
	public static final int DAQmxErrorSelfCalFailedExtNoiseOrRefVoltageOutOfCal = (int)(-200545);
	public static final int DAQmxWarningFileNotFound = (int)(26103);
	public static final int DAQmx_CI_MemMapEnable = (int)0x2ED2;
	public static final int DAQmxErrorInvalidNumOfPhysChansForTeeRosette = (int)(-201446);
	public static final int DAQmxErrorTooManyChansForAnalogRefTrig = (int)(-200264);
	public static final int DAQmx_Val_FootPounds = (int)15884;
	public static final int DAQmx_SyncPulse_SyncTime = (int)0x223E;
	public static final int DAQmxErrorSharingDifferentWireModes = (int)(-201436);
	public static final int DAQmxErrorRoutingSrcTermPXIChassisNotIdentified_Routing = (int)(-89141);
	public static final int DAQmxWarningPALFunctionNotFound = (int)(50255);
	public static final int DAQmxErrorClearTriggerNotAllowedInBreakBlock = (int)(-201220);
	public static final int DAQmx_AI_RTD_R0 = (int)0x1030;
	public static final int DAQmxErrorInvalidSubsetLengthWithinLoopInScript = (int)(-200249);
	public static final int DAQmx_CI_TwoEdgeSep_First_DigSync_Enable = (int)0x2213;
	public static final int DAQmxErrorDigFilterIntervalNotEqualForLines = (int)(-200646);
	public static final int DAQmx_Dev_AO_PhysicalChans = (int)0x231F;
	public static final int DAQmxErrorExpectedSeparatorInList = (int)(-200061);
	public static final int DAQmxErrorInvalidAIInputSrc = (int)(-201181);
	public static final int DAQmxErrorDuplicatePhysicalChansNotSupported = (int)(-200072);
	public static final int DAQmxErrorNumSampsToWaitNotGreaterThanZeroInScript = (int)(-200850);
	public static final int DAQmx_ChanDescr = (int)0x1926;
	public static final int DAQmxErrorHystTrigLevelAIMin = (int)(-200421);
	public static final int DAQmxErrorBothAnalogAndDigitalModulationEnabled = (int)(-201108);
	public static final int DAQmx_Val_mVoltsPerMicron = (int)14840;
	public static final int DAQmxErrorSCXICommDevConnector0MustBeCabledToModule = (int)(-201241);
	public static final String DAQmx_Val_Switch_Topology_2790_Independent = (String)"2790/Independent";
	public static final int DAQmxErrorCompressedSampSizeExceedsResolution = (int)(-200957);
	public static final int DAQmxErrorLinesAlreadyReservedForOutput = (int)(-200597);
	public static final int DAQmxWarningInputTerminationOverloaded = (int)(200004);
	public static final int DAQmx_Val_K_Type_TC = (int)10073;
	public static final int DAQmx_AO_FuncGen_Type = (int)0x2A18;
	public static final int DAQmx_AI_DigFltr_Types = (int)0x3107;
	public static final int DAQmx_Dev_BusType = (int)0x2326;
	public static final int DAQmxErrorWriteFailsBufferSizeAutoConfigured = (int)(-200547);
	public static final int DAQmxErrorInvalidDateTimeInEEPROM = (int)(-200501);
	public static final int DAQmxErrorPALResourceNotReserved = (int)(-50102);
	public static final int DAQmxErrorVirtualTEDSDataFileError = (int)(-200827);
	public static final int DAQmxErrorPALOSInitializationFault = (int)(-50201);
	public static final int DAQmxErrorElvisPrototypingBoardRemoved = (int)(-201200);
	public static final int DAQmxErrorIncorrectDataType = (int)(-26656);
	public static final int DAQmxErrorPowerSupplyConfigurationFailed = (int)(-201173);
	public static final int DAQmxErrorClkDoublerDCMBecameUnlocked = (int)(-200242);
	public static final int DAQmx_AI_LVDT_Sensitivity = (int)0x0939;
	public static final int DAQmxErrorPALTransferAborted = (int)(-50405);
	public static final int DAQmxErrorNotActiveResourceManager = (int)(-26807);
	public static final int DAQmx_AnlgLvl_PauseTrig_Coupling = (int)0x2236;
	public static final int DAQmx_Read_SleepTime = (int)0x22B0;
	public static final int DAQmxErrorPALComponentTooNew = (int)(-50253);
	public static final int DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseSrc = (int)0x2F18;
	public static final int DAQmx_Val_Freq = (int)10179;
	public static final int DAQmxErrorInconsistentUnitsSpecified = (int)(-200212);
	public static final int DAQmxErrorInvalidTimeFormat = (int)(-201036);
	public static final int DAQmxErrorDSFFailedToResetStream = (int)(-200586);
	public static final int DAQmxWarningPALLogicalBufferEmpty = (int)(50406);
	public static final int DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove_Routing = (int)(-89146);
	public static final int DAQmx_AI_Bridge_Balance_FinePot = (int)0x18F4;
	public static final int DAQmxErrorTableScaleNumPreScaledAndScaledValsNotEqual = (int)(-200350);
	public static final int DAQmx_MasterTimebase_Rate = (int)0x1495;
	public static final int DAQmxErrorWatchdogChannelExpirationStateNotSpecified = (int)(-209813);
	public static final int DAQmxErrorChanNotInTask = (int)(-200486);
	public static final int DAQmx_CI_Pulse_Ticks_DigFltr_MinPulseWidth = (int)0x2F17;
	public static final int DAQmxErrorInvalidCalGain = (int)(-200749);
	public static final int DAQmxErrorInvalidDelaySampRateBelowPhaseShiftDCMThresh = (int)(-200381);
	public static final int DAQmx_SampClk_DigFltr_TimebaseSrc = (int)0x2220;
	public static final int DAQmxErrorExportTwoSignalsOnSameTerminal = (int)(-200607);
	public static final int DAQmx_Exported_CtrOutEvent_Pulse_Polarity = (int)0x1718;
	public static final int DAQmx_AnlgWin_RefTrig_DigFltr_Enable = (int)0x2EEB;
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_4x64_Matrix = (String)"1130/1-Wire 4x64 Matrix";
	public static final int DAQmxErrorCDAQMissingDSAMasterForChanExpansion = (int)(-201484);
	public static final int DAQmx_Exported_RefTrig_Pulse_Polarity = (int)0x0591;
	public static final int DAQmxWarningOnlyGainCalibrated = (int)(200049);
	public static final int DAQmxErrorWaveformNotInMem = (int)(-200312);
	public static final int DAQmxErrorPALBadWindowType = (int)(-50016);
	public static final int DAQmxErrorNoAdvTrigForMultiDevScan = (int)(-200323);
	public static final int DAQmxErrorTristateLogicLevelNotSpecdForEntirePort = (int)(-201394);
	public static final int DAQmxErrorCIInvalidTimingSrcForSampClkDueToSampTimingType = (int)(-200800);
	public static final int DAQmx_Val_Position_LinEncoder = (int)10361;
	public static final int DAQmxErrorTEDSIncompatibleSensorAndMeasType = (int)(-200756);
	public static final int DAQmx_Read_AvailSampPerChan = (int)0x1223;
	public static final int DAQmx_Val_SampleClock = (int)12487;
	public static final int DAQmx_CI_PulseWidth_StartingEdge = (int)0x0825;
	public static final int DAQmx_Exported_AIConvClk_OutputTerm = (int)0x1687;
	public static final int DAQmxErrorPowerupTristateNotSpecdForEntirePort = (int)(-200653);
	public static final int DAQmxWarningPXISystemDescriptionParseError = (int)(26809);
	public static final int DAQmxErrorNumPtsToComputeNotPositive = (int)(-200401);
	public static final int DAQmx_Dev_AI_TrigUsage = (int)0x2986;
	public static final int DAQmxErrorCOOverrun = (int)(-201318);
	public static final int DAQmxErrorFREQOUTCannotProduceDesiredFrequency = (int)(-200148);
	public static final int DAQmxErrorSampleRateNumChansConvertPeriodCombo = (int)(-200081);
	public static final int DAQmxErrorDiskFull = (int)(-201305);
	public static final int DAQmxErrorDACRngLowNotEqualToMinusRefVal = (int)(-200670);
	public static final int DAQmx_Val_Best60HzRejection = (int)14714;
	public static final int DAQmx_Val_ChannelCurrent = (int)1;
	public static final int DAQmxErrorSampClkTimebaseSrcInvalid = (int)(-201088);
	public static final int DAQmx_PersistedTask_Author = (int)0x22CC;
	public static final int DAQmxErrorAOMinMaxNotSupportedDACRangeTooSmall = (int)(-200873);
	public static final int DAQmx_DI_DigFltr_MinPulseWidth = (int)0x21D7;
	public static final int DAQmxErrorFileAlreadyOpened = (int)(-201306);
	public static final int DAQmx_Val_OnBrdMemNotFull = (int)10242;
	public static final int DAQmx_Val_ConstVal = (int)10116;
	public static final int DAQmxErrorTEDSMappingMethodInvalidOrUnsupported = (int)(-200765);
	public static final int DAQmxErrorExtCalDateTimeNotDAQmx = (int)(-200543);
	public static final int DAQmxErrorPALTransferOverwritten = (int)(-50410);
	public static final int DAQmx_Val_Velocity_IEPESensor = (int)15966;
	public static final int DAQmxErrorDDCClkOutDCMLock = (int)(-200243);
	public static final int DAQmxErrorACCouplingNotAllowedWith50OhmImpedance = (int)(-200411);
	public static final int DAQmx_Dev_AI_PhysicalChans = (int)0x231E;
	public static final int DAQmx_Write_OvertemperatureChans = (int)0x3083;
	public static final int DAQmxErrorCannotTristateTerm = (int)(-200253);
	public static final int DAQmx_SwitchChan_MaxDCCarryPwr = (int)0x0643;
	public static final int DAQmx_AI_RemoveFilterDelay = (int)0x2FBD;
	public static final int DAQmx_DO_Overcurrent_ReenablePeriod = (int)0x2A87;
	public static final int DAQmx_CI_SampClkOverrunSentinelVal = (int)0x3094;
	public static final int DAQmxErrorInvalidWaveformLengthWithinLoopInScript = (int)(-200250);
	public static final int DAQmx_Val_LossyLSBRemoval = (int)12556;
	public static final int DAQmxErrorChanSizeTooBigForU16PortWrite = (int)(-200879);
	public static final int DAQmx_CI_Period_MeasTime = (int)0x192D;
	public static final int DAQmxErrorExpectedTerminatorInList = (int)(-200063);
	public static final int DAQmxErrorDataOverwrittenInDeviceMemory = (int)(-200004);
	public static final int DAQmx_Val_AHighBHigh = (int)10040;
	public static final int DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseRate = (int)0x2FB6;
	public static final String DAQmx_Val_Switch_Topology_2503_4_Wire_12x1_Mux = (String)"2503/4-Wire 12x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2576_Independent = (String)"2576/Independent";
	public static final int DAQmx_Val_CountEdges = (int)10125;
	public static final int DAQmx_AI_OpenThrmcplDetectEnable = (int)0x2F72;
	public static final int DAQmxErrorCantPrimeWithEmptyBuffer = (int)(-201435);
	public static final int DAQmxErrorInvalidCfgCalAdjustMainPathPreAmpGain = (int)(-200511);
	public static final int DAQmx_AI_LeadWireResistance = (int)0x17EE;
	public static final int DAQmxWarningUnableToDisconnectPorts = (int)(200059);
	public static final int DAQmxErrorDeviceNameContainsNonprintableCharacters_Routing = (int)(-88719);
	public static final int DAQmx_CI_CtrTimebase_DigFltr_Enable = (int)0x2271;
	public static final int DAQmxErrorCantSetPropertyTaskNotRunningCommitted = (int)(-200971);
	public static final String DAQmx_Val_Switch_Topology_1166_16_DPDT = (String)"1166/16-DPDT";
	public static final int DAQmxErrorSampToWritePerChanNotMultipleOfIncr = (int)(-200584);
	public static final int DAQmxErrorF64PrptyValNotUnsignedInt = (int)(-200394);
	public static final int DAQmx_DI_DigFltr_TimebaseSrc = (int)0x2ED4;
	public static final int DAQmxErrorProductOfAOMaxAndGainTooLarge = (int)(-200267);
	public static final int DAQmxErrorOutputCantStartChangedRegenerationMode = (int)(-200568);
	public static final int DAQmx_CO_CtrTimebaseSrc = (int)0x0339;
	public static final int DAQmx_Val_Task_Stop = (int)1;
	public static final int DAQmx_AO_Current_Units = (int)0x1109;
	public static final int DAQmx_Val_Falling = (int)10171;
	public static final int DAQmxErrorInvalidDeviceIDInList = (int)(-200207);
	public static final int DAQmxErrorNoCommonTrigLineForImmedRoute = (int)(-200396);
	public static final int DAQmxErrorNetworkDeviceNotReservedByHost = (int)(-201388);
	public static final int DAQmx_Dev_CI_SupportedMeasTypes = (int)0x2FD4;
	public static final int DAQmxErrorDeviceComponentTestFailure = (int)(-201112);
	public static final int DAQmxErrorIncorrectDigitalPattern = (int)(-200102);
	public static final int DAQmxWarningPALOSUnsupported = (int)(50200);
	public static final int DAQmx_Val_Butterworth = (int)16076;
	public static final int DAQmxErrorPxiResmanChassisFileNotFound = (int)(-26200);
	public static final String DAQmx_Val_Switch_Topology_2531_1_Wire_Dual_4x64_Matrix = (String)"2531/1-Wire Dual 4x64 Matrix";
	public static final int DAQmx_AI_RosetteStrainGage_RosetteType = (int)0x2FFE;
	public static final int DAQmxErrorDSFReadyForStartClock = (int)(-200631);
	public static final int DAQmx_Val_PauseUntilDataAvailable = (int)14616;
	public static final int DAQmxErrorAOCallWriteBeforeStartForSampClkTimingType = (int)(-200858);
	public static final int DAQmx_AI_Coupling = (int)0x0064;
	public static final int DAQmxErrorInvalidEscapeCharacterInString = (int)(-201068);
	public static final int DAQmx_Dev_AI_VoltageRngs = (int)0x2990;
	public static final int DAQmx_Watchdog_AO_OutputType = (int)0x305E;
	public static final String DAQmx_Val_Switch_Topology_2532_2_Wire_Dual_4x32_Matrix = (String)"2532/2-Wire Dual 4x32 Matrix";
	public static final int DAQmxErrorGenStoppedToPreventIntermediateBufferRegenOfOldSamples = (int)(-200291);
	public static final int DAQmxErrorFilePathInvalid = (int)(-201304);
	public static final int DAQmx_CI_CtrTimebaseRate = (int)0x18B2;
	public static final int DAQmx_CI_CountEdges_CountDir_DigSync_Enable = (int)0x21F5;
	public static final int DAQmxErrorCalChanReversePolyCoefNotSpecd = (int)(-200941);
	public static final int DAQmx_CI_SampClkOverrunBehavior = (int)0x3093;
	public static final int DAQmx_DigEdge_StartTrig_DigFltr_MinPulseWidth = (int)0x2224;
	public static final int DAQmx_AIConv_Rate = (int)0x1848;
	public static final int DAQmx_Val_CounterOutputEvent = (int)12494;
	public static final int DAQmx_DigPattern_RefTrig_Pattern = (int)0x2187;
	public static final int DAQmxError2InputPortCombinationGivenSampTimingType653x = (int)(-200929);
	public static final int DAQmx_Val_Tristate = (int)10310;
	public static final int DAQmxErrorInvalidAnalogTrigSrc = (int)(-200265);
	public static final int DAQmxErrorDifftInternalAIInputSrcs = (int)(-200677);
	public static final int DAQmxErrorCouldNotConnectToRemoteMXS = (int)(-201192);
	public static final int DAQmxErrorMeasCalAdjustDirectPathGain = (int)(-200505);
	public static final int DAQmxErrorResourcesInUseForRouteInTask = (int)(-200370);
	public static final int DAQmxWarningIncorrectDataType = (int)(26656);
	public static final int DAQmxErrorSampClockSourceNotSupportedGivenTimingType = (int)(-200908);
	public static final int DAQmxErrorCtrExportSignalNotPossible = (int)(-200359);
	public static final int DAQmxErrorHWTimedSinglePointOddNumChansInAITask = (int)(-200820);
	public static final int DAQmxErrorDigPrptyCannotBeSetPerLine = (int)(-200641);
	public static final int DAQmx_Val_UserProvided = (int)10167;
	public static final int DAQmxErrorNoDevMemForWaveform = (int)(-200315);
	public static final int DAQmxErrorInvalidRoutingDestinationTerminalName = (int)(-200041);
	public static final int DAQmx_AI_RTD_Type = (int)0x1032;
	public static final int DAQmx_Val_Pt3851 = (int)10071;
	public static final int DAQmx_AO_ReglitchEnable = (int)0x0133;
	public static final int DAQmx_AI_DigFltr_Lowpass_CutoffFreq = (int)0x30C1;
	public static final int DAQmxErrorCDAQMasterNotFoundForChanExpansion = (int)(-201483);
	public static final int DAQmxErrorCOOnlyImplicitSampleTimingTypeSupported = (int)(-201296);
	public static final int DAQmx_Dev_TCPIP_Hostname = (int)0x2A8B;
	public static final int DAQmxErrorCantHaveBothMemMappedAndNonMemMappedTasks = (int)(-201322);
	public static final String DAQmx_Val_Switch_Topology_2503_2_Wire_Dual_12x1_Mux = (String)"2503/2-Wire Dual 12x1 Mux";
	public static final int DAQmx_Val_Unconstrained = (int)14708;
	public static final int DAQmxWarningGenerationDisabled = (int)(26851);
	public static final String DAQmx_Val_Switch_Topology_2544_8x1_Terminated_Mux = (String)"2544/8x1 Terminated Mux";
	public static final int DAQmx_CI_Velocity_LinEncoder_Units = (int)0x30DA;
	public static final int DAQmx_MasterTimebase_Src = (int)0x1343;
	public static final int DAQmx_Val_ZeroVoltsOrAmps = (int)12526;
	public static final int DAQmxWarningCounter0DMADuringAIConflict = (int)(200008);
	public static final int DAQmx_Val_OnbrdMemCustomThreshold = (int)12577;
	public static final int DAQmx_CI_CtrTimebaseMasterTimebaseDiv = (int)0x18B3;
	public static final String DAQmx_Val_Switch_Topology_2529_2_Wire_4x32_Matrix = (String)"2529/2-Wire 4x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_Sixteen_2x16_Matrix = (String)"2532/1-Wire Sixteen 2x16 Matrix";
	public static final int DAQmxErrorReferenceClockNotPresent = (int)(-201461);
	public static final int DAQmx_PhysicalChan_DO_SampModes = (int)0x2FE1;
	public static final int DAQmxWarningReadNotCompleteBeforeSampClk = (int)(209800);
	public static final int DAQmxErrorHWObjectsFoundInFile = (int)(-201074);
	public static final int DAQmxErrorTEDSTemplateParametersNotSupported = (int)(-200754);
	public static final String DAQmx_Val_Switch_Topology_1163R_Octal_4x1_Mux = (String)"1163R/Octal 4x1 Mux";
	public static final int DAQmx_Val_LeftJustified = (int)10209;
	public static final int DAQmx_Val_S_Type_TC = (int)10085;
	public static final int DAQmx_Dev_CI_MaxTimebase = (int)0x29A0;
	public static final int DAQmx_Scale_Descr = (int)0x1226;
	public static final int DAQmxErrorWaveformLengthNotMultOfQuantum = (int)(-201115);
	public static final int DAQmxErrorCantUsePort3AloneGivenSampTimingTypeOn653x = (int)(-200900);
	public static final int DAQmx_SyncPulse_ResetTime = (int)0x2F7C;
	public static final int DAQmxErrorFileCopyFault = (int)(-26106);
	public static final int DAQmxErrorUnknownCardPowerProfileInCarrier = (int)(-201422);
	public static final int DAQmxErrorCommDeviceForPXIBackplaneNotPXI = (int)(-201184);
	public static final int DAQmxErrorIncompleteGainAndCouplingCalAdjustment = (int)(-201391);
	public static final int DAQmx_Val_ALowBHigh = (int)10042;
	public static final int DAQmxWarningWriteNotCompleteBeforeSampClk = (int)(209801);
	public static final int DAQmx_Dev_CompactDAQ_ChassisDevName = (int)0x29B7;
	public static final int DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseRate = (int)0x2EE4;
	public static final int DAQmx_Val_Transferred_From_Buffer = (int)2;
	public static final int DAQmx_CI_Freq_DigFltr_Enable = (int)0x21E7;
	public static final int DAQmxErrorInputBufSizeTooSmallToStartAcq = (int)(-200608);
	public static final int DAQmx_Val_HighResolution = (int)10195;
	public static final int DAQmx_Val_WriteToEEPROM = (int)12538;
	public static final int DAQmxErrorCantSavePerLineConfigDigChanSoInteractiveEditsAllowed = (int)(-200922);
	public static final int DAQmxWarningPALPhysicalBufferFull = (int)(50409);
	public static final int DAQmx_Val_GPS_Timestamp = (int)10362;
	public static final int DAQmxErrorPLLNotLocked = (int)(-201015);
	public static final int DAQmx_AI_Excit_Src = (int)0x17F4;
	public static final int DAQmxWarningPALBadOffset = (int)(50007);
	public static final int DAQmxErrorScaledMinEqualMax = (int)(-200603);
	public static final int DAQmx_Val_Lowpass = (int)16071;
	public static final int DAQmx_Write_PowerSupplyFaultChans = (int)0x29ED;
	public static final int DAQmx_Val_EverySample = (int)10164;
	public static final int DAQmx_DI_MemMapEnable = (int)0x296A;
	public static final int DAQmx_PhysicalChanName = (int)0x18F5;
	public static final int DAQmx_Val_SCXI1124Range0to5V = (int)14630;
	public static final int DAQmx_Val_Force_Bridge = (int)15899;
	public static final int DAQmx_Val_VoltsPerVolt = (int)15896;
	public static final int DAQmx_CI_Pulse_Freq_Term = (int)0x2F04;
	public static final int DAQmxErrorAOSampTimingTypeDifferentIn2Tasks = (int)(-200963);
	public static final int DAQmx_Val_VoltsPerMillimeter = (int)14839;
	public static final int DAQmxErrorCannotTristateBusyTerm = (int)(-200252);
	public static final int DAQmx_Dev_AI_LowpassCutoffFreqRangeVals = (int)0x29CF;
	public static final int DAQmx_RealTime_ReportMissedSamp = (int)0x2319;
	public static final int DAQmxErrorFirmwareIsTooOld = (int)(-201168);
	public static final int DAQmx_Val_FuncGen = (int)14750;
	public static final int DAQmxErrorPropertyNotSupportedForTimingSrc = (int)(-200739);
	public static final int DAQmx_Val_Task_Unreserve = (int)5;
	public static final int DAQmxErrorDotNetAPINotUnsigned32BitNumber = (int)(-200499);
	public static final int DAQmx_DigEdge_ArmStartTrig_DigFltr_MinPulseWidth = (int)0x222E;
	public static final int DAQmx_CI_Velocity_MeasTime = (int)0x30EB;
	public static final int DAQmx_CO_CtrTimebase_DigFltr_TimebaseSrc = (int)0x2278;
	public static final int DAQmx_Exported_AIHoldCmpltEvent_OutputTerm = (int)0x18ED;
	public static final int DAQmx_CI_Period_EnableAveraging = (int)0x2ED1;
	public static final int DAQmx_AnlgWin_RefTrig_DigFltr_TimebaseSrc = (int)0x2EED;
	public static final int DAQmxErrorAttrCannotBeRead = (int)(-200232);
	public static final int DAQmx_CI_DutyCycle_DigFltr_TimebaseRate = (int)0x3091;
	public static final int DAQmx_DigEdge_AdvTrig_DigFltr_Enable = (int)0x2238;
	public static final int DAQmxErrorOperationTimedOut = (int)(-200474);
	public static final int DAQmxErrorCantSaveNonPortMultiLineDigChanSoInteractiveEditsAllowed = (int)(-200921);
	public static final int DAQmxErrorDuplicateDevIDInList = (int)(-200209);
	public static final int DAQmx_Val_DMA = (int)10054;
	public static final int DAQmxErrorNULLPtrForC_Api = (int)(-200230);
	public static final int DAQmxErrorTaskCannotBeSavedSoInteractiveEditsAllowed = (int)(-200883);
	public static final int DAQmxErrorOverVoltageProtectionActivated = (int)(-201265);
	public static final int DAQmx_Dev_AO_MaxRate = (int)0x2997;
	public static final int DAQmx_CI_Period_DigFltr_MinPulseWidth = (int)0x21ED;
	public static final int DAQmxErrorCannotTristateTerm_Routing = (int)(-89128);
	public static final int DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2 = (int)(-200706);
	public static final int DAQmxErrorNegativeWriteSampleNumber = (int)(-200287);
	public static final int DAQmx_AI_OpenChanDetectEnable = (int)0x30FF;
	public static final int DAQmxErrorNoDevMemForScript = (int)(-200317);
	public static final int DAQmx_AO_DAC_Rng_Low = (int)0x182D;
	public static final String DAQmx_Val_Switch_Topology_2522_53_SPDT = (String)"2522/53-SPDT";
	public static final int DAQmx_Exported_HshkEvent_Pulse_Width = (int)0x22C1;
	public static final int DAQmxErrorInvalidTimingType = (int)(-200300);
	public static final int DAQmxErrorLeadingSpaceInString = (int)(-200553);
	public static final int DAQmxErrorPALComponentImageCorrupt = (int)(-50257);
	public static final int DAQmxErrorExplanationNotFound = (int)(-200235);
	public static final int DAQmx_AI_Excit_DCorAC = (int)0x17FB;
	public static final int DAQmxErrorWfmNameSameAsScriptName = (int)(-200634);
	public static final int DAQmx_Sys_NIDAQUpdateVersion = (int)0x2F22;
	public static final String DAQmx_Val_Switch_Topology_1192_8_SPDT = (String)"1192/8-SPDT";
	public static final String DAQmx_Val_Switch_Topology_2530_2_Wire_4x16_Matrix = (String)"2530/2-Wire 4x16 Matrix";
	public static final int DAQmx_SampClk_DigFltr_MinPulseWidth = (int)0x221F;
	public static final int DAQmxErrorPALBadToken = (int)(-50020);
	public static final int DAQmxErrorGlobalChanNameAlreadyTaskName = (int)(-200918);
	public static final int DAQmxErrorRosetteMeasurementsNotSpecified = (int)(-201448);
	public static final int DAQmxErrorPxiResmanAllocationError = (int)(-26100);
	public static final int DAQmx_AI_Lowpass_CutoffFreq = (int)0x1803;
	public static final int DAQmxErrorOnlyFrontEndChanOpsDuringScan = (int)(-200377);
	public static final int DAQmxErrorDuplicatePropertyInObject = (int)(-201055);
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_Octal_32x1_Mux = (String)"1130/1-Wire Octal 32x1 Mux";
	public static final int DAQmxErrorPxiResmanMxsPxiSystemNotFound = (int)(-26600);
	public static final int DAQmxErrorLabVIEWEmptyTaskOrChans = (int)(-200429);
	public static final int DAQmxErrorCannotReadWhenAutoStartFalseHWTimedSinglePtAndTaskNotRunning = (int)(-200833);
	public static final int DAQmx_CI_SemiPeriod_Term = (int)0x18B0;
	public static final int DAQmx_CI_PulseWidth_TermCfg = (int)0x30A9;
	public static final int DAQmxErrorSCCCabledDevMustNotBeSimWhenSCCCarrierIsNotSim = (int)(-201157);
	public static final int DAQmxErrorResourcesInUseForInversion_Routing = (int)(-89134);
	public static final double DAQmx_Val_WaitInfinitely = (double)-1.0;
	public static final int DAQmx_Val_DynAvg = (int)16065;
	public static final int DAQmxErrorInvalidIdentifierInListAtEndOfSwitchAction = (int)(-200046);
	public static final int DAQmx_AO_DevScalingCoeff = (int)0x1931;
	public static final int DAQmxErrorHWUnexpectedlyPoweredOffAndOn = (int)(-200194);
	public static final int DAQmx_Val_WDTExpiredEvent = (int)12512;
	public static final int DAQmxErrorIdentifierTooLongInScript = (int)(-200533);
	public static final int DAQmxErrorTimingSrcTaskStartedBeforeTimedLoop = (int)(-200740);
	public static final int DAQmxErrorCAPIReservedParamNotNULLNorEmpty = (int)(-200493);
	public static final int DAQmxErrorRoutingPathNotAvailable = (int)(-200044);
	public static final int DAQmx_SwitchChan_MaxACSwitchPwr = (int)0x0644;
	public static final int DAQmxErrorRoutingSrcTermPXIStarInSystemTimingSlot_Routing = (int)(-89151);
	public static final int DAQmx_Val_SampClkPeriods = (int)10286;
	public static final int DAQmxWarningPALResourceAmbiguous = (int)(50107);
	public static final int DAQmx_Val_Remote = (int)16096;
	public static final int DAQmxWarningWaitForNextSampClkDetectedMissedSampClk = (int)(209802);
	public static final int DAQmxErrorPALComponentBusy = (int)(-50264);
	public static final int DAQmxErrorDigFilterMinPulseWidthSetWhenTristateIsFalse = (int)(-200733);
	public static final int DAQmx_Val_NoAction = (int)10227;
	public static final int DAQmxErrorDuplicateHiddenChanNamesInCfgFile = (int)(-201082);
	public static final int DAQmxErrorEmptyPhysChanInPowerUpStatesArray = (int)(-200626);
	public static final int DAQmxErrorChanCalTableNumScaledNotEqualNumPrescaledVals = (int)(-200938);
	public static final int DAQmxErrorRangeWithoutAConnectActionInList = (int)(-200052);
	public static final int DAQmx_Val_AdvanceTrigger = (int)12488;
	public static final int DAQmxWarningTrigmanConflictingRouteNoUnreserve = (int)(26007);
	public static final int DAQmxErrorRefTrigDigPatternChanNotInTask = (int)(-200889);
	public static final int DAQmxErrorMeasCalAdjustOscillatorFrequency = (int)(-200508);
	public static final int DAQmx_SampClk_Timebase_Rate = (int)0x1303;
	public static final int DAQmxErrorInvalidDeviceID = (int)(-200220);
	public static final int DAQmxErrorNetworkDevicesNotSupportedOnThisPlatform = (int)(-201379);
	public static final int DAQmxWarningDeviceSpecExceeded = (int)(200048);
	public static final int DAQmx_Val_DigLvl = (int)10152;
	public static final int DAQmxErrorDifftSyncPulseSrcAndSampClkTimebaseSrcDevMultiDevTask = (int)(-200854);
	public static final int DAQmxErrorMultideviceWithOnDemandTiming = (int)(-201444);
	public static final int DAQmxErrorDigOutputOverrun = (int)(-200716);
	public static final int DAQmxErrorDataNotAvailable = (int)(-200005);
	public static final int DAQmxErrorPALCommunicationsFault = (int)(-50401);
	public static final int DAQmxErrorClkDoublerDCMLock = (int)(-200241);
	public static final int DAQmxWarningPxiResmanSystemDescriptionParseError = (int)(26401);
	public static final String DAQmx_Val_Switch_Topology_2535_1_Wire_4x136_Matrix = (String)"2535/1-Wire 4x136 Matrix";
	public static final int DAQmxErrorExtSampClkRateTooLowForClkIn = (int)(-200275);
	public static final int DAQmx_Exported_CtrOutEvent_OutputTerm = (int)0x1717;
	public static final int DAQmxErrorDeviceNotSupportedIn64Bit = (int)(-201274);
	public static final int DAQmxErrorDurationTooLong = (int)(-209820);
	public static final int DAQmx_AnlgLvl_PauseTrig_DigFltr_MinPulseWidth = (int)0x2EF1;
	public static final String DAQmx_Val_Switch_Topology_2503_1_Wire_48x1_Mux = (String)"2503/1-Wire 48x1 Mux";
	public static final int DAQmxErrorInternalTimebaseRateDivisorSourceCombo = (int)(-200133);
	public static final int DAQmxErrorDuplicatedChannel = (int)(-200003);
	public static final int DAQmxErrorInvalidAdvanceEventTriggerType = (int)(-200070);
	public static final int DAQmx_CI_Velocity_Encoder_BInputDigFltr_Enable = (int)0x30E7;
	public static final int DAQmxErrorReadChanTypeMismatch = (int)(-200525);
	public static final int DAQmxWarningTrigmanDisconnected = (int)(26010);
	public static final int DAQmx_AI_Rng_Low = (int)0x1816;
	public static final int DAQmxErrorSampClkTimebaseRateNotSpecd = (int)(-201096);
	public static final int DAQmx_Val_USB = (int)12586;
	public static final int DAQmxErrorCannotSetPropertyWhenHWTimedSinglePointTaskIsRunning = (int)(-200994);
	public static final int DAQmxErrorStartTrigDigPatternSizeDoesNotMatchSourceSize = (int)(-200894);
	public static final int DAQmx_PauseTrig_Type = (int)0x1366;
	public static final int DAQmxErrorTEDSLegacyTemplateIDInvalidOrUnsupported = (int)(-200766);
	public static final int DAQmxErrorInvalidReadPosDuringRIS = (int)(-200419);
	public static final int DAQmxErrorFirmwareUpdateInvalidState = (int)(-201489);
	public static final int DAQmxErrorReadNotCompleteBefore3SampClkEdges = (int)(-200843);
	public static final int DAQmxErrorLoggingNotSupportOnOutputTasks = (int)(-201332);
	public static final String DAQmx_Val_Switch_Topology_1169_100_SPST = (String)"1169/100-SPST";
	public static final int DAQmxErrorSyncStrategiesCannotSync = (int)(-201424);
	public static final int DAQmxErrorRoutingDestTermPXIStarInSlot2 = (int)(-200701);
	public static final int DAQmx_CI_DutyCycle_DigFltr_TimebaseSrc = (int)0x3090;
	public static final int DAQmxErrorInputFIFOUnderflow = (int)(-200017);
	public static final int DAQmxErrorInvalidOutputToInputCDAQSyncConnection = (int)(-201462);
	public static final int DAQmxErrorGenerateOrFiniteWaitInstructionExpectedBeforeIfElseBlockInScript = (int)(-201007);
	public static final int DAQmxErrorTimeoutValueExceedsMaximum = (int)(-201437);
	public static final int DAQmxErrorMyDAQPowerRailFault = (int)(-201381);
	public static final int DAQmx_SwitchChan_AnlgBusSharingEnable = (int)0x2F9E;
	public static final int DAQmxErrorInvalidShuntSelectForCalibration = (int)(-209811);
	public static final int DAQmxErrorRoutingDestTermPXIStarXNotInSlot2_Routing = (int)(-89148);
	public static final int DAQmxErrorDeviceNameNotFound_Routing = (int)(-88717);
	public static final int DAQmxErrorGenerationDisabled = (int)(-26851);
	public static final int DAQmx_Exported_HshkEvent_Delay = (int)0x22BC;
	public static final int DAQmx_AI_CustomScaleName = (int)0x17E0;
	public static final int DAQmxErrorAOMinMaxNotInGainRange = (int)(-200760);
	public static final String DAQmx_Val_Switch_Topology_2575_2_Wire_95x1_Mux = (String)"2575/2-Wire 95x1 Mux";
	public static final int DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandBufSizeZero = (int)(-200802);
	public static final int DAQmxErrorWriteBufferTooSmall = (int)(-200234);
	public static final int DAQmx_Val_Poll = (int)12524;
	public static final String DAQmx_Val_Switch_Topology_2571_66_SPDT = (String)"2571/66-SPDT";
	public static final int DAQmxErrorPALBusResetOccurred = (int)(-50800);
	public static final int DAQmxErrorSampTbRateSampTbSrcMismatch = (int)(-200308);
	public static final int DAQmxErrorFunctionNotSupportedForDeviceTasks = (int)(-200092);
	public static final int DAQmxErrorPALBadSelector = (int)(-50003);
	public static final int DAQmxErrorCommDeviceForPXIBackplaneNotInRightmostSlot = (int)(-201186);
	public static final int DAQmx_AnlgEdge_RefTrig_DigFltr_Enable = (int)0x2EE6;
	public static final int DAQmx_AI_DigFltr_Enable = (int)0x30BD;
	public static final int DAQmx_Val_mVoltsPerVoltPerMilliInch = (int)12505;
	public static final int DAQmxErrorPortConfiguredForStaticDigitalOps = (int)(-200119);
	public static final int DAQmxErrorCommDeviceForPXIBackplaneNotInSameChassis = (int)(-201185);
	public static final int DAQmxErrorCOWritePulseHighTicksNotSupported = (int)(-200688);
	public static final int DAQmxErrorActivePhysChanNotSpecdWhenGetting1LinePrpty = (int)(-200624);
	public static final int DAQmx_AI_RawSampJustification = (int)0x0050;
	public static final int DAQmxErrorSampClkRateDoesntMatchSampClkSrc = (int)(-201002);
	public static final int DAQmx_ArmStart_Term = (int)0x2F7F;
	public static final String DAQmx_Val_Switch_Topology_2530_1_Wire_Octal_16x1_Mux = (String)"2530/1-Wire Octal 16x1 Mux";
	public static final int DAQmxErrorPropertyNotFound = (int)(-201266);
	public static final int DAQmxErrorCIOverrun = (int)(-201314);
	public static final int DAQmxErrorTwoPortsRequired = (int)(-201451);
	public static final int DAQmx_Val_SCXI1124Range0to1V = (int)14629;
	public static final int DAQmx_Val_SCExpress = (int)15886;
	public static final int DAQmxErrorMemMapAndSimultaneousAO = (int)(-200830);
	public static final int DAQmxWarningPXIe5605_NotConfigured = (int)(200069);
	public static final int DAQmx_SwitchDev_SettlingTime = (int)0x1244;
	public static final int DAQmx_Dev_AI_SimultaneousSamplingSupported = (int)0x298F;
	public static final int DAQmx_AI_Velocity_IEPESensor_Sensitivity = (int)0x2FF6;
	public static final int DAQmxErrorTrigmanInvalidClient = (int)(-26009);
	public static final int DAQmxErrorMarkerPositionNotAlignedInScript = (int)(-200031);
	public static final int DAQmxErrorInvalidTask = (int)(-200088);
	public static final int DAQmxErrorBufferTooSmallForString = (int)(-200228);
	public static final int DAQmx_Val_InvertPolarity = (int)1;
	public static final int DAQmx_CI_Period_MeasMeth = (int)0x192C;
	public static final int DAQmx_Val_Bit_TermCfg_RSE = (int)(1 << 0);
	public static final int DAQmx_Val_Toggle = (int)10307;
	public static final int DAQmxErrorTimebaseCalFreqVarianceTooLarge = (int)(-200723);
	public static final int DAQmxErrorDeviceDoesNotSupportScanning = (int)(-200068);
	public static final int DAQmx_SwitchChan_MaxDCVoltage = (int)0x0650;
	public static final int DAQmxErrorCalAdjustRefValOutOfRange = (int)(-201501);
	public static final int DAQmxErrorDeviceRebootedFromWDTTimeout = (int)(-201438);
	public static final int DAQmx_Val_PrincipalStrain2 = (int)15972;
	public static final int DAQmx_Val_SampleClkPeriods = (int)10286;
	public static final int DAQmx_Val_PrincipalStrain1 = (int)15971;
	public static final int DAQmx_SwitchScan_BreakMode = (int)0x1247;
	public static final int DAQmx_Scale_Lin_Slope = (int)0x1227;
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_Quad_4x32_Matrix = (String)"2532/1-Wire Quad 4x32 Matrix";
	public static final int DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthBySameTask1PerDev = (int)(-200807);
	public static final int DAQmx_CI_Velocity_Encoder_BInputDigFltr_TimebaseRate = (int)0x30EA;
	public static final int DAQmxErrorPALComponentNotUnloadable = (int)(-50262);
	public static final int DAQmxErrorSampClkTimebaseDCMLock = (int)(-200237);
	public static final int DAQmx_AI_Excit_UseForScaling = (int)0x17FC;
	public static final int DAQmxErrorDelayFromStartTrigTooLong = (int)(-200334);
	public static final int DAQmxErrorCAPISyncEventsTaskStateChangeNotAllowedFromDifferentThread = (int)(-200979);
	public static final int DAQmx_Trigger_SyncType = (int)0x2F80;
	public static final int DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove = (int)(-200702);
	public static final int DAQmxErrorRequestedSignalInversionForRoutingNotPossible_Routing = (int)(-89122);
	public static final int DAQmxErrorRefClkRateRefClkSrcMismatch = (int)(-200744);
	public static final int DAQmxErrorPrescalerNot1ForTimebaseSrc = (int)(-200840);
	public static final int DAQmxErrorDAQmxCantUseStringDueToUnknownChar = (int)(-200811);
	public static final int DAQmx_Val_Inches = (int)10379;
	public static final int DAQmxErrorActiveChanTooManyLinesSpecdWhenGettingPrpty = (int)(-200643);
	public static final int DAQmx_Exported_HshkEvent_OutputTerm = (int)0x22BA;
	public static final int DAQmx_CI_PulseWidth_DigFltr_TimebaseRate = (int)0x220D;
	public static final int DAQmx_Val_PathStatus_ChannelInUse = (int)10434;
	public static final int DAQmxErrorSamplesNotYetAvailable = (int)(-200284);
	public static final String DAQmx_Val_Switch_Topology_2510_Independent = (String)"2510/Independent";
	public static final int DAQmxErrorCIOnboardClockNotSupportedAsInputTerm = (int)(-200814);
	public static final int DAQmxErrorAttributeInconsistentAcrossChannelsOnDevice = (int)(-200106);
	public static final int DAQmx_CI_Velocity_AngEncoder_Units = (int)0x30D8;
	public static final int DAQmx_DO_DataXferReqCond = (int)0x2267;
	public static final int DAQmx_CI_TwoEdgeSep_Second_DigFltr_MinPulseWidth = (int)0x2215;
	public static final int DAQmxErrorFailedToEnableHighSpeedOutput = (int)(-200615);
	public static final int DAQmxErrorOverrunUnderflowConfigurationCombo = (int)(-201292);
	public static final int DAQmx_Val_OnBrdMemNotEmpty = (int)10241;
	public static final int DAQmx_Dev_PCI_BusNum = (int)0x2327;
	public static final int DAQmxErrorInvalidTEDSInterfaceAddress = (int)(-201243);
	public static final int DAQmxWarningCOPrevDAQmxWriteSettingsOverwrittenForHWTimedSinglePoint = (int)(200037);
	public static final int DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseSrc = (int)0x2EE3;
	public static final int DAQmx_CI_TwoEdgeSep_Second_DigSync_Enable = (int)0x2218;
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_Quad_64x1_Mux = (String)"1130/1-Wire Quad 64x1 Mux";
	public static final int DAQmxErrorPALConnectionRefused = (int)(-50801);
	public static final int DAQmxErrorCannotSetPropertyWhenTaskRunning = (int)(-200557);
	public static final int DAQmxErrorReadDataTypeTooSmall = (int)(-200789);
	public static final int DAQmx_Read_CommonModeRangeErrorChansExist = (int)0x2A98;
	public static final int DAQmxErrorTrigmanLineAlreadyReserved = (int)(-26005);
	public static final int DAQmxErrorPALMemoryAlignmentFault = (int)(-50351);
	public static final int DAQmxErrorUserDefinedWfmWithOOKUnsupported = (int)(-201111);
	public static final int DAQmx_Dev_Accessory_ProductNums = (int)0x2F6E;
	public static final int DAQmxErrorExcitationStateRequiredForAttributes = (int)(-201191);
	public static final int DAQmx_CO_MemMapEnable = (int)0x2ED3;
	public static final int DAQmx_Val_20MHzTimebaseClock = (int)12486;
	public static final int DAQmxErrorCannotHaveTimedLoopAndDAQmxSignalEventsInSameTask = (int)(-200948);
	public static final int DAQmx_AO_DAC_Ref_Val = (int)0x1832;
	public static final int DAQmx_ExtCal_LastTemp = (int)0x1867;
	public static final int DAQmx_AI_ChanCal_Desc = (int)0x22A4;
	public static final int DAQmx_AI_ChanCal_ApplyCalIfExp = (int)0x2299;
	public static final String DAQmx_Val_Switch_Topology_1190_Quad_4x1_Mux = (String)"1190/Quad 4x1 Mux";
	public static final int DAQmx_SyncPulse_Term = (int)0x2F85;
	public static final int DAQmx_Read_CommonModeRangeErrorChans = (int)0x2A99;
	public static final int DAQmx_Val_NoBridge = (int)10228;
	public static final int DAQmxErrorNoPatternMatcherAvailable = (int)(-200382);
	public static final int DAQmx_Val_Task_Reserve = (int)4;
	public static final int DAQmx_Val_PathStatus_Unsupported = (int)10433;
	public static final int DAQmxErrorCalPasswordNotSupported = (int)(-201006);
	public static final int DAQmxError3OutputPortCombinationGivenSampTimingType653x = (int)(-200932);
	public static final int DAQmxErrorRouteSrcAndDestSame = (int)(-200326);
	public static final int DAQmx_Val_Task_Verify = (int)2;
	public static final int DAQmxErrorMStudioInvalidPolyDirection = (int)(-200594);
	public static final int DAQmxErrorVirtualChanNameUsed = (int)(-200171);
	public static final int DAQmxErrorChanSizeTooBigForU16PortRead = (int)(-200878);
	public static final int DAQmx_Hshk_SampleInputDataWhen = (int)0x22C4;
	public static final int DAQmxErrorInvalidCalAdjustmentPointValues = (int)(-201470);
	public static final int DAQmxErrorWaitModePropertyNotSupportedNonBuffered = (int)(-200923);
	public static final int DAQmxWarningPXIe5603_NotConfigured = (int)(200066);
	public static final String DAQmx_Val_Switch_Topology_1175_2_Wire_95x1_Mux = (String)"1175/2-Wire 95x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2549_Terminated_2_SPDT = (String)"2549/Terminated 2-SPDT";
	public static final int DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalWhenDMA = (int)(-200877);
	public static final int DAQmx_Read_OverloadedChansExist = (int)0x2174;
	public static final int DAQmxErrorDLLBecameUnlocked = (int)(-200551);
	public static final int DAQmxErrorNetworkDAQCannotCreateEmptySleeve = (int)(-201246);
	public static final int DAQmxErrorSelfCalConstsInvalid = (int)(-200549);
	public static final int DAQmx_DigPattern_StartTrig_When = (int)0x1411;
	public static final int DAQmx_Val_Bit_CouplingTypes_NoiseReject = (int)(1 << 5);
	public static final int DAQmxErrorMStudioNoForwardPolyScaleCoeffsUseCalc = (int)(-200780);
	public static final int DAQmxWarningNetworkDeviceAlreadyAdded = (int)(200057);
	public static final int DAQmxErrorPALFeatureNotSupported = (int)(-50256);
	public static final int DAQmx_Val_Create = (int)15848;
	public static final int DAQmxErrorDigFilterAndSyncBothEnabled = (int)(-200770);
	public static final int DAQmx_AO_LoadImpedance = (int)0x0121;
	public static final int DAQmxErrorDeviceNameIsEmpty_Routing = (int)(-88718);
	public static final int DAQmxWarningTrigmanLineNotReservedUnroutable = (int)(26004);
	public static final int DAQmx_Val_BreakBeforeMake = (int)10110;
	public static final int DAQmxErrorPLLBecameUnlocked = (int)(-200246);
	public static final int DAQmxErrorSCXIModuleIncorrect = (int)(-200107);
	public static final int DAQmxErrorWaveformLengthNotMultipleOfIncr = (int)(-200400);
	public static final int DAQmxErrorDevCannotProduceMinPulseWidth = (int)(-200777);
	public static final int DAQmxWarningPropertyVersionNew = (int)(200024);
	public static final int DAQmxErrorAutoStartWriteNotAllowedEventRegistered = (int)(-200985);
	public static final int DAQmxWarningPXIe5665_5603_IncorrectlyConfigured = (int)(200067);
	public static final int DAQmxErrorPALIsocStreamBufferError = (int)(-50807);
	public static final int DAQmxErrorRetryCall = (int)(-26853);
	public static final int DAQmx_Val_MaxShearStrain = (int)15977;
	public static final int DAQmx_PersistedChan_Author = (int)0x22D0;
	public static final int DAQmx_CI_Pulse_Ticks_DigSync_Enable = (int)0x2F1A;
	public static final int DAQmxErrorLocalRemoteDriverVersionMismatch_Routing = (int)(-88716);
	public static final String DAQmx_Val_Switch_Topology_2556_Dual_4x1_Mux = (String)"2556/Dual 4x1 Mux";
	public static final int DAQmxErrorPropertyNotSupportedNotInputTask = (int)(-200457);
	public static final int DAQmx_CO_DataXferMech = (int)0x2ECC;
	public static final int DAQmxErrorWatchdogExpirationStateNotEqualForLinesInPort = (int)(-200665);
	public static final int DAQmx_AnlgWin_StartTrig_DigFltr_MinPulseWidth = (int)0x2F00;
	public static final int DAQmxErrorOnlyUseRefTrigSrcPrptyWithDevDataLines = (int)(-201135);
	public static final int DAQmx_Dev_TCPIP_WirelessIP = (int)0x2A8D;
	public static final int DAQmx_Logging_Mode = (int)0x2EC5;
	public static final int DAQmx_Val_Task_Commit = (int)3;
	public static final int DAQmxErrorSubsetOutsideWaveformInScript = (int)(-200030);
	public static final int DAQmx_Val_TEDS_Sensor = (int)12531;
	public static final int DAQmxErrorExceededCarrierPowerLimit = (int)(-201355);
	public static final int DAQmx_PhysicalChan_TEDS_ModelNum = (int)0x21DB;
	public static final int DAQmxErrorInvalidTrigCouplingExceptForExtTrigChan = (int)(-200548);
	public static final int DAQmxErrorDACOffsetValNotSet = (int)(-201502);
	public static final int DAQmx_Val_Bit_TriggerUsageTypes_Handshake = (int)(1 << 4);
	public static final int DAQmxErrorRoutingSrcTermPXIChassisNotIdentified = (int)(-200698);
	public static final int DAQmxErrorInvalidTEDSPhysChanNotAI = (int)(-200969);
	public static final int DAQmx_Val_Bit_CouplingTypes_LFReject = (int)(1 << 4);
	public static final int DAQmxErrorRoutingHardwareBusy = (int)(-200043);
	public static final int DAQmxErrorExtraPropertyDetectedInSpecdObject = (int)(-201040);
	public static final int DAQmx_CO_DataXferReqCond = (int)0x2ECD;
	public static final int DAQmxErrorSoftwareTooNewForExtCalibrationData = (int)(-201145);
	public static final int DAQmx_Val_Closed = (int)10438;
	public static final int DAQmxErrorAddressAlreadyInUse = (int)(-201031);
	public static final int DAQmx_CI_MeasType = (int)0x18A0;
	public static final int DAQmx_Val_StartTrigger = (int)12491;
	public static final int DAQmx_Val_Temp_RTD = (int)10301;
	public static final int DAQmxWarningConnectionCountHasExceededRecommendedLimit = (int)(200056);
	public static final String DAQmx_Val_Switch_Topology_Configured_Topology = (String)"Configured Topology";
	public static final int DAQmxErrorCannotDetectChangesWhenTristateIsFalse = (int)(-200730);
	public static final int DAQmx_CI_Encoder_ZInputTermCfg = (int)0x30A7;
	public static final int DAQmx_Val_Pounds = (int)15876;
	public static final int DAQmx_PhysicalChan_TEDS_VersionLetter = (int)0x21DE;
	public static final int DAQmx_AI_Bridge_ShuntCal_Select = (int)0x21D5;
	public static final int DAQmx_CI_Encoder_BInput_DigFltr_TimebaseRate = (int)0x2203;
	public static final int DAQmx_AnlgWin_StartTrig_DigFltr_Enable = (int)0x2EFF;
	public static final int DAQmx_Cal_RecommendedAccConnectionCountLimit = (int)0x2FEC;
	public static final int DAQmx_AI_ProbeAtten = (int)0x2A88;
	public static final int DAQmx_CI_Encoder_ZInput_DigFltr_MinPulseWidth = (int)0x2206;
	public static final int DAQmxErrorTrigLineNotFoundSingleDevRoute_Routing = (int)(-89140);
	public static final int DAQmx_AIConv_DigFltr_Enable = (int)0x2EDC;
	public static final int DAQmxErrorCustomTimingRequiredForAttribute = (int)(-201345);
	public static final int DAQmxErrorNetworkStatusTimedOut = (int)(-201250);
	public static final int DAQmxErrorSampleTimingTypeAndDataXferMode = (int)(-200218);
	public static final int DAQmxErrorAnalogBusStateInconsistent = (int)(-201405);
	public static final int DAQmx_CI_Velocity_Div = (int)0x30EC;
	public static final int DAQmx_CO_Count = (int)0x0293;
	public static final int DAQmxErrorDifferentPrptyValsNotSupportedOnDev = (int)(-200629);
	public static final int DAQmxErrorMemMappedDataReadByAnotherProcess = (int)(-201321);
	public static final int DAQmx_Val_Bandpass = (int)16073;
	public static final int DAQmx_Val_VoltsPerG = (int)12510;
	public static final int DAQmxErrorLoggingWriteSizeTooBig = (int)(-201383);
	public static final int DAQmx_CI_Freq_MeasMeth = (int)0x0144;
	public static final int DAQmxWarningADCOverloaded = (int)(200005);
	public static final int DAQmx_Val_PseudoDiff = (int)12529;
	public static final int DAQmxErrorBracketPairingMismatchInList = (int)(-200104);
	public static final int DAQmxErrorWriteFailedMultipleCOOutputTypes = (int)(-200829);
	public static final int DAQmx_CI_Velocity_Encoder_BInputTerm = (int)0x30E4;
	public static final int DAQmx_Val_Rising = (int)10280;
	public static final int DAQmx_CI_PulseWidth_DigSync_Enable = (int)0x220E;
	public static final int DAQmx_Val_OpenOrCreate = (int)15846;
	public static final int DAQmx_Val_SCCModule = (int)14705;
	public static final int DAQmxErrorBreakBlockNotAllowedInLoop = (int)(-201221);
	public static final int DAQmx_AI_Is_TEDS = (int)0x2983;
	public static final int DAQmxErrorIncorrectReadFunction = (int)(-200100);
	public static final int DAQmx_Val_Acquired_Into_Buffer = (int)1;
	public static final int DAQmxErrorIncapableTEDSInterfaceControllingDeviceSpecd = (int)(-201051);
	public static final int DAQmx_StartTrig_Type = (int)0x1393;
	public static final int DAQmxErrorNoChansSpecdForChangeDetect = (int)(-200751);
	public static final int DAQmxErrorWriteToTEDSNotSupportedOnRT = (int)(-200828);
	public static final String DAQmx_Val_Switch_Topology_1194_Quad_4x1_Mux = (String)"1194/Quad 4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2566_8_DPDT = (String)"2566/8-DPDT";
	public static final int DAQmxErrorFullySpecifiedPathInListContainsRange = (int)(-200060);
	public static final int DAQmxErrorInvalidCalLowPassCutoffFreq = (int)(-200857);
	public static final int DAQmx_Val_ChannelVoltage = (int)0;
	public static final int DAQmx_Dev_CO_SampModes = (int)0x2FDF;
	public static final int DAQmx_Read_DigitalLines_BytesPerChan = (int)0x217C;
	public static final int DAQmx_AI_Bridge_TwoPointLin_First_ElectricalVal = (int)0x2F8A;
	public static final int DAQmx_PhysicalChan_AI_InputSrcs = (int)0x2FD8;
	public static final int DAQmx_Val_HighFreq2Ctr = (int)10157;
	public static final int DAQmxError3InputPortCombinationGivenSampTimingType653x = (int)(-200931);
	public static final int DAQmx_Val_FromTEDS = (int)12516;
	public static final int DAQmxErrorInvalidFirmwareFileUploaded = (int)(-201418);
	public static final int DAQmx_AI_DigFltr_Coeff = (int)0x30C7;
	public static final int DAQmx_Write_DevsWithInsertedOrRemovedAccessories = (int)0x3054;
	public static final int DAQmx_Val_FixedHighFreq = (int)14709;
	public static final int DAQmx_CI_Encoder_AInput_DigFltr_TimebaseSrc = (int)0x21FD;
	public static final int DAQmxWarningPathNotFound = (int)(26110);
	public static final int DAQmxErrorRefTrigOutputTermNotSupportedGivenTimingType = (int)(-200912);
	public static final int DAQmxErrorModuleTypeDoesNotMatchModuleTypeInDestination = (int)(-201244);
	public static final int DAQmx_Write_ExternalOvervoltageChansExist = (int)0x30BB;
	public static final int DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunningOrCommitted = (int)(-200472);
	public static final int DAQmxWarningPALTransferStopped = (int)(50404);
	public static final int DAQmx_CI_Freq_Units = (int)0x18A1;
	public static final int DAQmx_DI_DataXferMech = (int)0x2263;
	public static final int DAQmx_Dev_DI_Lines = (int)0x2320;
	public static final int DAQmx_AO_PowerAmp_Overcurrent = (int)0x3064;
	public static final int DAQmxErrorSampClkRateExtSampClkTimebaseRateMismatch = (int)(-200786);
	public static final int DAQmxErrorBufferWithHWTimedSinglePointSampMode = (int)(-200690);
	public static final int DAQmx_CI_SemiPeriod_Units = (int)0x18AF;
	public static final String DAQmx_Val_Switch_Topology_1129_2_Wire_Quad_4x16_Matrix = (String)"1129/2-Wire Quad 4x16 Matrix";
	public static final int DAQmx_Exported_AdvTrig_Pulse_WidthUnits = (int)0x1647;
	public static final String DAQmx_Val_Switch_Topology_1130_4_Wire_Quad_16x1_Mux = (String)"1130/4-Wire Quad 16x1 Mux";
	public static final int DAQmxErrorChannelExpansionWithDifferentTriggerDevices = (int)(-201349);
	public static final int DAQmx_Val_BSeriesDAQ = (int)14662;
	public static final int DAQmxErrorMultiChanTypesInTask = (int)(-200559);
	public static final int DAQmxErrorPALBadReadCount = (int)(-50011);
	public static final int DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriodPolled = (int)(-201024);
	public static final int DAQmx_Val_Degrees = (int)10146;
	public static final int DAQmxErrorDAQmxSignalEventTypeNotSupportedByChanTypesOrDevicesInTask = (int)(-200987);
	public static final int DAQmxErrorPowerupStateNotSupported = (int)(-200663);
	public static final int DAQmxErrorRepeatedNumberInPreScaledValues = (int)(-200598);
	public static final int DAQmx_Val_N_Type_TC = (int)10077;
	public static final int DAQmxErrorChildNotFound = (int)(-26654);
	public static final int DAQmxErrorTaskReferencesMissingLocalChannel = (int)(-201072);
	public static final int DAQmxErrorFindDisconnectedBetweenPhysAndSimDeviceStatesInvalid = (int)(-201453);
	public static final int DAQmxErrorAttributeNotSettableWhenTaskIsRunning = (int)(-200450);
	public static final int DAQmx_Write_RawDataWidth = (int)0x217D;
	public static final int DAQmx_AI_Excit_UseMultiplexed = (int)0x2180;
	public static final int DAQmxErrorDeviceNotSupportedOnLocalSystem = (int)(-201474);
	public static final int DAQmxErrorDevsWithoutCommonSyncConnectionStrategy = (int)(-201456);
	public static final int DAQmxErrorPhysChanReservedForInputWhenDesiredForOutput = (int)(-201163);
	public static final int DAQmxErrorPALFileCloseFault = (int)(-50205);
	public static final int DAQmxErrorCalibrationSessionAlreadyOpen = (int)(-200108);
	public static final int DAQmx_AI_Resolution = (int)0x1765;
	public static final int DAQmx_Val_InsideWin = (int)10199;
	public static final int DAQmxErrorAttributeNotSupportedUnlessHWTSP = (int)(-201407);
	public static final int DAQmxErrorDuplicateTask = (int)(-200089);
	public static final int DAQmxErrorPxiResmanSystemNotInitialized = (int)(-26102);
	public static final int DAQmx_AI_Current_Units = (int)0x0701;
	public static final int DAQmx_DigEdge_RefTrig_DigFltr_TimebaseSrc = (int)0x2ED9;
	public static final int DAQmxWarningPALTransferAborted = (int)(50405);
	public static final int DAQmx_Val_Bar = (int)15880;
	public static final int DAQmx_DigLvl_PauseTrig_Src = (int)0x1379;
	public static final String DAQmx_Val_Switch_Topology_1193_Dual_16x1_Mux = (String)"1193/Dual 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_16x32_Matrix = (String)"2532/1-Wire 16x32 Matrix";
	public static final int DAQmxErrorIntermediateBufferSizeNotMultipleOfIncr = (int)(-200347);
	public static final int DAQmxErrorCJCChanNotSpecd = (int)(-200360);
	public static final int DAQmx_Val_PulseTime = (int)15865;
	public static final int DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseRate = (int)0x2212;
	public static final int DAQmxErrorNULLPtr = (int)(-200604);
	public static final int DAQmxErrorTristateLogicLevelNotSupported = (int)(-201392);
	public static final int DAQmx_Val_Pt3750 = (int)12481;
	public static final int DAQmx_SwitchDev_RelayList = (int)0x17DC;
	public static final int DAQmx_DO_LogicFamily = (int)0x296E;
	public static final int DAQmx_CI_Count = (int)0x0148;
	public static final int DAQmxErrorFiveVoltDetectFailed = (int)(-201406);
	public static final String DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Amplified_Mux = (String)"2501/1-Wire 48x1 Amplified Mux";
	public static final int DAQmx_CI_Period_DigFltr_TimebaseRate = (int)0x21EF;
	public static final int DAQmx_DigPattern_RefTrig_Src = (int)0x1437;
	public static final String DAQmx_Val_Switch_Topology_1166_32_SPDT = (String)"1166/32-SPDT";
	public static final int DAQmxErrorCannotReadRelativeToRefTrigUntilDone = (int)(-200281);
	public static final int DAQmx_Val_mVoltsPerPound = (int)15892;
	public static final int DAQmx_DigLvl_PauseTrig_DigFltr_Enable = (int)0x2228;
	public static final int DAQmxErrorInvalidCalExcitFrequency = (int)(-201183);
	public static final int DAQmx_CI_Encoder_ZIndexPhase = (int)0x0889;
	public static final int DAQmxErrorPxiResmanControllerTypeInvalid = (int)(-26301);
	public static final int DAQmx_Val_Velocity_LinEncoder = (int)16079;
	public static final int DAQmxErrorInputBufferSizeNotEqualSampsPerChanForFiniteSampMode = (int)(-200737);
	public static final String DAQmx_Val_Switch_Topology_1130_2_Wire_4x32_Matrix = (String)"1130/2-Wire 4x32 Matrix";
	public static final int DAQmxErrorDifferentDITristateValsForChansInTask = (int)(-200724);
	public static final int DAQmxErrorCOWritePulseHighTimeOutOfRange = (int)(-200686);
	public static final int DAQmxErrorIfElseBlockNotAllowedInConditionalRepeatLoopInScript = (int)(-201013);
	public static final int DAQmxSuccess = (int)(0);
	public static final int DAQmx_AI_SampAndHold_Enable = (int)0x181A;
	public static final int DAQmx_CI_Velocity_Encoder_BInputDigFltr_TimebaseSrc = (int)0x30E9;
	public static final int DAQmxErrorFirmwareFailedToDownload = (int)(-201263);
	public static final String DAQmx_Val_Switch_Topology_2594_4x1_Mux = (String)"2594/4x1 Mux";
	public static final int DAQmxErrorAnalogBusNotValid = (int)(-201353);
	public static final int DAQmx_CI_CountEdges_DigSync_Enable = (int)0x21FA;
	public static final int DAQmx_AO_TermCfg = (int)0x188E;
	public static final int DAQmxErrorConnectionNotPermittedOnChanReservedForRouting = (int)(-200189);
	public static final int DAQmxErrorPALThreadStackSizeNotSupported = (int)(-50603);
	public static final int DAQmxErrorPhysicalChansForChangeDetectionAndPatternMatch653x = (int)(-200892);
	public static final int DAQmx_CI_Period_Term = (int)0x18A4;
	public static final int DAQmxErrorInTimerTimeoutOnArm = (int)(-201417);
	public static final int DAQmxWarningAccessDenied = (int)(26111);
	public static final int DAQmxErrorSimulationCannotBeDisabledForDevCreatedAsSimulatedDev = (int)(-200856);
	public static final String DAQmx_Val_Switch_Topology_2501_2_Wire_Quad_6x1_Mux = (String)"2501/2-Wire Quad 6x1 Mux";
	public static final int DAQmxErrorOnlyUsePauseTrigSrcPrptyWithDevDataLines = (int)(-201136);
	public static final int DAQmx_Val_Bit_TermCfg_NRSE = (int)(1 << 1);
	public static final int DAQmxWarningPLLUnlocked = (int)(200007);
	public static final int DAQmxErrorSampClkRateUnavailable = (int)(-200660);
	public static final String DAQmx_Val_Switch_Topology_2531_1_Wire_8x64_Matrix = (String)"2531/1-Wire 8x64 Matrix";
	public static final int DAQmxErrorReferenceCurrentInvalid = (int)(-200154);
	public static final int DAQmx_AI_DigFltr_Bandpass_Width = (int)0x30C4;
	public static final int DAQmx_Val_LargeRng2Ctr = (int)10205;
	public static final String DAQmx_Val_Switch_Topology_2530_2_Wire_Quad_16x1_Mux = (String)"2530/2-Wire Quad 16x1 Mux";
	public static final int DAQmxErrorGetCalDataInvalidForCalMode = (int)(-201499);
	public static final int DAQmxErrordBReferenceValueNotGreaterThanZero = (int)(-201179);
	public static final int DAQmx_Val_4Wire = (int)4;
	public static final int DAQmx_Watchdog_DO_ExpirState = (int)0x21A7;
	public static final int DAQmx_Implicit_UnderflowBehavior = (int)0x2EFD;
	public static final int DAQmxErrorInvalidAcqTypeForFREQOUT = (int)(-200747);
	public static final int DAQmxErrorMinAndMaxNotSymmetric = (int)(-200266);
	public static final int DAQmx_AI_Velocity_Units = (int)0x2FF4;
	public static final int DAQmx_DigEdge_ArmStartTrig_Src = (int)0x1417;
	public static final int DAQmx_Val_DoNotAllowRegen = (int)10158;
	public static final int DAQmx_Val_Temp_BuiltInSensor = (int)10311;
	public static final int DAQmxErrorCalPWMLinearityFailed = (int)(-201293);
	public static final int DAQmxErrorSwitchNotResetBeforeScan = (int)(-200199);
	public static final int DAQmxErrorPxiResmanInvalidConfiguration = (int)(-26101);
	public static final String DAQmx_Val_Switch_Topology_1127_2_Wire_32x1_Mux = (String)"1127/2-Wire 32x1 Mux";
	public static final int DAQmx_CI_Pulse_Freq_DigSync_Enable = (int)0x2F0A;
	public static final int DAQmx_CI_Encoder_BInput_DigFltr_MinPulseWidth = (int)0x2201;
	public static final int DAQmx_Val_MilliVoltsPerInchPerSecond = (int)15964;
	public static final int DAQmxErrorPALDMALinkEventMissed = (int)(-50450);
	public static final int DAQmxErrorInconsistentDTToWrite = (int)(-209824);
	public static final int DAQmx_AI_DigFltr_Bandpass_CenterFreq = (int)0x30C3;
	public static final int DAQmxErrorSCXICableDevMustNotBeSimWhenModIsNotSim = (int)(-201154);
	public static final int DAQmx_CI_DutyCycle_Term = (int)0x308D;
	public static final int DAQmx_Val_FiniteSamps = (int)10178;
	public static final int DAQmxErrorPxiResmanSystemDescriptionSpecLimitation = (int)(-26403);
	public static final int DAQmx_RealTime_WriteRecoveryMode = (int)0x231A;
	public static final int DAQmxErrorInternalTimebaseSourceRateCombo = (int)(-200134);
	public static final int DAQmxErrorCannotSetPropertyWhenTaskIsReserved = (int)(-201288);
	public static final int DAQmx_Val_R_Type_TC = (int)10082;
	public static final String DAQmx_Val_Switch_Topology_2593_8x1_Terminated_Mux = (String)"2593/8x1 Terminated Mux";
	public static final int DAQmxErrorMeasCalAdjustMainPathOutputImpedance = (int)(-200506);
	public static final int DAQmx_Val_FullBridgeI = (int)10183;
	public static final int DAQmxWarningPALResourceBusy = (int)(50106);
	public static final String DAQmx_Val_Switch_Topology_2530_1_Wire_4x32_Matrix = (String)"2530/1-Wire 4x32 Matrix";
	public static final int DAQmxErrorTermWithoutDevInMultiDevTask = (int)(-200853);
	public static final int DAQmxWarningPxiResmanControllerParseError = (int)(26302);
	public static final int DAQmx_Val_DegF = (int)10144;
	public static final int DAQmxErrorInvalidWaitDurationBeforeIfElseBlockInScript = (int)(-201011);
	public static final int DAQmxErrorFileDeleteFault = (int)(-26107);
	public static final int DAQmx_Val_DegC = (int)10143;
	public static final int DAQmxErrorUnexpectedIDFollowingSwitchChanName = (int)(-200532);
	public static final int DAQmxErrorTooManyChansForAnalogRefTrigCDAQ = (int)(-201123);
	public static final int DAQmxErrorADCOverrun = (int)(-200019);
	public static final int DAQmxErrorInvalidCalVoltageForGivenGain = (int)(-200750);
	public static final int DAQmx_DigEdge_StartTrig_DigSync_Enable = (int)0x2227;
	public static final int DAQmxErrorAccessoryEEPROMIsCorrupt = (int)(-201376);
	public static final String DAQmx_Val_Switch_Topology_2725_Independent = (String)"2725/Independent";
	public static final int DAQmx_DO_Tristate = (int)0x18F3;
	public static final int DAQmxWarningChanCalExpired = (int)(200043);
	public static final int DAQmx_AI_Lowpass_Enable = (int)0x1802;
	public static final String DAQmx_Val_Switch_Topology_2584_1_Wire_Dual_6x1_Mux = (String)"2584/1-Wire Dual 6x1 Mux";
	public static final int DAQmxWarningPALMemoryHeapNotEmpty = (int)(50355);
	public static final int DAQmxErrorInputSignalSlowerThanMeasTime = (int)(-200302);
	public static final int DAQmxErrorDigInputNotSupported = (int)(-200647);
	public static final int DAQmx_Val_PXIe = (int)14706;
	public static final int DAQmxErrorPALReceiverSocketInvalid = (int)(-50503);
	public static final int DAQmx_AI_ACExcit_WireMode = (int)0x18CD;
	public static final int DAQmx_Val_HWTimedSinglePoint = (int)12522;
	public static final int DAQmx_CI_OutputState = (int)0x0149;
	public static final int DAQmxErrorWriteFailedMultipleCtrsWithFREQOUT = (int)(-200844);
	public static final int DAQmx_DI_Tristate = (int)0x1890;
	public static final int DAQmxErrorActiveDevNotSupportedWithMultiDevTask = (int)(-201207);
	public static final int DAQmxErrorInternalAIInputSrcInMultipleChanGroups = (int)(-200571);
	public static final int DAQmx_CO_Pulse_DutyCyc = (int)0x1176;
	public static final int DAQmxErrorDataVoltageLowAndHighIncompatible = (int)(-200902);
	public static final int DAQmx_Val_DegR = (int)10145;
	public static final int DAQmxErrorEmptyString = (int)(-200467);
	public static final int DAQmxErrorAOPropertiesCauseVoltageOverMax = (int)(-200582);
	public static final int DAQmxErrorExtRefClkRateNotSpecified = (int)(-200735);
	public static final int DAQmxErrorFirmwareRequiresUpgrade = (int)(-201340);
	public static final int DAQmxErrorResourcesInUseForProperty = (int)(-200353);
	public static final int DAQmxErrorRetrievingNetworkDeviceProperties = (int)(-201401);
	public static final int DAQmx_Write_NumChans = (int)0x217E;
	public static final int DAQmx_SwitchDev_Temperature = (int)0x301A;
	public static final int DAQmxErrorNegativeDurationNotSupported = (int)(-209822);
	public static final int DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseRate = (int)0x2230;
	public static final int DAQmx_Exported_AIConvClk_Pulse_Polarity = (int)0x1688;
	public static final int DAQmxErrorInvalidObject = (int)(-201233);
	public static final int DAQmx_CI_PulseWidth_DigFltr_TimebaseSrc = (int)0x220C;
	public static final int DAQmxErrorInvalidWaveformLengthInBreakBlock = (int)(-201212);
	public static final int DAQmxErrorPhysChanNotSupportedInSpecdSlotForCDAQ = (int)(-201106);
	public static final int DAQmx_CI_DutyCycle_DigFltr_Enable = (int)0x308E;
	public static final int DAQmx_CO_Prescaler = (int)0x226D;
	public static final int DAQmxErrorEEPROMTooNewForSoftware = (int)(-201141);
	public static final int DAQmxWarningPxiResmanChassisFileNotFound = (int)(26200);
	public static final int DAQmx_Val_20MHzTimebase = (int)12537;
	public static final int DAQmx_CI_MaxMeasPeriod = (int)0x3095;
	public static final int DAQmx_SwitchDev_Settled = (int)0x1243;
	public static final int DAQmx_AI_MeasType = (int)0x0695;
	public static final int DAQmxErrorNeitherRefClkNorSampClkTimebaseConfiguredForDSASync = (int)(-201440);
	public static final int DAQmxErrorInvalidNetworkConfiguration = (int)(-201259);
	public static final int DAQmx_AI_ChanCal_HasValidCalInfo = (int)0x2297;
	public static final int DAQmx_AIConv_Timebase_Src = (int)0x1339;
	public static final int DAQmx_SwitchScan_RepeatMode = (int)0x1248;
	public static final int DAQmx_CI_CountEdges_CountDir_TermCfg = (int)0x309D;
	public static final int DAQmx_Write_CurrWritePos = (int)0x1458;
	public static final int DAQmx_Val_OnbrdMemMoreThanHalfFull = (int)10237;
	public static final int DAQmx_RefTrig_PretrigSamples = (int)0x1445;
	public static final int DAQmxWarningPALBadReadCount = (int)(50011);
	public static final int DAQmxErrorRoutingSrcTermPXIStarXNotInSystemTimingSlot_Routing = (int)(-89157);
	public static final int DAQmx_RealTime_WaitForNextSampClkWaitMode = (int)0x22EF;
	public static final int DAQmxErrorCanNotPerformOpWhenNoChansInTask = (int)(-200478);
	public static final int DAQmxErrorNeedLabVIEW711PatchToUseDAQmxEvents = (int)(-200947);
	public static final int DAQmxErrorCannotPerformOpWhenTaskNotRunning = (int)(-200475);
	public static final int DAQmx_CI_CountEdges_CountReset_ActiveEdge = (int)0x2FB2;
	public static final int DAQmxWarningTrigmanLineNotReserved = (int)(26003);
	public static final int DAQmx_DO_UsbXferReqSize = (int)0x2A91;
	public static final int DAQmxErrorCantUseOnlyOnBoardMemWithProgrammedIO = (int)(-200819);
	public static final int DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseRate = (int)0x222B;
	public static final int DAQmxErrorWriteNoOutputChansInTask = (int)(-200459);
	public static final int DAQmx_PhysicalChan_AI_SupportedMeasTypes = (int)0x2FD7;
	public static final int DAQmxErrorNonbufferedOrNoChannels = (int)(-201395);
	public static final int DAQmx_DigEdge_ArmStartTrig_DigSync_Enable = (int)0x2231;
	public static final int DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod2 = (int)(-201023);
	public static final int DAQmx_Val_HalfBridge = (int)10187;
	public static final int DAQmxErrorProcedureNameExpectedInScript = (int)(-200025);
	public static final int DAQmxErrorTwoPartAttributeCalledOutOfOrder = (int)(-201194);
	public static final int DAQmxErrorInvalidExtTrigImpedance = (int)(-200426);
	public static final int DAQmxErrorCIHWTimedSinglePointNotSupportedForMeasType = (int)(-200998);
	public static final int DAQmxErrorAttrCannotBeReset = (int)(-200236);
	public static final int DAQmx_AI_Current_ACRMS_Units = (int)0x17E3;
	public static final int DAQmx_AO_DAC_Offset_Src = (int)0x2253;
	public static final int DAQmx_SampQuant_SampMode = (int)0x1300;
	public static final int DAQmx_AI_Bridge_InitialVoltage = (int)0x17ED;
	public static final int DAQmx_Val_NewtonMeters = (int)15881;
	public static final int DAQmxErrorExtCalibrationDataTooNewForSoftware = (int)(-201143);
	public static final int DAQmxWarningPALTransferOverread = (int)(50411);
	public static final int DAQmxErrorCppCantRemoveInvalidEventHandler = (int)(-200590);
	public static final int DAQmx_AI_Thrmcpl_CJCSrc = (int)0x1035;
	public static final int DAQmx_Val_MaxShearStrainAngle = (int)15978;
	public static final int DAQmxErrorInvalidAccessoryChange = (int)(-201341);
	public static final int DAQmxErrorStrobePhaseShiftDCMBecameUnlocked = (int)(-200391);
	public static final int DAQmxErrorChangeDetectionChanNotInTask = (int)(-200926);
	public static final int DAQmx_DelayFromSampClk_DelayUnits = (int)0x1304;
	public static final int DAQmxErrorInvalidRoutingDestinationTerminalName_Routing = (int)(-89121);
	public static final int DAQmx_Val_AnlgWin = (int)10103;
	public static final int DAQmxErrorInvalidGainBasedOnMinMax = (int)(-200258);
	public static final int DAQmxErrorPALDeviceNotSupported = (int)(-50302);
	public static final int DAQmx_CI_Velocity_Encoder_BInputDigFltr_MinPulseWidth = (int)0x30E8;
	public static final int DAQmxErrorConnectionsNotSupported = (int)(-201414);
	public static final int DAQmxErrorMinus12VFuseBlown = (int)(-201287);
	public static final int DAQmxErrorBuiltInTempSensorNotSupported = (int)(-200255);
	public static final int DAQmx_CO_CtrTimebase_DigFltr_MinPulseWidth = (int)0x2277;
	public static final String DAQmx_Val_Switch_Topology_2593_Dual_8x1_Mux = (String)"2593/Dual 8x1 Mux";
	public static final int DAQmxErrorCantReserveTaskWhileWatchdogTaskReserving = (int)(-201476);
	public static final int DAQmx_CI_Pulse_Time_LogicLvlBehavior = (int)0x30B4;
	public static final int DAQmx_PhysicalChan_AI_TermCfgs = (int)0x2342;
	public static final int DAQmxErrorOperationOnlyPermittedWhileScanning = (int)(-200177);
	public static final int DAQmx_Val_DynamicSignalAcquisition = (int)14649;
	public static final int DAQmxErrorDeviceNotUsableUntilUSBReplug = (int)(-201190);
	public static final int DAQmx_AI_LVDT_SensitivityUnits = (int)0x219A;
	public static final int DAQmx_CO_Pulse_LowTicks = (int)0x1171;
	public static final int DAQmxErrorNetworkDAQInvalidWEPKeyLength = (int)(-201290);
	public static final int DAQmxErrorNoAvailTrigLinesOnDevice = (int)(-200227);
	public static final int DAQmx_Exported_PauseTrig_OutputTerm = (int)0x1615;
	public static final int DAQmxErrorPropertyRequiresPerDeviceCfg = (int)(-201126);
	public static final int DAQmx_Exported_WatchdogExpiredEvent_OutputTerm = (int)0x21AA;
	public static final int DAQmxErrorChannelNotReservedForRouting = (int)(-200186);
	public static final int DAQmxErrorCantSetPowerupStateOnDigInChan = (int)(-200650);
	public static final int DAQmxErrorProgIODataXferForBufferedAO = (int)(-200767);
	public static final int DAQmxErrorProgrammedIOFailsBecauseOfWatchdogTimer = (int)(-201229);
	public static final int DAQmxErrorDataXferRequestConditionNotSpecifiedForCustomThreshold = (int)(-200944);
	public static final int DAQmxWarningUserAreaCRCNotCorrect = (int)(200054);
	public static final int DAQmxWarningSampClkRateTooLow = (int)(200027);
	public static final int DAQmxErrorPALMemoryFull = (int)(-50352);
	public static final int DAQmxErrorPALComponentTooOld = (int)(-50252);
	public static final int DAQmxErrorInputFIFOOverflow2 = (int)(-200361);
	public static final int DAQmx_Dev_ProductCategory = (int)0x29A9;
	public static final int DAQmxErrorCantSetAuthorForLocalChan = (int)(-201038);
	public static final int DAQmxErrorSCXIModSimMustMatchSCXIChassisSim = (int)(-201152);
	public static final int DAQmx_Scale_Poly_ForwardCoeff = (int)0x1234;
	public static final int DAQmxErrorPALFileSeekFault = (int)(-50206);
	public static final int DAQmxErrorCannotTristateBusyTerm_Routing = (int)(-89127);
	public static final int DAQmx_CI_Timestamp_InitialSeconds = (int)0x22B4;
	public static final int DAQmx_CI_Pulse_Freq_DigFltr_TimebaseSrc = (int)0x2F08;
	public static final int DAQmxErrorAnalogTrigChanNotExternal = (int)(-200711);
	public static final int DAQmx_CI_Pulse_Ticks_StartEdge = (int)0x2F15;
	public static final int DAQmxErrorSampClkRateTooLowForDivDown = (int)(-200272);
	public static final int DAQmxErrorFirmwareUpdateInvalidID = (int)(-201488);
	public static final int DAQmxErrorMarkerOutsideWaveformInScript = (int)(-200029);
	public static final int DAQmxErrorCalChanForwardPolyCoefNotSpecd = (int)(-200940);
	public static final int DAQmx_SampClk_UnderflowBehavior = (int)0x2961;
	public static final int DAQmxErrorTEDSMinPhysValGEMaxPhysVal = (int)(-200815);
	public static final int DAQmxErrorSelfCalFailedToConverge = (int)(-201385);
	public static final int DAQmxErrorWatchdogTimeoutOutOfRangeAndNotSpecialVal = (int)(-200668);
	public static final int DAQmx_Val_NIELVIS = (int)14755;
	public static final int DAQmxErrorExtCalTemperatureNotDAQmx = (int)(-200544);
	public static final int DAQmxErrorIncorrectNumChannelsToWrite = (int)(-200101);
	public static final int DAQmx_Val_Polynomial = (int)10449;
	public static final int DAQmx_DigEdge_RefTrig_DigSync_Enable = (int)0x2EDB;
	public static final int DAQmxErrorDevsWithoutSyncStrategies = (int)(-201426);
	public static final int DAQmxErrorPolyCoeffsInconsistent = (int)(-200537);
	public static final int DAQmxWarningInvalidCalConstValueForAI = (int)(200041);
	public static final int DAQmxWarningInconsistentFileFault = (int)(26655);
	public static final int DAQmxErrorCannotCalculateNumSampsTaskNotStarted = (int)(-200343);
	public static final int DAQmx_Val_AnlgEdge = (int)10099;
	public static final int DAQmxErrorSampClkTimebaseDivWithExtSampClk = (int)(-201100);
	public static final int DAQmx_AI_Accel_SensitivityUnits = (int)0x219C;
	public static final int DAQmx_Val_Square = (int)14753;
	public static final int DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseSrc = (int)0x2F01;
	public static final int DAQmx_PersistedTask_AllowInteractiveEditing = (int)0x22CD;
	public static final int DAQmxWarningInvalidCalConstValueForAO = (int)(200042);
	public static final int DAQmxErrorExtCalFunctionOutsideExtCalSession = (int)(-200439);
	public static final int DAQmx_SyncPulse_ResetDelay = (int)0x2F7D;
	public static final int DAQmxErrorChanCalExpired = (int)(-200934);
	public static final int DAQmx_AI_Force_IEPESensor_SensitivityUnits = (int)0x2F82;
	public static final int DAQmxErrorInvalidTimeValue = (int)(-201037);
	public static final int DAQmxErrorDSFStopClock = (int)(-200632);
	public static final int DAQmxErrorBufferedOpsNotSupportedInSpecdSlotForCDAQ = (int)(-201107);
	public static final int DAQmxErrorInvalidCloseAction = (int)(-200440);
	public static final int DAQmx_CI_SemiPeriod_DigFltr_MinPulseWidth = (int)0x221A;
	public static final int DAQmxWarningUserDefInfoStringTooLong = (int)(200013);
	public static final int DAQmx_AnlgLvl_PauseTrig_When = (int)0x1371;
	public static final int DAQmx_CI_Pulse_Ticks_LogicLvlBehavior = (int)0x30B6;
	public static final int DAQmx_CO_UsbXferReqCount = (int)0x3005;
	public static final int DAQmxErrorNegativeReadSampleNumber = (int)(-200277);
	public static final int DAQmx_CI_UsbXferReqCount = (int)0x3004;
	public static final int DAQmxErrorLoggingStartNewFileNotCalled = (int)(-201403);
	public static final int DAQmxErrorAttributeNotQueryableUnlessTaskIsCommitted = (int)(-200451);
	public static final int DAQmx_Val_PCIe = (int)13612;
	public static final int DAQmx_CI_Freq_DigFltr_MinPulseWidth = (int)0x21E8;
	public static final int DAQmx_Val_Bit_CouplingTypes_DC = (int)(1 << 1);
	public static final int DAQmx_Val_Volts = (int)10348;
	public static final int DAQmxWarningPALBadWriteCount = (int)(50014);
	public static final int DAQmxErrorDevImportFailedNoDeviceToOverwriteAndSimulationNotSupported = (int)(-201170);
	public static final int DAQmxErrorDLLLock = (int)(-200550);
	public static final int DAQmxErrorNoCommonTrigLineForTaskRoute = (int)(-200395);
	public static final int DAQmxErrorPALTransferOverread = (int)(-50411);
	public static final int DAQmxErrorPALConnectionReset = (int)(-50803);
	public static final int DAQmx_SampClk_Timebase_Src = (int)0x1308;
	public static final int DAQmx_Val_Notch = (int)16074;
	public static final int DAQmx_Val_USBbulk = (int)12590;
	public static final int DAQmx_DigEdge_RefTrig_Src = (int)0x1434;
	public static final int DAQmx_AI_Lowpass_SwitchCap_ExtClkFreq = (int)0x1885;
	public static final int DAQmx_SyncPulse_Src = (int)0x223D;
	public static final int DAQmx_Hshk_DelayAfterXfer = (int)0x22C2;
	public static final int DAQmx_Val_Bit_CouplingTypes_AC = (int)(1 << 0);
	public static final int DAQmx_AIConv_DigFltr_TimebaseSrc = (int)0x2EDE;
	public static final int DAQmx_Exported_AdvTrig_OutputTerm = (int)0x1645;
	public static final int DAQmx_Val_Software = (int)10292;
	public static final int DAQmxErrorRefClkSrcNotSupported = (int)(-200903);
	public static final int DAQmxErrorDevOnboardMemOverflowDuringHWTimedNonBufferedGen = (int)(-200795);
	public static final int DAQmxErrorCppCantRemoveOtherObjectsEventHandler = (int)(-200588);
	public static final int DAQmx_DigLvl_PauseTrig_DigFltr_MinPulseWidth = (int)0x2229;
	public static final int DAQmxErrorAssociatedChansHaveConflictingProps = (int)(-201467);
	public static final int DAQmxErrorInvalidRefClkSrc = (int)(-200415);
	public static final int DAQmx_Val_Bridge = (int)15908;
	public static final int DAQmx_Task_NumDevices = (int)0x29BA;
	public static final int DAQmxErrorDigFilterNotAvailableOnTerm = (int)(-200772);
	public static final int DAQmxErrorCalCouplingNotSupported = (int)(-201275);
	public static final String DAQmx_Val_Switch_Topology_2545_4x1_Terminated_Mux = (String)"2545/4x1 Terminated Mux";
	public static final int DAQmxErrorInvalidAttentuationBasedOnMinMax = (int)(-200321);
	public static final int DAQmx_Val_FirstPretrigSamp = (int)10427;
	public static final int DAQmxErrorRouteNotSupportedByHW_Routing = (int)(-89136);
	public static final int DAQmxErrorMultipleActivePhysChansNotSupported = (int)(-200752);
	public static final int DAQmx_AO_DAC_Offset_ExtSrc = (int)0x2254;
	public static final int DAQmx_Val_SCSeriesDAQ = (int)14645;
	public static final int DAQmxErrorPortConfiguredForOutput = (int)(-200121);
	public static final int DAQmx_AI_StrainGage_ForceReadFromChan = (int)0x2FFA;
	public static final int DAQmx_SampClk_WriteWfm_UseInitialWfmDT = (int)0x30FC;
	public static final int DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove_Routing = (int)(-89145);
	public static final int DAQmxErrorWriteFailedBecauseWatchdogExpired = (int)(-200678);
	public static final int DAQmx_Val_PrincipalStrainAngle = (int)15973;
	public static final int DAQmxErrorInvalidDTInsideWfmDataType = (int)(-200327);
	public static final int DAQmxErrorHandshakeTrigTypeNotSupportedGivenTimingType = (int)(-200905);
	public static final int DAQmx_RefClk_Rate = (int)0x1315;
	public static final String DAQmx_Val_Switch_Topology_2576_2_Wire_Octal_8x1_Mux = (String)"2576/2-Wire Octal 8x1 Mux";
	public static final int DAQmxErrorDataSizeMoreThanSizeOfEEPROMOnTEDS = (int)(-200825);
	public static final int DAQmxErrorInvalidSCCModuleForSlotSpecd = (int)(-201080);
	public static final int DAQmx_CI_CountEdges_LogicLvlBehavior = (int)0x309C;
	public static final int DAQmx_CI_CountEdges_Gate_Term = (int)0x30EE;
	public static final int DAQmx_CO_Pulse_Freq_InitialDelay = (int)0x0299;
	public static final int DAQmx_Write_OvercurrentChansExist = (int)0x29E8;
	public static final int DAQmx_PhysicalChan_AO_ManualControlAmplitude = (int)0x2A1F;
	public static final int DAQmxErrorOutputP2PNotSupportedWithMultithreadedScripts = (int)(-201373);
	public static final int DAQmxErrorRealDevAndSimDevNotSupportedInSameTask = (int)(-201206);
	public static final int DAQmxErrorFeatureNotAvailableOnAccessory = (int)(-209808);
	public static final int DAQmxErrorResourcesInUseForProperty_Routing = (int)(-89132);
	public static final int DAQmx_Val_ConstantGroupDelay = (int)16075;
	public static final int DAQmxErrorRoutingNotSupportedForDevice = (int)(-200039);
	public static final int DAQmx_ExtCal_RecommendedInterval = (int)0x1868;
	public static final int DAQmx_CI_LinEncoder_DistPerPulse = (int)0x0911;
	public static final int DAQmx_CI_Velocity_Encoder_AInputLogicLvlBehavior = (int)0x30DF;
	public static final int DAQmxErrorMeasTypeOrChannelNotSupportedForLogging = (int)(-201312);
	public static final int DAQmxErrorKeywordExpectedInScript = (int)(-200027);
	public static final int DAQmx_Val_Sleep = (int)12547;
	public static final int DAQmxErrorVerticalOffsetNotSupportedOnDevice = (int)(-201280);
	public static final int DAQmxErrorSessionCorruptedByDLLReload = (int)(-201095);
	public static final String DAQmx_Val_Switch_Topology_2503_2_Wire_4x6_Matrix = (String)"2503/2-Wire 4x6 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2527_1_Wire_Dual_32x1_Mux = (String)"2527/1-Wire Dual 32x1 Mux";
	public static final int DAQmxErrorDelayFromSampClkTooLong = (int)(-200337);
	public static final int DAQmx_Val_MetersPerSecondSquared = (int)12470;
	public static final int DAQmxErrorVoltageExcitIncompatibleWith2WireCfg = (int)(-200162);
	public static final int DAQmxWarningPXIe5611_NotConfigured = (int)(200076);
	public static final int DAQmxErrorCollectionDoesNotMatchChanType = (int)(-200569);
	public static final String DAQmx_Val_Switch_Topology_2585_1_Wire_10x1_Mux = (String)"2585/1-Wire 10x1 Mux";
	public static final int DAQmxErrorFileCloseFault = (int)(-26105);
	public static final int DAQmxErrorDSAExpansionMixedBoardsWrongOrderInPXIChassis = (int)(-201114);
	public static final int DAQmx_Val_None = (int)10230;
	public static final int DAQmx_Val_TeeRosette = (int)15970;
	public static final int DAQmxErrorAutoConfigBetweenMultipleDeviceStatesInvalid = (int)(-201466);
	public static final int DAQmxErrorInvalidAIAttenuation = (int)(-200412);
	public static final int DAQmxWarningPALResourceNotInitialized = (int)(50104);
	public static final int DAQmxErrorInvalidShuntSourceForCalibration = (int)(-209812);
	public static final int DAQmxErrorNoChangeDetectionOnSelectedLineForDevice = (int)(-201020);
	public static final int DAQmx_Write_RelativeTo = (int)0x190C;
	public static final int DAQmxErrorExtSampClkRateTooHighForBackplane = (int)(-200274);
	public static final int DAQmx_Val_Kelvins = (int)10325;
	public static final int DAQmxErrorPALConnectionAborted = (int)(-50802);
	public static final int DAQmxErrorPALTransferTimedOut = (int)(-50400);
	public static final int DAQmx_Val_Cont = (int)10117;
	public static final int DAQmxErrorPortReservedForHandshaking = (int)(-200118);
	public static final int DAQmxErrorOnDemandNotSupportedWithHWTimedSinglePoint = (int)(-200997);
	public static final int DAQmxErrorLoggingWriteSizeNotDivisible = (int)(-201382);
	public static final int DAQmxErrorTaskMissingChannelProperty = (int)(-201070);
	public static final int DAQmxErrorRefTrigTypeNotSupportedGivenTimingType = (int)(-200907);
	public static final int DAQmxErrorTrigmanLineNotReserved = (int)(-26003);
	public static final int DAQmxErrorPrptyGetSpecdSingleActiveChanFailedDueToDifftVals = (int)(-200659);
	public static final int DAQmx_CI_CustomScaleName = (int)0x189E;
	public static final int DAQmx_SampTimingType = (int)0x1347;
	public static final int DAQmxErrorExternalTimebaseRateNotknownForRate = (int)(-200132);
	public static final int DAQmxErrorInvalidSwitchChan = (int)(-200181);
	public static final int DAQmx_Val_LogAndRead = (int)15842;
	public static final int DAQmxErrorInconsistentAnalogTrigSettings = (int)(-200261);
	public static final int DAQmxErrorDeviceIsNotAValidSwitch = (int)(-200069);
	public static final int DAQmxErrorStopTriggerHasNotOccurred = (int)(-200008);
	public static final int DAQmxErrorMeasCalAdjustOscillatorPhaseDAC = (int)(-200521);
	public static final int DAQmxErrorFirmwareIsUpdating = (int)(-201377);
	public static final int DAQmx_AI_DigFltr_Notch_Width = (int)0x30C6;
	public static final int DAQmxErrorWriteRecoveryCannotKeepUpInHWTimedSinglePoint = (int)(-201021);
	public static final String DAQmx_Val_Switch_Topology_2527_4_Wire_16x1_Mux = (String)"2527/4-Wire 16x1 Mux";
	public static final int DAQmxErrorRefAndPauseTrigConfigured = (int)(-200628);
	public static final int DAQmxErrorCtrHWTimedSinglePointAndDataXferNotProgIO = (int)(-200842);
	public static final int DAQmx_Read_TotalSampPerChanAcquired = (int)0x192A;
	public static final int DAQmx_Sys_Tasks = (int)0x1267;
	public static final String DAQmx_Val_Switch_Topology_2593_Independent = (String)"2593/Independent";
	public static final int DAQmxErrorNoDMAChansAvailable = (int)(-200251);
	public static final int DAQmxErrorRoutingHardwareBusy_Routing = (int)(-89123);
	public static final int DAQmxErrorRoutingSrcTermPXIStarInSlot2 = (int)(-200700);
	public static final int DAQmx_Exported_RefTrig_OutputTerm = (int)0x0590;
	public static final int DAQmx_Val_Rosette_Strain_Gage = (int)15980;
	public static final int DAQmxErrorInvalidCharInDigPatternString = (int)(-200901);
	public static final int DAQmxErrorCertificateIsTooBigToTransfer = (int)(-201277);
	public static final int DAQmxErrorCantSetPropertyTaskNotRunning = (int)(-200972);
	public static final String DAQmx_Val_Switch_Topology_1193_16x1_Terminated_Mux = (String)"1193/16x1 Terminated Mux";
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_8x32_Matrix = (String)"2532/1-Wire Dual 8x32 Matrix";
	public static final int DAQmx_CO_ConstrainedGenMode = (int)0x29F2;
	public static final int DAQmxErrorIdentifierInUse = (int)(-201028);
	public static final String DAQmx_Val_Switch_Topology_2527_2_Wire_32x1_Mux = (String)"2527/2-Wire 32x1 Mux";
	public static final int DAQmxErrorCounterSyncAndRetriggered = (int)(-201348);
	public static final String DAQmx_Val_Switch_Topology_2520_80_SPST = (String)"2520/80-SPST";
	public static final int DAQmxErrorSCXIDigitizerSimMustNotBeSimWhenModIsNotSim = (int)(-201153);
	public static final int DAQmx_CO_AutoIncrCnt = (int)0x0295;
	public static final String DAQmx_Val_Switch_Topology_2530_1_Wire_128x1_Mux = (String)"2530/1-Wire 128x1 Mux";
	public static final int DAQmxErrorAutoStartReadNotAllowedEventRegistered = (int)(-200984);
	public static final int DAQmxErrorTwoWaitForTrigsAfterConnectionInScanlist = (int)(-200638);
	public static final int DAQmxErrorUnsupportedTrigTypeSendsSWTrig = (int)(-200373);
	public static final int DAQmxErrorGetPropertyNotOutputBufferedTask = (int)(-200454);
	public static final int DAQmxErrorSCXI1122ResistanceChanNotSupportedForCfg = (int)(-200105);
	public static final int DAQmx_Exported_DividedSampClkTimebase_OutputTerm = (int)0x21A1;
	public static final int DAQmxErrorRoutingSrcTermPXIDStarXNotInSystemTimingSlot_Routing = (int)(-89166);
	public static final int DAQmxErrorInconsistentChannelDirections = (int)(-200011);
	public static final int DAQmx_AO_FilterDelayAdjustment = (int)0x3072;
	public static final int DAQmx_Val_Action_Commit = (int)0;
	public static final String DAQmx_Val_Switch_Topology_1127_2_Wire_4x8_Matrix = (String)"1127/2-Wire 4x8 Matrix";
	public static final int DAQmxErrorDeviceNotUsableUntilColdStart = (int)(-201177);
	public static final int DAQmxErrorCannotWriteBeyondFinalFiniteSample = (int)(-201132);
	public static final int DAQmx_Val_SSeriesDAQ = (int)14644;
	public static final int DAQmx_Val_2Wire = (int)2;
	public static final int DAQmxErrorResourceReservedWithConflictingSettings = (int)(-201105);
	public static final int DAQmxErrorSampClkDCMLock = (int)(-200239);
	public static final int DAQmx_Read_RelativeTo = (int)0x190A;
	public static final int DAQmx_AnlgWin_StartTrig_When = (int)0x1401;
	public static final int DAQmxErrorRoutingSrcTermPXIStarInNonStarTriggerSlot_Routing = (int)(-89156);
	public static final int DAQmxWarningPALIrrelevantAttribute = (int)(50001);
	public static final int DAQmxErrorAnalogWaveformExpected = (int)(-200095);
	public static final int DAQmx_Buf_Output_BufSize = (int)0x186D;
	public static final int DAQmx_Val_XSeriesDAQ = (int)15858;
	public static final int DAQmx_Val_Pressure_Bridge = (int)15902;
	public static final String DAQmx_Val_Switch_Topology_2530_2_Wire_Dual_32x1_Mux = (String)"2530/2-Wire Dual 32x1 Mux";
	public static final int DAQmx_CI_Freq_MeasTime = (int)0x0145;
	public static final int DAQmxErrorInvalidLineGrouping = (int)(-200528);
	public static final int DAQmxErrorReversePolynomialCoefNotSpecd = (int)(-200325);
	public static final int DAQmx_SwitchChan_WireMode = (int)0x18E5;
	public static final int DAQmx_Val_Meters = (int)10219;
	public static final int DAQmx_AnlgEdge_StartTrig_DigSync_Enable = (int)0x2EE5;
	public static final int DAQmxErrorPALTransferInProgress = (int)(-50403);
	public static final int DAQmxWarningPxiResmanChassisSlotParseError = (int)(26204);
	public static final int DAQmx_Val_ContSamps = (int)10123;
	public static final int DAQmx_Dev_DO_MaxRate = (int)0x299A;
	public static final int DAQmxErrorPulseActiveAtStart = (int)(-200339);
	public static final int DAQmxErrorChassisWatchdogTimerExpired = (int)(-201478);
	public static final int DAQmx_Read_DevsWithInsertedOrRemovedAccessories = (int)0x2F71;
	public static final int DAQmx_Val_BelowLvl = (int)10107;
	public static final int DAQmxWarningCAPIStringTruncatedToFitBuffer = (int)(200026);
	public static final int DAQmx_CI_Period_Div = (int)0x192E;
	public static final int DAQmxErrorOpenSessionExists = (int)(-201480);
	public static final int DAQmxErrorMultipleChansNotSupportedDuringCalAdjust = (int)(-201494);
	public static final int DAQmx_SwitchDev_SwitchChanList = (int)0x18E7;
	public static final int DAQmx_AnlgWin_RefTrig_DigFltr_MinPulseWidth = (int)0x2EEC;
	public static final int DAQmx_Val_SCC = (int)14707;
	public static final int DAQmx_Val_10MHzRefClock = (int)12536;
	public static final int DAQmx_Val_InchPounds = (int)15883;
	public static final int DAQmx_Exported_SampClk_Pulse_Polarity = (int)0x1664;
	public static final int DAQmxErrorSelfTestFailedPowerSupplyOutOfTolerance = (int)(-209816);
	public static final int DAQmxErrorIntExcitSrcNotAvailable = (int)(-200161);
	public static final int DAQmxWarningPALFunctionObsolete = (int)(50254);
	public static final int DAQmx_Dev_ProductNum = (int)0x231D;
	public static final String DAQmx_Val_Switch_Topology_2584_2_Wire_6x1_Mux = (String)"2584/2-Wire 6x1 Mux";
	public static final int DAQmx_Write_TotalSampPerChanGenerated = (int)0x192B;
	public static final int DAQmx_Val_mVoltsPerVolt = (int)15897;
	public static final int DAQmxErrorCannotOpenTopologyCfgFile = (int)(-200328);
	public static final int DAQmxErrorHostnameAlreadyInUse = (int)(-201369);
	public static final String DAQmx_Val_Switch_Topology_1127_4_Wire_16x1_Mux = (String)"1127/4-Wire 16x1 Mux";
	public static final int DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqDiscreteVals = (int)0x30C8;
	public static final int DAQmx_Val_RisingSlope = (int)10280;
	public static final int DAQmx_CI_TwoEdgeSep_SecondTermCfg = (int)0x30AD;
	public static final int DAQmx_CI_Encoder_AInput_DigSync_Enable = (int)0x21FF;
	public static final int DAQmx_AO_PowerAmp_Gain = (int)0x3065;
	public static final int DAQmxErrorFileVersionMismatch = (int)(-201303);
	public static final int DAQmxErrorPrptyGetImpliedActiveChanFailedDueToDifftVals = (int)(-200658);
	public static final int DAQmxWarningPxiResmanChassisBridgeNotFound = (int)(26201);
	public static final int DAQmxErrorSendAdvCmpltAfterWaitForTrigInScanlist = (int)(-200640);
	public static final int DAQmxErrorInvalidCouplingForMeasurementType = (int)(-201279);
	public static final int DAQmx_Val_CurrentRMS = (int)10351;
	public static final int DAQmxErrorDifferentRawDataFormats = (int)(-200955);
	public static final int DAQmx_Val_MSeriesDAQ = (int)14643;
	public static final String DAQmx_Val_Switch_Topology_2534_1_Wire_8x32_Matrix = (String)"2534/1-Wire 8x32 Matrix";
	public static final int DAQmx_AnlgEdge_RefTrig_DigFltr_TimebaseRate = (int)0x2EE9;
	public static final String DAQmx_Val_Switch_Topology_2543_Dual_4x1_Terminated_Mux = (String)"2543/Dual 4x1 Terminated Mux";
	public static final int DAQmxErrorNoCabledDevice = (int)(-201505);
	public static final int DAQmx_Dev_AI_Couplings = (int)0x2994;
	public static final int DAQmxErrorUnsupportedSignalTypeExportSignal = (int)(-200375);
	public static final int DAQmxErrorChanCalScaleTypeNotSet = (int)(-200935);
	public static final int DAQmxErrorCardsIncompatible = (int)(-201354);
	public static final int DAQmx_Val_NetworkDAQ = (int)14829;
	public static final int DAQmxErrorExtCalNotComplete = (int)(-200443);
	public static final int DAQmxErrorPhysicalChannelNotSpecified = (int)(-200099);
	public static final int DAQmxErrorNoPolyScaleCoeffs = (int)(-200404);
	public static final int DAQmxWarningPxiResmanModuleParseError = (int)(26500);
	public static final int DAQmxWarningPALBadAddressClass = (int)(50015);
	public static final int DAQmxErrorCannotWriteAfterStartWithOnboardMemory = (int)(-200295);
	public static final int DAQmxErrorReferenceResistanceInvalid = (int)(-200155);
	public static final int DAQmxWarningPxiResmanControllerFileNotFound = (int)(26300);
	public static final int DAQmxErrorWaitForNextSampClkDetectedMissedSampClk = (int)(-209802);
	public static final int DAQmxErrorInsufficientOnBoardMemForNumRecsAndSamps = (int)(-200413);
	public static final int DAQmxErrorFilterDelayRemovalNotPosssibleWithAnalogTrigger = (int)(-201396);
	public static final int DAQmxErrorResourcesInUseForInversionInTask = (int)(-200366);
	public static final int DAQmxErrorConnectOperatorInvalidAtPointInList = (int)(-200066);
	public static final int DAQmxErrorInconsistentNumSamplesToWrite = (int)(-200103);
	public static final int DAQmx_Val_TwoEdgeSep = (int)10267;
	public static final int DAQmx_RefTrig_Delay = (int)0x1483;
	public static final int DAQmxErrorInvalidNumRefVoltagesToWrite = (int)(-201430);
	public static final int DAQmxWarningOutputGainTooLowForRFFreq = (int)(200031);
	public static final String DAQmx_Val_Switch_Topology_2575_2_Wire_98x1_Mux = (String)"2575/2-Wire 98x1 Mux";
	public static final int DAQmxErrorAccessDenied = (int)(-26111);
	public static final int DAQmxErrorChannelExpansionWithInvalidAnalogTriggerDevice = (int)(-201362);
	public static final int DAQmxErrorScriptHasInvalidCharacter = (int)(-200023);
	public static final int DAQmxErrorDuplicateChanNameInCfgFile = (int)(-201081);
	public static final int DAQmx_CI_Period_DigSync_Enable = (int)0x21F0;
	public static final int DAQmxErrorTooManyPhysicalChansInList = (int)(-200071);
	public static final int DAQmx_Val_QuarterBridgeII = (int)10272;
	public static final int DAQmx_AI_Freq_ThreshVoltage = (int)0x0815;
	public static final int DAQmx_Val_QuarterBridge = (int)10270;
	public static final String DAQmx_Val_Switch_Topology_2586_10_SPST = (String)"2586/10-SPST";
	public static final int DAQmx_Logging_TDMS_Operation = (int)0x2EC7;
	public static final int DAQmx_Read_OvercurrentChans = (int)0x29E7;
	public static final int DAQmxErrorNetworkStatusConnectionLost = (int)(-201390);
	public static final int DAQmx_AI_InputSrc = (int)0x2198;
	public static final int DAQmxErrorSelfTestFailed = (int)(-200020);
	public static final int DAQmx_CI_GPS_SyncSrc = (int)0x1093;
	public static final int DAQmxErrorCOSampModeSampTimingTypeSampClkConflict = (int)(-200778);
	public static final int DAQmxErrorHWTimedSinglePointAndDataXferNotDMA = (int)(-201329);
	public static final int DAQmxErrorCardDevCarrierSimMustMatch = (int)(-201358);
	public static final int DAQmx_CI_Period_DigFltr_Enable = (int)0x21EC;
	public static final int DAQmxErrorLocalChannelSpecdWithNoParentTask = (int)(-201073);
	public static final int DAQmxErrorLines4To7ConfiguredForOutput = (int)(-200125);
	public static final int DAQmxErrorOneChanReadForMultiChanTask = (int)(-200523);
	public static final int DAQmxErrorCannotGetPropertyWhenTaskNotReservedCommittedOrRunning = (int)(-200983);
	public static final int DAQmxWarningOverVoltageProtectionActivated = (int)(200051);
	public static final int DAQmxErrorTaskReferencesLocalChannelFromOtherTask = (int)(-201071);
	public static final int DAQmxErrorInvalidJumperedAttr = (int)(-200259);
	public static final int DAQmx_CI_AngEncoder_InitialAngle = (int)0x0881;
	public static final int DAQmxErrorSampClkRateNotSupportedWithEARDisabled = (int)(-201001);
	public static final int DAQmxErrorAttributeInconsistentAcrossRepeatedPhysicalChannels = (int)(-200128);
	public static final int DAQmx_CO_Pulse_IdleState = (int)0x1170;
	public static final int DAQmxWarningTrigmanUnknownError = (int)(26000);
	public static final int DAQmx_AI_Atten = (int)0x1801;
	public static final int DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo2 = (int)(-200745);
	public static final int DAQmx_Dev_AI_FreqRngs = (int)0x2992;
	public static final int DAQmx_Exported_RdyForXferEvent_DeassertCondCustomThreshold = (int)0x2964;
	public static final int DAQmx_Read_OpenChansExist = (int)0x3100;
	public static final String DAQmx_Val_Switch_Topology_1129_2_Wire_4x64_Matrix = (String)"1129/2-Wire 4x64 Matrix";
	public static final int DAQmxErrorOnlyPEMOrDERCertiticatesAccepted = (int)(-201276);
	public static final int DAQmx_Dev_PXI_SlotNum = (int)0x232A;
	public static final int DAQmxErrorInvalidSubsetLengthInBreakBlock = (int)(-201213);
	public static final int DAQmx_AnlgEdge_RefTrig_Hyst = (int)0x1421;
	public static final int DAQmxErrorPALBadCount = (int)(-50008);
	public static final int DAQmxErrorInvalidWirelessSecuritySelection = (int)(-201249);
	public static final int DAQmxWarningRateViolatesMaxADCRate = (int)(200012);
	public static final int DAQmx_CI_CountEdges_DigFltr_TimebaseSrc = (int)0x21F8;
	public static final String DAQmx_Val_Switch_Topology_1130_2_Wire_Quad_32x1_Mux = (String)"1130/2-Wire Quad 32x1 Mux";
	public static final int DAQmxErrorAOMinMaxNotSupportedGivenDACRange = (int)(-200872);
	public static final int DAQmxErrorCalibrationFailed = (int)(-200157);
	public static final int DAQmxErrorFileNotFound = (int)(-26103);
	public static final int DAQmx_Cal_UserDefinedInfo_MaxSize = (int)0x191C;
	public static final int DAQmx_CO_Pulse_HighTicks = (int)0x1169;
	public static final int DAQmxErrorRetriggeringInvalidForGivenSettings = (int)(-201320);
	public static final int DAQmx_CI_CountEdges_CountReset_TermCfg = (int)0x309F;
	public static final int DAQmx_CO_OutputType = (int)0x18B5;
	public static final int DAQmxErrorInterpolationRateNotPossible = (int)(-200270);
	public static final int DAQmxErrorCOWritePulseLowTimeOutOfRange = (int)(-200687);
	public static final int DAQmxErrorDriverDeviceGUIDNotFound_Routing = (int)(-88705);
	public static final int DAQmxErrorChangeDetectionChanNotTristated = (int)(-200925);
	public static final int DAQmxErrorPALOSFault = (int)(-50202);
	public static final int DAQmxErrorStartFailedDueToWriteFailure = (int)(-200946);
	public static final int DAQmxErrorConnectionInScanlistMustWaitForTrig = (int)(-200636);
	public static final int DAQmxWarningSampClkRateViolatesSettlingTimeForGen = (int)(200040);
	public static final int DAQmx_AI_Bridge_TwoPointLin_Second_ElectricalVal = (int)0x2F8C;
	public static final int DAQmxErrorPALComponentNotFound = (int)(-50251);
	public static final int DAQmx_AI_Resistance_Units = (int)0x0955;
	public static final String DAQmx_Val_Switch_Topology_2530_1_Wire_Dual_64x1_Mux = (String)"2530/1-Wire Dual 64x1 Mux";
	public static final int DAQmxErrorCantMaintainExistingValueAOSync = (int)(-200793);
	public static final int DAQmxErrorSoftwareTooNewForEEPROM = (int)(-201142);
	public static final int DAQmx_Dev_AO_SampModes = (int)0x2FDD;
	public static final int DAQmxErrorNetworkTargetNotFound = (int)(-201251);
	public static final int DAQmx_AI_ACExcit_Freq = (int)0x0101;
	public static final int DAQmx_Val_PulseTicks = (int)15866;
	public static final int DAQmx_CI_Pulse_Freq_DigFltr_MinPulseWidth = (int)0x2F07;
	public static final int DAQmxErrorFailedToEnableHighSpeedInputClock = (int)(-200627);
	public static final int DAQmx_Val_InchOunces = (int)15882;
	public static final int DAQmxErrorFilePreallocationFailed = (int)(-201400);
	public static final int DAQmxErrorGlobalChanCannotBeSavedSoInteractiveEditsAllowed = (int)(-200884);
	public static final int DAQmx_CI_Velocity_Encoder_AInputTerm = (int)0x30DD;
	public static final int DAQmx_Val_Internal = (int)10200;
	public static final int DAQmxErrorInconsistentThreshVoltageAcrossTerminals = (int)(-209807);
	public static final int DAQmxErrorAllChansShouldBeProvidedForCalibration = (int)(-201482);
	public static final int DAQmx_CI_Period_TermCfg = (int)0x3099;
	public static final int DAQmx_CI_CtrTimebaseActiveEdge = (int)0x0142;
	public static final int DAQmxErrorInvalidIdentifierFollowingSeparatorInList = (int)(-200051);
	public static final int DAQmx_Write_WaitMode = (int)0x22B1;
	public static final int DAQmx_Val_Position_AngEncoder = (int)10360;
	public static final int DAQmxErrorNoChangeDetectOnNonInputDigLineForDev = (int)(-200798);
	public static final int DAQmxWarningServiceNotRunning = (int)(26804);
	public static final int DAQmx_Val_CurrReadPos = (int)10425;
	public static final int DAQmx_DO_UsbXferReqCount = (int)0x3003;
	public static final int DAQmx_Val_WriteToPROM = (int)12539;
	public static final int DAQmx_RefTrig_Term = (int)0x2F1F;
	public static final int DAQmxErrorCantExceedRelayDriveLimit = (int)(-200671);
	public static final int DAQmxErrorCabledModuleNotCapableOfRoutingAI = (int)(-200151);
	public static final int DAQmx_AI_Bridge_ShuntCal_ShuntCalBActualResistance = (int)0x2F7B;
	public static final int DAQmxWarningPXIe5601_NotConfigured = (int)(200063);
	public static final int DAQmx_Write_ExternalOvervoltageChans = (int)0x30BC;
	public static final int DAQmx_Val_Newtons = (int)15875;
	public static final int DAQmx_AnlgWin_RefTrig_Btm = (int)0x1428;
	public static final int DAQmxErrorMStudioCppRemoveEventsBeforeStop = (int)(-200991);
	public static final int DAQmxErrorOutputFIFOUnderflow2 = (int)(-200621);
	public static final int DAQmx_AI_StrainGage_Cfg = (int)0x0982;
	public static final int DAQmxErrorReservationConflict = (int)(-201352);
	public static final int DAQmx_Val_E_Type_TC = (int)10055;
	public static final int DAQmxErrorOverloadedChansExistNotRead = (int)(-200362);
	public static final String DAQmx_Val_Switch_Topology_1130_2_Wire_Octal_16x1_Mux = (String)"1130/2-Wire Octal 16x1 Mux";
	public static final int DAQmxErrorPALComponentAlreadyLoaded = (int)(-50260);
	public static final int DAQmxErrorOddTotalNumSampsToWrite = (int)(-200692);
	public static final int DAQmxWarningPretrigCoercion = (int)(200020);
	public static final int DAQmx_DI_NumLines = (int)0x2178;
	public static final int DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2_Routing = (int)(-89147);
	public static final int DAQmxErrorStartTrigTypeNotSupportedGivenTimingType = (int)(-200904);
	public static final int DAQmx_CI_CtrTimebaseSrc = (int)0x0143;
	public static final int DAQmxWarningPALBadReadOffset = (int)(50010);
	public static final int DAQmxErrorReadNotCompleteBeforeSampClk = (int)(-209800);
	public static final int DAQmxErrorInvalidRangeStatementCharInList = (int)(-200208);
	public static final int DAQmxErrorTimeout = (int)(-26802);
	public static final int DAQmxErrorCJCChanAlreadyUsed = (int)(-200352);
	public static final int DAQmxErrorPxiResmanSystemDescriptionWriteError = (int)(-26402);
	public static final int DAQmx_Dev_DO_Lines = (int)0x2322;
	public static final int DAQmxErrorBufferedOperationsNotSupportedOnChannelStandalone = (int)(-209809);
	public static final int DAQmxErrorInvalidOutputVoltageAtSampClkRate = (int)(-200392);
	public static final int DAQmxErrorTimingSrcDoesNotExist = (int)(-200738);
	public static final int DAQmxErrorBridgeOffsetNullingCalNotSupported = (int)(-200696);
	public static final int DAQmxErrorStartTrigSrcEqualToSampClkSrc = (int)(-200953);
	public static final int DAQmxErrorActionNotSupportedTaskNotWatchdog = (int)(-200635);
	public static final int DAQmxErrorDelayFromSampleClockOutOfRangeForHWTSP = (int)(-201409);
	public static final int DAQmxErrorSampleValueOutOfRange = (int)(-200490);
	public static final int DAQmxErrorTrigmanConflictingRouteNoUnreserve = (int)(-26007);
	public static final int DAQmxErrorSampPerChanNotMultOfXferSize = (int)(-200837);
	public static final int DAQmxErrorFileWriteProtected = (int)(-201302);
	public static final int DAQmxErrorNoAnalogTrigHW = (int)(-200214);
	public static final int DAQmxErrorRoutingDestTermPXIDStarXNotInSystemTimingSlot_Routing = (int)(-89167);
	public static final int DAQmxErrorWatchdogTimerFailsBecauseOfProgrammedIO = (int)(-201228);
	public static final int DAQmxErrorLibraryNotPresent = (int)(-200090);
	public static final int DAQmxErrorBridgeScalesUnsupported = (int)(-201336);
	public static final int DAQmx_PhysicalChan_TEDS_SerialNum = (int)0x21DC;
	public static final int DAQmx_CI_CountEdges_DigFltr_TimebaseRate = (int)0x21F9;
	public static final int DAQmx_Val_CartesianShearStrainXY = (int)15976;
	public static final int DAQmxErrorInvalidRangeOfObjectsSyntaxInString = (int)(-200498);
	public static final int DAQmxErrorNoMoreSpace = (int)(-200293);
	public static final int DAQmxErrorSampClockOutputTermNotSupportedGivenTimingType = (int)(-200910);
	public static final int DAQmx_Read_OpenThrmcplChansExist = (int)0x2A96;
	public static final int DAQmxErrorCardDetectedDoesNotMatchExpectedCard = (int)(-201404);
	public static final int DAQmxErrorCannotReadWhenAutoStartFalseAndTaskNotRunningOrCommitted = (int)(-200473);
	public static final int DAQmxErrorInputFIFOOverflowDuringCalibration = (int)(-201188);
	public static final int DAQmx_AnlgWin_RefTrig_Src = (int)0x1426;
	public static final int DAQmx_Val_GroupByChannel = (int)0;
	public static final int DAQmxErrorSoftwareTooNewForHardware = (int)(-201140);
	public static final int DAQmxWarningPALBadDevice = (int)(50002);
	public static final int DAQmx_CI_CountEdges_InitialCnt = (int)0x0698;
	public static final String DAQmx_Val_Switch_Topology_2501_4_Wire_12x1_Mux = (String)"2501/4-Wire 12x1 Mux";
	public static final int DAQmxErrorCounterStartPauseTriggerConflict = (int)(-200146);
	public static final int DAQmxErrorSCXI1600ImportNotSupported = (int)(-201174);
	public static final int DAQmxErrorEventOutputTermIncludesTrigSrc = (int)(-200952);
	public static final int DAQmxErrorRangeWithTooManyObjects = (int)(-200592);
	public static final int DAQmxErrorBlankStringExpansionFoundNoSupportedCDAQSyncConnectionDevices = (int)(-201460);
	public static final int DAQmx_CI_DutyCycle_LogicLvlBehavior = (int)0x30A2;
	public static final int DAQmx_Write_OvercurrentChans = (int)0x29E9;
	public static final int DAQmx_CO_Pulse_LowTime = (int)0x18BB;
	public static final int DAQmxErrorDeviceNameTooLong = (int)(-201337);
	public static final int DAQmxWarningRateViolatesSettlingTime = (int)(200011);
	public static final int DAQmxErrorCounterNonResponsiveAndReset = (int)(-201313);
	public static final int DAQmxErrorChanDoesNotSupportCJC = (int)(-200976);
	public static final int DAQmxErrorPALLogicalBufferFull = (int)(-50407);
	public static final int DAQmxErrorBufferAndDataXferMode = (int)(-200216);
	public static final int DAQmxErrorTaskNotInDataNeighborhood = (int)(-200485);
	public static final int DAQmx_CI_Pulse_Time_Term = (int)0x2F0C;
	public static final int DAQmx_DI_LogicFamily = (int)0x296D;
	public static final int DAQmxErrorDuplicateDeviceName_Routing = (int)(-88715);
	public static final int DAQmx_SampQuant_SampPerChan = (int)0x1310;
	public static final int DAQmxErrorWaveformWriteOutOfBounds = (int)(-200311);
	public static final int DAQmx_Dev_AO_CurrentRngs = (int)0x299C;
	public static final int DAQmx_Val_SCXIModule = (int)14660;
	public static final int DAQmxWarningExternalCRCNotCorrect = (int)(200046);
	public static final int DAQmxErrorSpecdSlotAlreadyOccupied = (int)(-201033);
	public static final int DAQmxErrorPhysChanMeasType = (int)(-200431);
	public static final int DAQmxErrorCounterNoTimebaseEdgesBetweenGates = (int)(-200140);
	public static final int DAQmx_AI_Thrmstr_R1 = (int)0x1061;
	public static final int DAQmxErrorTrigWhenOnDemandSampTiming = (int)(-200262);
	public static final int DAQmxErrorTrigWhenAOHWTimedSinglePtSampMode = (int)(-200812);
	public static final int DAQmx_CI_CtrTimebase_DigFltr_TimebaseRate = (int)0x2274;
	public static final int DAQmx_Val_Ground = (int)2;
	public static final int DAQmxErrorDontMixSyncPulseAndSampClkTimebaseOn449x = (int)(-201441);
	public static final int DAQmxErrorPALInvalidDeviceState = (int)(-50804);
	public static final int DAQmx_CI_NumPossiblyInvalidSamps = (int)0x193C;
	public static final String DAQmx_Val_Switch_Topology_2530_1_Wire_Quad_32x1_Mux = (String)"2530/1-Wire Quad 32x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Amplified_Mux = (String)"2501/2-Wire 24x1 Amplified Mux";
	public static final int DAQmxErrorUnexpectedSwitchActionInList = (int)(-200065);
	public static final int DAQmx_CI_CountEdges_CountReset_DigSync_Enable = (int)0x2FB7;
	public static final int DAQmx_AI_DataXferCustomThreshold = (int)0x230C;
	public static final int DAQmxErrorPALIrrelevantAttribute = (int)(-50001);
	public static final int DAQmx_AI_Excit_IdleOutputBehavior = (int)0x30B8;
	public static final int DAQmx_CI_Pulse_Time_DigFltr_TimebaseRate = (int)0x2F11;
	public static final int DAQmx_DO_NumLines = (int)0x2179;
	public static final int DAQmx_Val_Interrupts = (int)10204;
	public static final int DAQmx_Val_WaitForInterrupt = (int)12523;
	public static final int DAQmxErrorInputCfgFailedBecauseWatchdogExpired = (int)(-200712);
	public static final String DAQmx_Val_Switch_Topology_2542_Quad_2x1_Terminated_Mux = (String)"2542/Quad 2x1 Terminated Mux";
	public static final int DAQmxErrorCardTopologyError = (int)(-201356);
	public static final int DAQmxErrorPLLLock = (int)(-200245);
	public static final int DAQmxErrorPALMessageOverflow = (int)(-50650);
	public static final int DAQmx_CO_EnableInitialDelayOnRetrigger = (int)0x2EC9;
	public static final int DAQmx_DigPattern_PauseTrig_When = (int)0x2170;
	public static final int DAQmx_Dev_CI_TrigUsage = (int)0x298A;
	public static final int DAQmx_Val_Bit_TriggerUsageTypes_Pause = (int)(1 << 1);
	public static final int DAQmx_Val_OnBrdMemMoreThanHalfFull = (int)10237;
	public static final int DAQmxErrorRequestedSignalInversionForRoutingNotPossible = (int)(-200042);
	public static final int DAQmxErrorTEDSSensorPhysicalChannelConflict = (int)(-201053);
	public static final int DAQmx_AIConv_DigFltr_TimebaseRate = (int)0x2EDF;
	public static final int DAQmx_AI_Bridge_Units = (int)0x2F92;
	public static final int DAQmx_CI_Encoder_BInput_DigFltr_TimebaseSrc = (int)0x2202;
	public static final int DAQmxErrorOutputBoardClkDCMBecameUnlocked = (int)(-200388);
	public static final int DAQmxErrorAIMinTooLarge = (int)(-200577);
	public static final int DAQmx_Val_PipelinedSampClk = (int)14668;
	public static final int DAQmxErrorPALBadWriteOffset = (int)(-50013);
	public static final String DAQmx_Val_Switch_Topology_2527_1_Wire_64x1_Mux = (String)"2527/1-Wire 64x1 Mux";
	public static final int DAQmxErrorCDAQSyncConnectionToSamePort = (int)(-201457);
	public static final int DAQmx_CI_CountEdges_CountReset_DigFltr_Enable = (int)0x2FB3;
	public static final int DAQmx_RefClk_Src = (int)0x1316;
	public static final int DAQmxErrorDataXferCustomThresholdNotSpecified = (int)(-200943);
	public static final int DAQmxErrorMinNotLessThanMax = (int)(-200082);
	public static final int DAQmx_Val_BurstHandshake = (int)12548;
	public static final int DAQmx_PhysicalChan_DI_ChangeDetectSupported = (int)0x29A6;
	public static final int DAQmxErrorOnlyOneTaskCanPerformDOMemoryMappingAtATime = (int)(-201124);
	public static final int DAQmx_SampClk_Rate = (int)0x1344;
	public static final int DAQmxErrorDAQmxSWEventsWithDifferentCallMechanisms = (int)(-200978);
	public static final int DAQmxErrorPALBadWriteMode = (int)(-50012);
	public static final int DAQmxErrorInvalidVoltageReadingDuringExtCal = (int)(-200446);
	public static final int DAQmx_AI_ADCTimingMode = (int)0x29F9;
	public static final int DAQmx_CI_CountEdges_Gate_LogicLvlBehavior = (int)0x30F0;
	public static final int DAQmxWarningPxiResmanChassisTriggerParseError = (int)(26206);
	public static final int DAQmxErrorChanDuplicatedInPath = (int)(-200183);
	public static final int DAQmxErrorPXIStarAndClock10Sync = (int)(-200885);
	public static final int DAQmxErrorMultiRecWithRIS = (int)(-200416);
	public static final int DAQmxErrorCalibrationFailedAOOutOfRange = (int)(-201295);
	public static final int DAQmx_AO_DAC_Rng_High = (int)0x182E;
	public static final int DAQmx_AO_FilterDelay = (int)0x3075;
	public static final int DAQmx_SwitchChan_Impedance = (int)0x0641;
	public static final int DAQmxErrorWaitUntilDoneDoesNotIndicateDone = (int)(-200560);
	public static final int DAQmx_Val_g = (int)10186;
	public static final int DAQmxErrorHandshakeEventOutputTermNotSupportedGivenTimingType = (int)(-200915);
	public static final int DAQmxErrorDelayFromSampClkWithExtConv = (int)(-200435);
	public static final int DAQmxWarningPALBadWindowType = (int)(50016);
	public static final int DAQmxErrorInvalidAIGainCalConst = (int)(-200718);
	public static final int DAQmxErrorCounterOverflow = (int)(-200141);
	public static final int DAQmx_Val_LowFreq1Ctr = (int)10105;
	public static final int DAQmx_CI_Encoder_AInputTerm = (int)0x219D;
	public static final int DAQmxErrorWriteNotCompleteBeforeSampClk = (int)(-209801);
	public static final int DAQmxWarningNoChangeSupersededByIdleBehavior = (int)(200079);
	public static final int DAQmxErrorReversePolyOrderNotPositive = (int)(-200402);
	public static final int DAQmxWarningTimestampCounterRolledOver = (int)(200003);
	public static final int DAQmx_AO_FuncGen_ModulationType = (int)0x2A22;
	public static final int DAQmxErrorPrimingCfgFIFO = (int)(-200329);
	public static final int DAQmxErrorPlus3VFuseBlown = (int)(-201284);
	public static final int DAQmxErrorElvis2PowerRailFault = (int)(-201199);
	public static final int DAQmx_Sys_NIDAQMajorVersion = (int)0x1272;
	public static final int DAQmxErrorMemMapAndBuffer = (int)(-200215);
	public static final int DAQmxErrorInvalidTimebaseForCOHWTSP = (int)(-201316);
	public static final int DAQmxErrorPropertyValNotValidTermName = (int)(-200354);
	public static final int DAQmxErrorWaveformInScriptNotInMem = (int)(-200028);
	public static final int DAQmxWarningPALComponentInitializationFault = (int)(50258);
	public static final int DAQmx_CI_DataXferReqCond = (int)0x2EFB;
	public static final int DAQmxErrorUnsupportedSimulatedModuleForSimulatedChassis = (int)(-201384);
	public static final int DAQmx_AI_CurrentShunt_Resistance = (int)0x17F3;
	public static final int DAQmxWarningPALSyncAbandoned = (int)(50551);
	public static final int DAQmx_CI_SemiPeriod_TermCfg = (int)0x30AF;
	public static final int DAQmxErrorPxiResmanChassisSegmentParseError = (int)(-26203);
	public static final int DAQmx_AI_RVDT_Units = (int)0x0877;
	public static final int DAQmxErrorPrptyGetSpecdActiveChanFailedDueToDifftVals = (int)(-200657);
	public static final int DAQmxErrorInvalidGlobalChan = (int)(-200882);
	public static final int DAQmxErrorDevImportFailedAssociatedResourceIDsNotSupported = (int)(-201175);
	public static final int DAQmxErrorEmptyStringTermNameNotSupported = (int)(-200797);
	public static final int DAQmxErrorMoreThanOneActiveChannelSpecified = (int)(-200097);
	public static final int DAQmxErrorSelfCalDateTimeNotDAQmx = (int)(-200541);
	public static final int DAQmxWarningStoppedBeforeDone = (int)(200010);
	public static final String DAQmx_Val_Switch_Topology_2530_2_Wire_64x1_Mux = (String)"2530/2-Wire 64x1 Mux";
	public static final int DAQmx_Dev_AI_CurrentIntExcitDiscreteVals = (int)0x29CB;
	public static final int DAQmx_ReadWaitMode = (int)0x2232;
	public static final int DAQmxErrorCppCantRemoveEventHandlerTwice = (int)(-200589);
	public static final int DAQmx_Val_SCXI1124RangeNeg1to1V = (int)14632;
	public static final int DAQmxErrorUnitsNotFromCustomScale = (int)(-200447);
	public static final int DAQmxErrorScanListCannotBeTimed = (int)(-200067);
	public static final int DAQmxErrorIncorrectChannelForOffsetAdjustment = (int)(-201431);
	public static final int DAQmx_AI_Accel_Units = (int)0x0673;
	public static final int DAQmxErrorTrigmanLineNotReservedUnroutable = (int)(-26004);
	public static final int DAQmxErrorWhenAcqCompAndNoRefTrig = (int)(-200864);
	public static final int DAQmxErrorSampClkTbMasterTbDivNotAppropriateForSampTbSrc = (int)(-200309);
	public static final int DAQmxErrorAOMinMaxNotSupportedGivenDACRefAndOffsetVal = (int)(-200866);
	public static final int DAQmxErrorDeviceIDNotSpecifiedInList = (int)(-200055);
	public static final int DAQmxErrorInvalidAOGainCalConst = (int)(-200720);
	public static final int DAQmx_DI_InvertLines = (int)0x0793;
	public static final int DAQmxErrorPxiResmanChassisBridgeParseError = (int)(-26205);
	public static final int DAQmx_AI_Bridge_ShuntCal_GainAdjust = (int)0x193F;
	public static final int DAQmx_Val_B = (int)12514;
	public static final int DAQmx_Val_RepeatedData = (int)16062;
	public static final int DAQmx_Val_A = (int)12513;
	public static final int DAQmxErrorSCXIDevNotUsablePowerTurnedOff = (int)(-200835);
	public static final int DAQmxErrorPALBadDataSize = (int)(-50005);
	public static final int DAQmxErrorPasswordTooLong = (int)(-200109);
	public static final int DAQmxErrorGenStoppedToPreventRegenOfOldSamples = (int)(-200290);
	public static final int DAQmxErrorDevInUnidentifiedPXIChassis = (int)(-200862);
	public static final int DAQmx_Val_Loopback0 = (int)0;
	public static final int DAQmx_Val_LogicLevelPullUp = (int)16064;
	public static final int DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod = (int)(-200993);
	public static final int DAQmxErrorPhysicalChanNotOnThisConnector = (int)(-200851);
	public static final int DAQmxErrorPxiResmanControllerParseError = (int)(-26302);
	public static final String DAQmx_Val_Switch_Topology_1191_Quad_4x1_Mux = (String)"1191/Quad 4x1 Mux";
	public static final int DAQmxErrorTrigLineNotFound_Routing = (int)(-89125);
	public static final int DAQmx_CI_Pulse_Freq_LogicLvlBehavior = (int)0x30B2;
	public static final int DAQmx_AnlgWin_RefTrig_When = (int)0x1427;
	public static final int DAQmxErrorSyncPulseMinDelayToStartNeededForExtSyncPulseSrc = (int)(-201091);
	public static final int DAQmxErrorInvalidExtClockFreqAndDivCombo = (int)(-200379);
	public static final int DAQmx_SwitchChan_Usage = (int)0x18E4;
	public static final int DAQmxErrorRepeatedNumberInScaledValues = (int)(-200599);
	public static final int DAQmxErrorUnsupportedAccessory = (int)(-201342);
	public static final int DAQmxErrorTdmsNotFound = (int)(-201310);
	public static final int DAQmxErrorBufferedAndDataXferPIO = (int)(-200847);
	public static final int DAQmxErrorInvalidSampRateConsiderRIS = (int)(-200420);
	public static final int DAQmxErrorExtCalConstsInvalid = (int)(-200437);
	public static final String DAQmx_Val_Switch_Topology_1127_1_Wire_64x1_Mux = (String)"1127/1-Wire 64x1 Mux";
	public static final int DAQmxErrorInvalidNumericFormatSpecd = (int)(-201056);
	public static final int DAQmx_CI_Freq_TermCfg = (int)0x3097;
	public static final int DAQmx_Exported_RdyForXferEvent_OutputTerm = (int)0x22B5;
	public static final int DAQmxErrorRequiredPropertyMissing = (int)(-201039);
	public static final int DAQmx_CI_DataXferMech = (int)0x0200;
	public static final int DAQmxErrorInvalidChannelNameInList = (int)(-200050);
	public static final int DAQmx_AI_ForceReadFromChan = (int)0x18F8;
	public static final int DAQmxErrorPALThreadHasNoThreadObject = (int)(-50601);
	public static final int DAQmx_Exported_AdvTrig_Pulse_Polarity = (int)0x1646;
	public static final int DAQmxErrorCardsMustBeInSameCarrier = (int)(-201359);
	public static final int DAQmxWarningPALResourceNotReserved = (int)(50102);
	public static final int DAQmx_Val_Linear = (int)10447;
	public static final int DAQmxErrorSyncPulseSrcInvalid = (int)(-201090);
	public static final int DAQmxWarningPXISAConfigurationLocked = (int)(26808);
	public static final int DAQmx_CI_Encoder_BInput_DigFltr_Enable = (int)0x2200;
	public static final int DAQmx_Val_Master = (int)15888;
	public static final int DAQmxErrorDurationTooSmall = (int)(-209821);
	public static final int DAQmx_SwitchDev_AutoConnAnlgBus = (int)0x17DA;
	public static final int DAQmxErrorInvalidcDAQSyncPortConnectionFormat = (int)(-201449);
	public static final int DAQmxErrorInvalidSectionName = (int)(-201077);
	public static final int DAQmxErrorCannotCreateChannelAfterTaskVerified = (int)(-200160);
	public static final int DAQmxErrorCOWriteDutyCycleOutOfRange = (int)(-200684);
	public static final int DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseRate = (int)0x21F4;
	public static final int DAQmx_DigEdge_StartTrig_Edge = (int)0x1404;
	public static final int DAQmxErrorInvalidSCCSlotNumberSpecd = (int)(-201079);
	public static final int DAQmxErrorDeviceDoesNotSupportSimulation = (int)(-201160);
	public static final int DAQmxErrorChangeDetectionStoppedToPreventDeviceHang = (int)(-201397);
	public static final int DAQmxErrorInvalidCalConstCalADCAdjustment = (int)(-200520);
	public static final int DAQmx_Val_Cfg_Default = (int)-1;
	public static final int DAQmxErrorInvalidShuntCalibrationConfiguration = (int)(-209810);
	public static final int DAQmxErrorChannelNameNotSpecifiedInList = (int)(-200056);
	public static final int DAQmxWarningFileCopyFault = (int)(26106);
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_16x16_Matrix = (String)"2532/1-Wire Dual 16x16 Matrix";
	public static final int DAQmxErrorCantUseThisTimingEngineWithAPort = (int)(-201227);
	public static final int DAQmxErrorPALSoftwareFault = (int)(-50150);
	public static final int DAQmxWarningAttributeNotFound = (int)(26653);
	public static final int DAQmxErrorCPUNotSupportedRequireSSE = (int)(-201121);
	public static final int DAQmxErrorCannotScanWithCurrentTopology = (int)(-200205);
	public static final int DAQmx_Val_Velocity_AngEncoder = (int)16078;
	public static final String DAQmx_Val_Switch_Topology_2532_2_Wire_4x64_Matrix = (String)"2532/2-Wire 4x64 Matrix";
	public static final int DAQmxErrorRelayNameNotSpecifiedInList = (int)(-200531);
	public static final int DAQmxErrorCannotHandshakeWithPort0 = (int)(-200127);
	public static final int DAQmxWarningTooManyInterruptsPerSecond = (int)(200014);
	public static final int DAQmxErrorReferencedDevSimMustMatchTarget = (int)(-201230);
	public static final int DAQmx_Exported_HshkEvent_Interlocked_DeassertDelay = (int)0x22BF;
	public static final int DAQmxErrorMeasCalAdjustMainPathPreAmpGain = (int)(-200503);
	public static final int DAQmx_AnlgLvl_PauseTrig_DigFltr_TimebaseSrc = (int)0x2EF2;
	public static final int DAQmx_PersistedChan_AllowInteractiveEditing = (int)0x22D1;
	public static final int DAQmxErrorInvalidAttribute = (int)(-26806);
	public static final int DAQmxErrorSampsPerChanTooBig = (int)(-200306);
	public static final int DAQmxErrorNoSyncPulseExtSampClkTimebase = (int)(-200762);
	public static final int DAQmxErrorScriptDataUnderflow = (int)(-200316);
	public static final int DAQmxErrorInconsistentFileFault = (int)(-26655);
	public static final int DAQmx_DigEdge_StartTrig_Src = (int)0x1407;
	public static final int DAQmxErrorNonBufferedAndDataXferInterrupts = (int)(-200845);
	public static final int DAQmx_Buf_Output_OnbrdBufSize = (int)0x230B;
	public static final int DAQmxErrorScaledIQWaveformTooLarge = (int)(-201264);
	public static final int DAQmxErrorTEDSSensorNotDetected = (int)(-200709);
	public static final int DAQmxErrorCustomScaleDoesNotExist = (int)(-200378);
	public static final int DAQmxErrorFunctionNotInLibrary = (int)(-200091);
	public static final int DAQmxErrorAODuringCounter1DMAConflict = (int)(-200079);
	public static final int DAQmxErrorChanSizeTooBigForU8PortRead = (int)(-200563);
	public static final int DAQmxErrorUnspecifiedError = (int)(-26801);
	public static final int NULL = (int)(0);
	public static final int DAQmx_DelayFromSampClk_Delay = (int)0x1317;
	public static final int DAQmxErrorSCCInvalidDualStageCombo = (int)(-201327);
	public static final int DAQmx_AI_FilterDelay = (int)0x2FED;
	public static final int DAQmx_AI_ResolutionUnits = (int)0x1764;
	public static final int DAQmx_Read_OpenCurrentLoopChansExist = (int)0x2A09;
	public static final int DAQmxErrorInvalidLEDState = (int)(-209818);
	public static final int DAQmxWarningPowerUpInfoCRCNotCorrect = (int)(200055);
	public static final int DAQmx_AI_SoundPressure_MaxSoundPressureLvl = (int)0x223A;
	public static final int DAQmxErrorInvalidWaveformLengthBeforeIfElseBlockInScript = (int)(-201008);
	public static final int DAQmxErrorActivePhysChanTooManyLinesSpecdWhenGettingPrpty = (int)(-200625);
	public static final int DAQmx_AI_Bridge_ShuntCal_Enable = (int)0x0094;
	public static final int DAQmx_AO_FuncGen_Amplitude = (int)0x2A1A;
	public static final int DAQmx_Val_FirstSample = (int)10424;
	public static final int DAQmx_AI_Bridge_TwoPointLin_Second_PhysicalVal = (int)0x2F8D;
	public static final int DAQmx_Dev_SerialNum = (int)0x0632;
	public static final int DAQmxErrorWaitForNextSampClkNotSupported = (int)(-200863);
	public static final int DAQmx_AI_Bridge_Table_ElectricalVals = (int)0x2F8E;
	public static final int DAQmx_Val_AHighBLow = (int)10041;
	public static final int DAQmxErrorNoRefTrigConfigured = (int)(-200282);
	public static final int DAQmx_CI_TwoEdgeSep_FirstTerm = (int)0x18AD;
	public static final int DAQmx_Dev_AI_VoltageIntExcitDiscreteVals = (int)0x29C9;
	public static final int DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo = (int)(-200136);
	public static final int DAQmxWarningPALResourceReserved = (int)(50103);
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_8x32_Matrix = (String)"1130/1-Wire 8x32 Matrix";
	public static final int DAQmxErrorMarkerPosInvalidInBreakBlock = (int)(-201215);
	public static final int DAQmx_Val_Temp_Thrmstr = (int)10302;
	public static final int DAQmxErrorPALBadPointer = (int)(-50004);
	public static final int DAQmxErrorScriptHasInvalidIdentifier = (int)(-200024);
	public static final int DAQmx_Dev_AI_CurrentRngs = (int)0x2991;
	public static final int DAQmxErrorSampClkRateMustBeSpecd = (int)(-201087);
	public static final int DAQmxErrorRangeSyntaxNumberTooBig = (int)(-200605);
	public static final int DAQmx_AI_Min = (int)0x17DE;
	public static final int DAQmx_Logging_FilePath = (int)0x2EC4;
	public static final String DAQmx_Val_Switch_Topology_2799_2_SPDT = (String)"2799/2-SPDT";
	public static final int DAQmx_AI_ADCCustomTimingMode = (int)0x2F6B;
	public static final int DAQmxErrorEveryNSampsTransferredFromBufferEventAlreadyRegistered = (int)(-200967);
	public static final int DAQmx_SampClk_ActiveEdge = (int)0x1301;
	public static final int DAQmx_CI_SemiPeriod_DigFltr_TimebaseSrc = (int)0x221B;
	public static final int DAQmx_Write_SpaceAvail = (int)0x1460;
	public static final int DAQmxErrorExportSignalPolarityNotSupportedByHW = (int)(-200364);
	public static final int DAQmxErrorPALWaitInterrupted = (int)(-50700);
	public static final int DAQmx_PhysicalChan_AO_SupportedPowerUpOutputTypes = (int)0x304E;
	public static final int DAQmxErrorSamplesWillNeverBeGenerated = (int)(-200288);
	public static final int DAQmx_Val_VoltsPerMil = (int)14837;
	public static final int DAQmx_ChanType = (int)0x187F;
	public static final int DAQmx_Val_FullBridge = (int)10182;
	public static final int DAQmxErrorTriggerPolarityConflict = (int)(-200206);
	public static final int DAQmx_Interlocked_HshkTrig_Src = (int)0x22B8;
	public static final int DAQmxErrorCannotPerformOpWhenTaskNotReserved = (int)(-200664);
	public static final int DAQmxErrorInvalidTriggerLineInList = (int)(-200048);
	public static final int DAQmxErrorMissingRangeForCalibration = (int)(-201495);
	public static final int DAQmx_AO_DAC_Ref_ExtSrc = (int)0x2252;
	public static final int DAQmx_AI_StrainGage_PoissonRatio = (int)0x0998;
	public static final int DAQmx_CI_Encoder_AInput_DigFltr_Enable = (int)0x21FB;
	public static final int DAQmx_AnlgEdge_RefTrig_Lvl = (int)0x1422;
	public static final int DAQmxWarningPXIDevTempExceedsMaxOpTemp = (int)(200030);
	public static final int DAQmx_CI_SemiPeriod_DigFltr_Enable = (int)0x2219;
	public static final int DAQmxErrorUnexpectedIdentifierInFullySpecifiedPathInList = (int)(-200204);
	public static final int DAQmx_Val_SCCConnectorBlock = (int)14704;
	public static final int DAQmxWarningPALBadWriteMode = (int)(50012);
	public static final int DAQmx_AI_ChanCal_OperatorName = (int)0x22A3;
	public static final int DAQmx_CO_Pulse_Freq_Units = (int)0x18D5;
	public static final int DAQmxErrorTooManyChansForAnalogPauseTrig = (int)(-200263);
	public static final int DAQmx_SwitchChan_MaxACSwitchCurrent = (int)0x0646;
	public static final int DAQmxErrorPxiResmanChassisParseError = (int)(-26202);
	public static final int DAQmxErrorInvalidAsynOpHandle = (int)(-200616);
	public static final int DAQmxErrorServiceLocatorNotAvailable_Routing = (int)(-88907);
	public static final int DAQmx_Val_PoundsPerSquareInch = (int)15879;
	public static final int DAQmxErrorCustomScaleNameUsed = (int)(-200356);
	public static final int DAQmxErrorChangeRateWhileRunningCouldNotBeCompleted = (int)(-201261);
	public static final int DAQmxErrorSignalEventAlreadyRegistered = (int)(-200949);
	public static final int DAQmxErrorSCCInvalidFirstStage = (int)(-201325);
	public static final int DAQmxErrorPALFunctionNotFound = (int)(-50255);
	public static final int DAQmxErrorCounterMultipleSampleClockedChannels = (int)(-201324);
	public static final int DAQmxErrorSampleRateTooHighForADCTimingMode = (int)(-201208);
	public static final int DAQmx_Logging_TDMS_GroupName = (int)0x2EC6;
	public static final int DAQmx_Val_SCXI1124RangeNeg5to5V = (int)14633;
	public static final int DAQmxWarningFileDoesNotExist = (int)(26852);
	public static final int DAQmxErrorChanSizeTooBigForU8PortWrite = (int)(-200565);
	public static final int DAQmx_Val_Voltage_CustomWithExcitation = (int)10323;
	public static final int DAQmxErrorInvalidAttributeValuePossiblyDueToOtherAttributeValues = (int)(-201398);
	public static final int DAQmxErrorExtSyncPulseSrcCannotBeExported = (int)(-201092);
	public static final int DAQmxErrorLinearRequiresUniquePoints = (int)(-201334);
	public static final int DAQmxErrorSampClkTimebaseRateInvalid = (int)(-201089);
	public static final int DAQmx_AO_DAC_Offset_Val = (int)0x2255;
	public static final int DAQmxErrorAcqStoppedDriverCantXferDataFastEnough = (int)(-200714);
	public static final int DAQmxErrorOutputBufferUnderwrite = (int)(-200166);
	public static final int DAQmxErrorCODAQmxWriteMultipleChans = (int)(-200794);
	public static final int DAQmxErrorDevNotInTask = (int)(-200482);
	public static final int DAQmxErrorTrigmanConflictingRouteGeneric = (int)(-26006);
	public static final int DAQmx_Val_Bit_TriggerUsageTypes_ArmStart = (int)(1 << 5);
	public static final int DAQmxErrorActiveChannelNotSpecified = (int)(-200093);
	public static final int DAQmxErrorCalFunctionNotSupported = (int)(-200445);
	public static final int DAQmx_AI_ChanCal_Table_PreScaledVals = (int)0x229D;
	public static final int DAQmxErrorNoHWTimingWithOnDemand = (int)(-200731);
	public static final int DAQmx_AI_RosetteStrainGage_Orientation = (int)0x2FFC;
	public static final int DAQmxErrorTimeStampOverwritten = (int)(-200009);
	public static final int DAQmxErrorPALMessageQueueFull = (int)(-50108);
	public static final int DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseSrc = (int)0x222F;
	public static final int DAQmxErrorLines0To3ConfiguredForOutput = (int)(-200123);
	public static final int DAQmxErrorMeasuredBridgeOffsetTooHigh = (int)(-200788);
	public static final int DAQmxErrorNonZeroBufferSizeInProgIOXfer = (int)(-200172);
	public static final int DAQmxErrorConfiguredTEDSInterfaceDevNotDetected = (int)(-200958);
	public static final int DAQmx_Val_WaitForHandshakeTriggerAssert = (int)12550;
	public static final int DAQmxErrorDeviceRemoved = (int)(-200045);
	public static final int DAQmxErrorInvalidEnumValueSpecd = (int)(-201054);
	public static final int DAQmxErrorPropertyNotSupportedWhenRefClkSrcNone = (int)(-200581);
	public static final int DAQmxErrorDigFilterEnableSetWhenTristateIsFalse = (int)(-200732);
	public static final int DAQmxErrorInvalidCDAQSyncTimeoutValue = (int)(-201458);
	public static final int DAQmxErrorFiniteSTCCounterNotSupportedForLogging = (int)(-201308);
	public static final int DAQmx_Read_OvertemperatureChansExist = (int)0x3081;
	public static final int DAQmx_StartTrig_Retriggerable = (int)0x190F;
	public static final int DAQmx_AnlgWin_PauseTrig_DigSync_Enable = (int)0x2EF9;
	public static final int DAQmx_Val_5Wire = (int)5;
	public static final int DAQmx_Val_TCPIP = (int)14828;
	public static final int DAQmx_Val_Bit_TermCfg_PseudoDIFF = (int)(1 << 3);
	public static final int DAQmxErrorUnexpectedIDFollowingSwitchOpInList = (int)(-200529);
	public static final int DAQmx_AO_DataXferMech = (int)0x0134;
	public static final int DAQmx_CI_Pulse_Freq_Start_Edge = (int)0x2F05;
	public static final int DAQmx_Val_CurrWritePos = (int)10430;
	public static final int DAQmxErrorExplicitConnectionExists = (int)(-200179);
	public static final int DAQmxErrorDuplicateDeviceIDInListWhenSettling = (int)(-200057);
	public static final int DAQmxErrorWriteWhenTaskNotRunningCOTicks = (int)(-200876);
	public static final int DAQmxErrorOnboardMemTooSmall = (int)(-200341);
	public static final int DAQmxErrorTooManyChans = (int)(-200168);
	public static final int DAQmx_PhysicalChan_DO_SampClkSupported = (int)0x29A8;
	public static final int DAQmx_Val_Bit_TriggerUsageTypes_Start = (int)(1 << 3);
	public static final int DAQmxErrorInvalidSampClkSrc = (int)(-200414);
	public static final int DAQmxErrorFinitePulseTrainNotPossible = (int)(-200305);
	public static final int DAQmxErrorTriggerChannelMustBeEnabled = (int)(-201148);
	public static final int DAQmx_AO_FilterDelayUnits = (int)0x3076;
	public static final int DAQmx_AIConv_DigFltr_MinPulseWidth = (int)0x2EDD;
	public static final int DAQmxErrorExternalSampClkAndRefClkThruSameTerm = (int)(-200276);
	public static final int DAQmx_Val_OutsideWin = (int)10251;
	public static final int DAQmxErrorSetupCalNeededBeforeGetCalDataPoints = (int)(-201497);
	public static final int DAQmxErrorConflictingNextWriteIsLastAndRegenModeProperties = (int)(-201119);
	public static final int DAQmx_Dev_AI_MinRate = (int)0x298E;
	public static final int DAQmxErrorCAPIReservedParamNotNULL = (int)(-200492);
	public static final int DAQmx_AI_LVDT_Units = (int)0x0910;
	public static final int DAQmxWarningPALHardwareFault = (int)(50152);
	public static final int DAQmx_CI_AngEncoder_PulsesPerRev = (int)0x0875;
	public static final String DAQmx_Val_Switch_Topology_1169_50_DPST = (String)"1169/50-DPST";
	public static final int DAQmx_CI_Pulse_Freq_DigFltr_TimebaseRate = (int)0x2F09;
	public static final int DAQmxErrorDigitalOutputNotSupported = (int)(-200012);
	public static final int DAQmxErrorEveryNSampsAcqIntoBufferNotForOutput = (int)(-200964);
	public static final int DAQmx_SampClkTimebase_Term = (int)0x2F1C;
	public static final int DAQmx_AI_Bridge_Poly_ForwardCoeff = (int)0x2F90;
	public static final int DAQmx_Val_Chan = (int)10113;
	public static final int DAQmxErrorPALSocketListenerInvalid = (int)(-50502);
	public static final int DAQmx_Exported_CtrOutEvent_Toggle_IdleState = (int)0x186A;
	public static final int DAQmx_Val_Torque_Bridge = (int)15905;
	public static final int DAQmxErrorOperationNotSupportedOnSimulatedDevice = (int)(-201492);
	public static final int DAQmx_Val_OnBrdMemEmpty = (int)10235;
	public static final int DAQmxErrorMeasCalAdjustMainPathPreAmpOffset = (int)(-200502);
	public static final String DAQmx_Val_Switch_Topology_2555_4x1_Terminated_Mux = (String)"2555/4x1 Terminated Mux";
	public static final int DAQmx_CI_TwoEdgeSep_FirstTermCfg = (int)0x30AB;
	public static final int DAQmxErrorIncapableSCCDigitizingDeviceSpecd = (int)(-201049);
	public static final int DAQmxErrorPALThreadAlreadyDead = (int)(-50604);
	public static final int DAQmxErrorCorruptedTEDSMemory = (int)(-200742);
	public static final int DAQmx_Val_InchesPerSecond = (int)15960;
	public static final int DAQmxErrorPauseTrigTypeNotSupportedGivenTimingType = (int)(-200906);
	public static final int DAQmx_SyncPulse_MinDelayToStart = (int)0x223F;
	public static final int DAQmx_CI_Encoder_BInput_DigSync_Enable = (int)0x2204;
	public static final int DAQmxErrorInvalidCalConstOffsetDACValue = (int)(-200517);
	public static final int DAQmxErrorExpectedConnectOperatorInList = (int)(-200062);
	public static final int DAQmxErrorRoutingDestTermPXIStarXNotInStarTriggerSlot_Routing = (int)(-89160);
	public static final int DAQmxWarningPALTransferInProgress = (int)(50403);
	public static final int DAQmxWarningPALBadSelector = (int)(50003);
	public static final int DAQmx_AnlgLvl_PauseTrig_DigFltr_TimebaseRate = (int)0x2EF3;
	public static final int DAQmx_AI_ChanCal_Poly_ReverseCoeff = (int)0x22A0;
	public static final int DAQmx_CI_SemiPeriod_LogicLvlBehavior = (int)0x30B0;
	public static final int DAQmx_DigPattern_RefTrig_When = (int)0x1438;
	public static final int DAQmxErrorInvalidNumCalADCReadsToAverage = (int)(-200515);
	public static final int DAQmxErrorCannotConnectSrcChans = (int)(-200188);
	public static final int DAQmxErrorAllCurrentLimitingResourcesAlreadyTaken = (int)(-201268);
	public static final int DAQmx_CI_Velocity_Encoder_BInputLogicLvlBehavior = (int)0x30E6;
	public static final int DAQmx_SwitchDev_NumRows = (int)0x18E9;
	public static final int DAQmx_Val_CountUp = (int)10128;
	public static final int DAQmx_AnlgWin_PauseTrig_Top = (int)0x1376;
	public static final int DAQmx_PhysicalChan_AO_ManualControlFreq = (int)0x2A20;
	public static final int DAQmxErrorPowerUpStateMachineNotDone = (int)(-201282);
	public static final int DAQmxErrorConnectionsNotSupportedOnAccessory = (int)(-201411);
	public static final int DAQmx_RefTrig_AutoTrigEnable = (int)0x2EC1;
	public static final int DAQmxErrorMStudioNoReversePolyScaleCoeffsUseCalc = (int)(-200779);
	public static final int DAQmxErrorInvalidSectionIdentifier = (int)(-201078);
	public static final int DAQmx_AO_DAC_Ref_Src = (int)0x0132;
	public static final int DAQmx_Val_RPM = (int)16080;
	public static final int DAQmx_SwitchDev_NumColumns = (int)0x18EA;
	public static final int DAQmx_Val_Strain = (int)10299;
	public static final int DAQmxErrorSCCSecondStageEmpty = (int)(-201328);
	public static final int DAQmx_Scale_PreScaledUnits = (int)0x18F7;
	public static final int DAQmxErrorInconsistentExcit = (int)(-200257);
	public static final int DAQmx_Val_AIHoldCmpltEvent = (int)12493;
	public static final int DAQmx_AO_PowerAmp_Offset = (int)0x3066;
	public static final int DAQmxErrorWriteToTEDSFailed = (int)(-200836);
	public static final int DAQmx_PersistedTask_AllowInteractiveDeletion = (int)0x22CE;
	public static final int DAQmxErrorTEDSDoesNotContainPROM = (int)(-200822);
	public static final int DAQmxErrorClearIsLastInstructionOfLoopInScript = (int)(-200037);
	public static final int DAQmx_AnlgEdge_StartTrig_DigFltr_Enable = (int)0x2EE1;
	public static final String DAQmx_Val_Switch_Topology_2541_1_Wire_8x12_Matrix = (String)"2541/1-Wire 8x12 Matrix";
	public static final int DAQmx_AI_Max = (int)0x17DD;
	public static final String DAQmx_Val_Switch_Topology_2536_1_Wire_8x68_Matrix = (String)"2536/1-Wire 8x68 Matrix";
	public static final int DAQmx_AI_Force_IEPESensor_Sensitivity = (int)0x2F81;
	public static final int DAQmxErrorNoSyncPulseAnotherTaskRunning = (int)(-200761);
	public static final int DAQmx_AI_Force_Units = (int)0x2F75;
	public static final int DAQmx_Exported_DataActiveEvent_OutputTerm = (int)0x1633;
	public static final int DAQmx_AI_LossyLSBRemoval_CompressedSampSize = (int)0x22D9;
	public static final int DAQmxErrorDeviceDoesNotSupportCDAQSyncConnections = (int)(-201450);
	public static final int DAQmxWarningPxiResmanSystemDescriptionSpecLimitation = (int)(26403);
	public static final int DAQmx_CI_DutyCycle_DigFltr_MinPulseWidth = (int)0x308F;
	public static final int DAQmxErrorSampleClockRateIsTooFastForSampleClockTiming = (int)(-201178);
	public static final int DAQmx_CO_CtrTimebaseMasterTimebaseDiv = (int)0x18C3;
	public static final int DAQmx_CO_Pulse_Freq = (int)0x1178;
	public static final int DAQmx_Val_LosslessPacking = (int)12555;
	public static final String DAQmx_Val_Switch_Topology_2720_Independent = (String)"2720/Independent";
	public static final int DAQmx_AO_Voltage_CurrentLimit = (int)0x2A1D;
	public static final int DAQmx_Exported_SyncPulseEvent_OutputTerm = (int)0x223C;
	public static final int DAQmxErrorWhenAcqCompAndNumSampsPerChanExceedsOnBrdBufSize = (int)(-200865);
	public static final int DAQmxErrorInvalidLoopIterationsInScript = (int)(-200036);
	public static final int DAQmx_SampClk_TimebaseDiv = (int)0x18EB;
	public static final int DAQmx_DigEdge_RefTrig_DigFltr_TimebaseRate = (int)0x2EDA;
	public static final int DAQmxErrorOnlyPEMCertificatesAccepted = (int)(-201270);
	public static final int DAQmx_PhysicalChan_AO_ManualControl_ShortDetected = (int)0x2EC3;
	public static final int DAQmxErrorSampClkOutputTermIncludesStartTrigSrc = (int)(-200954);
	public static final int DAQmx_Val_CSeriesModule = (int)14659;
	public static final int DAQmxErrorCascadeDigitizationModeNotSupported = (int)(-201034);
	public static final int DAQmx_Val_mVoltsPerMillimeter = (int)14838;
	public static final int DAQmxErrorInvalidCfgCalAdjustMainPathOutputImpedance = (int)(-200513);
	public static final int DAQmx_Val_WhenAcqComplete = (int)12546;
	public static final int DAQmxErrorTDCNotEnabledDuringRISMode = (int)(-200417);
	public static final int DAQmx_Dev_TCPIP_EthernetIP = (int)0x2A8C;
	public static final int DAQmx_Read_ChangeDetect_HasOverflowed = (int)0x2194;
	public static final int DAQmx_OnDemand_SimultaneousAOEnable = (int)0x21A0;
	public static final int DAQmxErrorPALTransferNotInProgress = (int)(-50402);
	public static final int DAQmxErrorMeasCalAdjustMainPathPostAmpGainAndOffset = (int)(-200504);
	public static final int DAQmxErrorSemicolonDoesNotFollowRangeInList = (int)(-200054);
	public static final int DAQmx_AnlgWin_PauseTrig_DigFltr_Enable = (int)0x2EF5;
	public static final int DAQmxWarningPALFeatureNotSupported = (int)(50256);
	public static final int DAQmx_CI_CtrTimebase_DigFltr_MinPulseWidth = (int)0x2272;
	public static final int DAQmxErrorSimDevConflictWithRealDev = (int)(-201150);
	public static final int DAQmx_CI_GPS_SyncMethod = (int)0x1092;
	public static final int DAQmxErrorCIInvalidTimingSrcForEventCntDueToSampMode = (int)(-200799);
	public static final int DAQmxErrorAttributeNotSupportedWhenLogging = (int)(-201300);
	public static final int DAQmxErrorNetworkProductTypeMismatch = (int)(-201271);
	public static final int DAQmx_CI_SemiPeriod_DigFltr_TimebaseRate = (int)0x221C;
	public static final int DAQmx_Val_SemiPeriod = (int)10289;
	public static final int DAQmx_Val_RSE = (int)10083;
	public static final int DAQmx_AI_Voltage_ACRMS_Units = (int)0x17E2;
	public static final int DAQmx_CI_SemiPeriod_DigSync_Enable = (int)0x221D;
	public static final int DAQmx_PhysicalChan_DO_PortWidth = (int)0x29A7;
	public static final int DAQmxErrorPLLDACUpdateFailed = (int)(-201506);
	public static final int DAQmxErrorDifftAIInputSrcInOneChanGroup = (int)(-200676);
	public static final int DAQmx_DO_UseOnlyOnBrdMem = (int)0x2265;
	public static final String DAQmx_Val_Switch_Topology_2514_Independent = (String)"2514/Independent";
	public static final int DAQmxErrorPhysChanDevNotInTask = (int)(-200648);
	public static final int DAQmxErrorNoDivisorForExternalSignal = (int)(-200130);
	public static final int DAQmx_Val_RightJustified = (int)10279;
	public static final int DAQmxErrorCannotReadWhenAutoStartFalseBufSizeZeroAndTaskNotRunning = (int)(-200834);
	public static final int DAQmx_Val_AIConvertClock = (int)12484;
	public interface DAQmxEveryNSamplesEventCallbackPtr extends Callback {
		int apply(Pointer taskHandle, int everyNsamplesEventType, NativeLong nSamples, Pointer callbackData);
	};
	public interface DAQmxDoneEventCallbackPtr extends Callback {
		int apply(Pointer taskHandle, int status, Pointer callbackData);
	};
	public interface DAQmxSignalEventCallbackPtr extends Callback {
		int apply(Pointer taskHandle, int signalID, Pointer callbackData);
	};
	/**
	 * Original signature : <code>int32 DAQmxLoadTask(const char[], TaskHandle*)</code><br>
	 * <i>native declaration : line 2482</i><br>
	 * @deprecated use the safer methods {@link #dAQmxLoadTask(byte[], com.sun.jna.ptr.PointerByReference)} and {@link #dAQmxLoadTask(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxLoadTask(Pointer taskName, PointerByReference taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxLoadTask(const char[], TaskHandle*)</code><br>
	 * <i>native declaration : line 2482</i>
	 */
	public static native int dAQmxLoadTask(byte taskName[], PointerByReference taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxCreateTask(const char[], TaskHandle*)</code><br>
	 * <i>native declaration : line 2483</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTask(byte[], com.sun.jna.ptr.PointerByReference)} and {@link #dAQmxCreateTask(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTask(Pointer taskName, PointerByReference taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxCreateTask(const char[], TaskHandle*)</code><br>
	 * <i>native declaration : line 2483</i>
	 */
	public static native int dAQmxCreateTask(byte taskName[], PointerByReference taskHandle);
	/**
	 * Channel Names must be valid channels already available in MAX. They are not created.<br>
	 * Original signature : <code>int32 DAQmxAddGlobalChansToTask(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 2485</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAddGlobalChansToTask(com.sun.jna.Pointer, byte[])} and {@link #dAQmxAddGlobalChansToTask(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxAddGlobalChansToTask(Pointer taskHandle, Pointer channelNames);
	/**
	 * Channel Names must be valid channels already available in MAX. They are not created.<br>
	 * Original signature : <code>int32 DAQmxAddGlobalChansToTask(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 2485</i>
	 */
	public static native int dAQmxAddGlobalChansToTask(Pointer taskHandle, byte channelNames[]);
	/**
	 * Original signature : <code>int32 DAQmxStartTask(TaskHandle)</code><br>
	 * <i>native declaration : line 2487</i>
	 */
	public static native int dAQmxStartTask(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxStopTask(TaskHandle)</code><br>
	 * <i>native declaration : line 2488</i>
	 */
	public static native int dAQmxStopTask(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxClearTask(TaskHandle)</code><br>
	 * <i>native declaration : line 2490</i>
	 */
	public static native int dAQmxClearTask(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxWaitUntilTaskDone(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 2492</i>
	 */
	public static native int dAQmxWaitUntilTaskDone(Pointer taskHandle, double timeToWait);
	/**
	 * Original signature : <code>int32 DAQmxIsTaskDone(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 2493</i>
	 */
	public static native int dAQmxIsTaskDone(Pointer taskHandle, NativeLongByReference isTaskDone);
	/**
	 * Original signature : <code>int32 DAQmxTaskControl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2495</i>
	 */
	public static native int dAQmxTaskControl(Pointer taskHandle, int action);
	/**
	 * Original signature : <code>int32 DAQmxGetNthTaskChannel(TaskHandle, uInt32, char[], int32)</code><br>
	 * <i>native declaration : line 2497</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetNthTaskChannel(com.sun.jna.Pointer, com.sun.jna.NativeLong, java.nio.ByteBuffer, int)} and {@link #dAQmxGetNthTaskChannel(com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetNthTaskChannel(Pointer taskHandle, NativeLong index, Pointer buffer, int bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetNthTaskChannel(TaskHandle, uInt32, char[], int32)</code><br>
	 * <i>native declaration : line 2497</i>
	 */
	public static native int dAQmxGetNthTaskChannel(Pointer taskHandle, NativeLong index, ByteBuffer buffer, int bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetNthTaskDevice(TaskHandle, uInt32, char[], int32)</code><br>
	 * <i>native declaration : line 2499</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetNthTaskDevice(com.sun.jna.Pointer, com.sun.jna.NativeLong, java.nio.ByteBuffer, int)} and {@link #dAQmxGetNthTaskDevice(com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetNthTaskDevice(Pointer taskHandle, NativeLong index, Pointer buffer, int bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetNthTaskDevice(TaskHandle, uInt32, char[], int32)</code><br>
	 * <i>native declaration : line 2499</i>
	 */
	public static native int dAQmxGetNthTaskDevice(Pointer taskHandle, NativeLong index, ByteBuffer buffer, int bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetTaskAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 2501</i>
	 */
	public static native int dAQmxGetTaskAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxRegisterEveryNSamplesEvent(TaskHandle, int32, uInt32, uInt32, DAQmxEveryNSamplesEventCallbackPtr, void*)</code><br>
	 * <i>native declaration : line 2507</i>
	 */
	public static native int dAQmxRegisterEveryNSamplesEvent(Pointer task, int everyNsamplesEventType, NativeLong nSamples, NativeLong options, NIDAQmxLibrary.DAQmxEveryNSamplesEventCallbackPtr callbackFunction, Pointer callbackData);
	/**
	 * Original signature : <code>int32 DAQmxRegisterDoneEvent(TaskHandle, uInt32, DAQmxDoneEventCallbackPtr, void*)</code><br>
	 * <i>native declaration : line 2508</i>
	 */
	public static native int dAQmxRegisterDoneEvent(Pointer task, NativeLong options, NIDAQmxLibrary.DAQmxDoneEventCallbackPtr callbackFunction, Pointer callbackData);
	/**
	 * Original signature : <code>int32 DAQmxRegisterSignalEvent(TaskHandle, int32, uInt32, DAQmxSignalEventCallbackPtr, void*)</code><br>
	 * <i>native declaration : line 2509</i>
	 */
	public static native int dAQmxRegisterSignalEvent(Pointer task, int signalID, NativeLong options, NIDAQmxLibrary.DAQmxSignalEventCallbackPtr callbackFunction, Pointer callbackData);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIVoltageChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2516</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIVoltageChan(com.sun.jna.Pointer, byte[], byte[], int, double, double, int, byte[])} and {@link #dAQmxCreateAIVoltageChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIVoltageChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, double minVal, double maxVal, int units, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIVoltageChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2516</i>
	 */
	public static native int dAQmxCreateAIVoltageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAICurrentChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2517</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAICurrentChan(com.sun.jna.Pointer, byte[], byte[], int, double, double, int, int, double, byte[])} and {@link #dAQmxCreateAICurrentChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAICurrentChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, double minVal, double maxVal, int units, int shuntResistorLoc, double extShuntResistorVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAICurrentChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2517</i>
	 */
	public static native int dAQmxCreateAICurrentChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int shuntResistorLoc, double extShuntResistorVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIVoltageRMSChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2518</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIVoltageRMSChan(com.sun.jna.Pointer, byte[], byte[], int, double, double, int, byte[])} and {@link #dAQmxCreateAIVoltageRMSChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIVoltageRMSChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, double minVal, double maxVal, int units, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIVoltageRMSChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2518</i>
	 */
	public static native int dAQmxCreateAIVoltageRMSChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAICurrentRMSChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2519</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAICurrentRMSChan(com.sun.jna.Pointer, byte[], byte[], int, double, double, int, int, double, byte[])} and {@link #dAQmxCreateAICurrentRMSChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAICurrentRMSChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, double minVal, double maxVal, int units, int shuntResistorLoc, double extShuntResistorVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAICurrentRMSChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2519</i>
	 */
	public static native int dAQmxCreateAICurrentRMSChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int shuntResistorLoc, double extShuntResistorVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIThrmcplChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2520</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIThrmcplChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, byte[])} and {@link #dAQmxCreateAIThrmcplChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIThrmcplChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int thermocoupleType, int cjcSource, double cjcVal, Pointer cjcChannel);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIThrmcplChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2520</i>
	 */
	public static native int dAQmxCreateAIThrmcplChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int thermocoupleType, int cjcSource, double cjcVal, byte cjcChannel[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIRTDChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, int32, float64, float64)</code><br>
	 * <i>native declaration : line 2521</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIRTDChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, int, double, double)} and {@link #dAQmxCreateAIRTDChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, int, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIRTDChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int rtdType, int resistanceConfig, int currentExcitSource, double currentExcitVal, double r0);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIRTDChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, int32, float64, float64)</code><br>
	 * <i>native declaration : line 2521</i>
	 */
	public static native int dAQmxCreateAIRTDChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int rtdType, int resistanceConfig, int currentExcitSource, double currentExcitVal, double r0);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIThrmstrChanIex(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2522</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIThrmstrChanIex(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double, double, double)} and {@link #dAQmxCreateAIThrmstrChanIex(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIThrmstrChanIex(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal, double a, double b, double c);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIThrmstrChanIex(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2522</i>
	 */
	public static native int dAQmxCreateAIThrmstrChanIex(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal, double a, double b, double c);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIThrmstrChanVex(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2523</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIThrmstrChanVex(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double, double, double, double)} and {@link #dAQmxCreateAIThrmstrChanVex(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double, double, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIThrmstrChanVex(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int resistanceConfig, int voltageExcitSource, double voltageExcitVal, double a, double b, double c, double r1);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIThrmstrChanVex(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2523</i>
	 */
	public static native int dAQmxCreateAIThrmstrChanVex(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int voltageExcitSource, double voltageExcitVal, double a, double b, double c, double r1);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIFreqVoltageChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2524</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIFreqVoltageChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, double, double, byte[])} and {@link #dAQmxCreateAIFreqVoltageChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, double, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIFreqVoltageChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, double thresholdLevel, double hysteresis, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIFreqVoltageChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2524</i>
	 */
	public static native int dAQmxCreateAIFreqVoltageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, double thresholdLevel, double hysteresis, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIResistanceChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2525</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIResistanceChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, byte[])} and {@link #dAQmxCreateAIResistanceChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIResistanceChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIResistanceChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2525</i>
	 */
	public static native int dAQmxCreateAIResistanceChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIStrainGageChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2526</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIStrainGageChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double, double, double, double, double, byte[])} and {@link #dAQmxCreateAIStrainGageChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double, double, double, double, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIStrainGageChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int strainConfig, int voltageExcitSource, double voltageExcitVal, double gageFactor, double initialBridgeVoltage, double nominalGageResistance, double poissonRatio, double leadWireResistance, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIStrainGageChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2526</i>
	 */
	public static native int dAQmxCreateAIStrainGageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int strainConfig, int voltageExcitSource, double voltageExcitVal, double gageFactor, double initialBridgeVoltage, double nominalGageResistance, double poissonRatio, double leadWireResistance, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIRosetteStrainGageChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, const int32[], uInt32, int32, int32, float64, float64, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2527</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIRosetteStrainGageChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, double, int[], com.sun.jna.NativeLong, int, int, double, double, double, double, double)} and {@link #dAQmxCreateAIRosetteStrainGageChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, double, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong, int, int, double, double, double, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIRosetteStrainGageChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int rosetteType, double gageOrientation, IntByReference rosetteMeasTypes, NativeLong numRosetteMeasTypes, int strainConfig, int voltageExcitSource, double voltageExcitVal, double gageFactor, double nominalGageResistance, double poissonRatio, double leadWireResistance);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIRosetteStrainGageChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, const int32[], uInt32, int32, int32, float64, float64, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2527</i>
	 */
	public static native int dAQmxCreateAIRosetteStrainGageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int rosetteType, double gageOrientation, int rosetteMeasTypes[], NativeLong numRosetteMeasTypes, int strainConfig, int voltageExcitSource, double voltageExcitVal, double gageFactor, double nominalGageResistance, double poissonRatio, double leadWireResistance);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIForceBridgeTwoPointLinChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2528</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIForceBridgeTwoPointLinChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double, double, double, int, double, double, int, byte[])} and {@link #dAQmxCreateAIForceBridgeTwoPointLinChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double, double, double, int, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIForceBridgeTwoPointLinChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, double firstElectricalVal, double secondElectricalVal, int electricalUnits, double firstPhysicalVal, double secondPhysicalVal, int physicalUnits, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIForceBridgeTwoPointLinChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2528</i>
	 */
	public static native int dAQmxCreateAIForceBridgeTwoPointLinChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, double firstElectricalVal, double secondElectricalVal, int electricalUnits, double firstPhysicalVal, double secondPhysicalVal, int physicalUnits, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIForceBridgeTableChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, int32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2530</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIForceBridgeTableChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double, java.nio.DoubleBuffer, com.sun.jna.NativeLong, int, java.nio.DoubleBuffer, com.sun.jna.NativeLong, int, byte[])} and {@link #dAQmxCreateAIForceBridgeTableChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, int, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIForceBridgeTableChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleByReference electricalVals, NativeLong numElectricalVals, int electricalUnits, DoubleByReference physicalVals, NativeLong numPhysicalVals, int physicalUnits, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIForceBridgeTableChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, int32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2530</i>
	 */
	public static native int dAQmxCreateAIForceBridgeTableChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleBuffer electricalVals, NativeLong numElectricalVals, int electricalUnits, DoubleBuffer physicalVals, NativeLong numPhysicalVals, int physicalUnits, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIForceBridgePolynomialChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, const float64[], uInt32, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2532</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIForceBridgePolynomialChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double, java.nio.DoubleBuffer, com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong, int, int, byte[])} and {@link #dAQmxCreateAIForceBridgePolynomialChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, int, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIForceBridgePolynomialChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleByReference forwardCoeffs, NativeLong numForwardCoeffs, DoubleByReference reverseCoeffs, NativeLong numReverseCoeffs, int electricalUnits, int physicalUnits, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIForceBridgePolynomialChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, const float64[], uInt32, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2532</i>
	 */
	public static native int dAQmxCreateAIForceBridgePolynomialChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleBuffer forwardCoeffs, NativeLong numForwardCoeffs, DoubleBuffer reverseCoeffs, NativeLong numReverseCoeffs, int electricalUnits, int physicalUnits, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIPressureBridgeTwoPointLinChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2534</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIPressureBridgeTwoPointLinChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double, double, double, int, double, double, int, byte[])} and {@link #dAQmxCreateAIPressureBridgeTwoPointLinChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double, double, double, int, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIPressureBridgeTwoPointLinChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, double firstElectricalVal, double secondElectricalVal, int electricalUnits, double firstPhysicalVal, double secondPhysicalVal, int physicalUnits, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIPressureBridgeTwoPointLinChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2534</i>
	 */
	public static native int dAQmxCreateAIPressureBridgeTwoPointLinChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, double firstElectricalVal, double secondElectricalVal, int electricalUnits, double firstPhysicalVal, double secondPhysicalVal, int physicalUnits, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIPressureBridgeTableChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, int32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2536</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIPressureBridgeTableChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double, java.nio.DoubleBuffer, com.sun.jna.NativeLong, int, java.nio.DoubleBuffer, com.sun.jna.NativeLong, int, byte[])} and {@link #dAQmxCreateAIPressureBridgeTableChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, int, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIPressureBridgeTableChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleByReference electricalVals, NativeLong numElectricalVals, int electricalUnits, DoubleByReference physicalVals, NativeLong numPhysicalVals, int physicalUnits, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIPressureBridgeTableChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, int32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2536</i>
	 */
	public static native int dAQmxCreateAIPressureBridgeTableChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleBuffer electricalVals, NativeLong numElectricalVals, int electricalUnits, DoubleBuffer physicalVals, NativeLong numPhysicalVals, int physicalUnits, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIPressureBridgePolynomialChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, const float64[], uInt32, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2538</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIPressureBridgePolynomialChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double, java.nio.DoubleBuffer, com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong, int, int, byte[])} and {@link #dAQmxCreateAIPressureBridgePolynomialChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, int, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIPressureBridgePolynomialChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleByReference forwardCoeffs, NativeLong numForwardCoeffs, DoubleByReference reverseCoeffs, NativeLong numReverseCoeffs, int electricalUnits, int physicalUnits, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIPressureBridgePolynomialChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, const float64[], uInt32, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2538</i>
	 */
	public static native int dAQmxCreateAIPressureBridgePolynomialChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleBuffer forwardCoeffs, NativeLong numForwardCoeffs, DoubleBuffer reverseCoeffs, NativeLong numReverseCoeffs, int electricalUnits, int physicalUnits, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAITorqueBridgeTwoPointLinChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2540</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAITorqueBridgeTwoPointLinChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double, double, double, int, double, double, int, byte[])} and {@link #dAQmxCreateAITorqueBridgeTwoPointLinChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double, double, double, int, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAITorqueBridgeTwoPointLinChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, double firstElectricalVal, double secondElectricalVal, int electricalUnits, double firstPhysicalVal, double secondPhysicalVal, int physicalUnits, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAITorqueBridgeTwoPointLinChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2540</i>
	 */
	public static native int dAQmxCreateAITorqueBridgeTwoPointLinChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, double firstElectricalVal, double secondElectricalVal, int electricalUnits, double firstPhysicalVal, double secondPhysicalVal, int physicalUnits, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAITorqueBridgeTableChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, int32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2542</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAITorqueBridgeTableChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double, java.nio.DoubleBuffer, com.sun.jna.NativeLong, int, java.nio.DoubleBuffer, com.sun.jna.NativeLong, int, byte[])} and {@link #dAQmxCreateAITorqueBridgeTableChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, int, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAITorqueBridgeTableChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleByReference electricalVals, NativeLong numElectricalVals, int electricalUnits, DoubleByReference physicalVals, NativeLong numPhysicalVals, int physicalUnits, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAITorqueBridgeTableChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, int32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2542</i>
	 */
	public static native int dAQmxCreateAITorqueBridgeTableChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleBuffer electricalVals, NativeLong numElectricalVals, int electricalUnits, DoubleBuffer physicalVals, NativeLong numPhysicalVals, int physicalUnits, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAITorqueBridgePolynomialChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, const float64[], uInt32, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2544</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAITorqueBridgePolynomialChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double, java.nio.DoubleBuffer, com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong, int, int, byte[])} and {@link #dAQmxCreateAITorqueBridgePolynomialChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, int, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAITorqueBridgePolynomialChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleByReference forwardCoeffs, NativeLong numForwardCoeffs, DoubleByReference reverseCoeffs, NativeLong numReverseCoeffs, int electricalUnits, int physicalUnits, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAITorqueBridgePolynomialChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, const float64[], uInt32, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2544</i>
	 */
	public static native int dAQmxCreateAITorqueBridgePolynomialChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleBuffer forwardCoeffs, NativeLong numForwardCoeffs, DoubleBuffer reverseCoeffs, NativeLong numReverseCoeffs, int electricalUnits, int physicalUnits, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2545</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIBridgeChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double, byte[])} and {@link #dAQmxCreateAIBridgeChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIBridgeChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2545</i>
	 */
	public static native int dAQmxCreateAIBridgeChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIVoltageChanWithExcit(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, int32, float64, bool32, const char[])</code><br>
	 * <i>native declaration : line 2546</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIVoltageChanWithExcit(com.sun.jna.Pointer, byte[], byte[], int, double, double, int, int, int, double, com.sun.jna.NativeLong, byte[])} and {@link #dAQmxCreateAIVoltageChanWithExcit(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, int, int, int, double, com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIVoltageChanWithExcit(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, NativeLong useExcitForScaling, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIVoltageChanWithExcit(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, int32, float64, bool32, const char[])</code><br>
	 * <i>native declaration : line 2546</i>
	 */
	public static native int dAQmxCreateAIVoltageChanWithExcit(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, NativeLong useExcitForScaling, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAITempBuiltInSensorChan(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2547</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAITempBuiltInSensorChan(com.sun.jna.Pointer, byte[], byte[], int)} and {@link #dAQmxCreateAITempBuiltInSensorChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAITempBuiltInSensorChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int units);
	/**
	 * Original signature : <code>int32 DAQmxCreateAITempBuiltInSensorChan(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2547</i>
	 */
	public static native int dAQmxCreateAITempBuiltInSensorChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int units);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIAccelChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2548</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIAccelChan(com.sun.jna.Pointer, byte[], byte[], int, double, double, int, double, int, int, double, byte[])} and {@link #dAQmxCreateAIAccelChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, int, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIAccelChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int currentExcitSource, double currentExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIAccelChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2548</i>
	 */
	public static native int dAQmxCreateAIAccelChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int currentExcitSource, double currentExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIVelocityIEPEChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2549</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIVelocityIEPEChan(com.sun.jna.Pointer, byte[], byte[], int, double, double, int, double, int, int, double, byte[])} and {@link #dAQmxCreateAIVelocityIEPEChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, int, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIVelocityIEPEChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int currentExcitSource, double currentExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIVelocityIEPEChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2549</i>
	 */
	public static native int dAQmxCreateAIVelocityIEPEChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int currentExcitSource, double currentExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIForceIEPEChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2550</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIForceIEPEChan(com.sun.jna.Pointer, byte[], byte[], int, double, double, int, double, int, int, double, byte[])} and {@link #dAQmxCreateAIForceIEPEChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, int, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIForceIEPEChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int currentExcitSource, double currentExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIForceIEPEChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2550</i>
	 */
	public static native int dAQmxCreateAIForceIEPEChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int currentExcitSource, double currentExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIMicrophoneChan(TaskHandle, const char[], const char[], int32, int32, float64, float64, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2551</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIMicrophoneChan(com.sun.jna.Pointer, byte[], byte[], int, int, double, double, int, double, byte[])} and {@link #dAQmxCreateAIMicrophoneChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, int, double, double, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIMicrophoneChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, int units, double micSensitivity, double maxSndPressLevel, int currentExcitSource, double currentExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIMicrophoneChan(TaskHandle, const char[], const char[], int32, int32, float64, float64, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2551</i>
	 */
	public static native int dAQmxCreateAIMicrophoneChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, int units, double micSensitivity, double maxSndPressLevel, int currentExcitSource, double currentExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIPosLVDTChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, int32, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2552</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIPosLVDTChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, double, int, int, double, double, int, byte[])} and {@link #dAQmxCreateAIPosLVDTChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, double, int, int, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIPosLVDTChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int voltageExcitSource, double voltageExcitVal, double voltageExcitFreq, int ACExcitWireMode, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIPosLVDTChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, int32, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2552</i>
	 */
	public static native int dAQmxCreateAIPosLVDTChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int voltageExcitSource, double voltageExcitVal, double voltageExcitFreq, int ACExcitWireMode, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIPosRVDTChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, int32, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2553</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIPosRVDTChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, double, int, int, double, double, int, byte[])} and {@link #dAQmxCreateAIPosRVDTChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, double, int, int, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIPosRVDTChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int voltageExcitSource, double voltageExcitVal, double voltageExcitFreq, int ACExcitWireMode, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIPosRVDTChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, int32, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2553</i>
	 */
	public static native int dAQmxCreateAIPosRVDTChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int voltageExcitSource, double voltageExcitVal, double voltageExcitFreq, int ACExcitWireMode, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIPosEddyCurrProxProbeChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2554</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIPosEddyCurrProxProbeChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, double, int, byte[])} and {@link #dAQmxCreateAIPosEddyCurrProxProbeChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIPosEddyCurrProxProbeChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAIPosEddyCurrProxProbeChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2554</i>
	 */
	public static native int dAQmxCreateAIPosEddyCurrProxProbeChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, byte customScaleName[]);
	/**
	 * Function DAQmxCreateAIDeviceTempChan is obsolete and has been replaced by DAQmxCreateAITempBuiltInSensorChan<br>
	 * Original signature : <code>int32 DAQmxCreateAIDeviceTempChan(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2556</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAIDeviceTempChan(com.sun.jna.Pointer, byte[], byte[], int)} and {@link #dAQmxCreateAIDeviceTempChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAIDeviceTempChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int units);
	/**
	 * Function DAQmxCreateAIDeviceTempChan is obsolete and has been replaced by DAQmxCreateAITempBuiltInSensorChan<br>
	 * Original signature : <code>int32 DAQmxCreateAIDeviceTempChan(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2556</i>
	 */
	public static native int dAQmxCreateAIDeviceTempChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int units);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIVoltageChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2558</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIVoltageChan(com.sun.jna.Pointer, byte[], byte[], int, double, double, int, byte[])} and {@link #dAQmxCreateTEDSAIVoltageChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIVoltageChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, double minVal, double maxVal, int units, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIVoltageChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2558</i>
	 */
	public static native int dAQmxCreateTEDSAIVoltageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAICurrentChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2559</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAICurrentChan(com.sun.jna.Pointer, byte[], byte[], int, double, double, int, int, double, byte[])} and {@link #dAQmxCreateTEDSAICurrentChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAICurrentChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, double minVal, double maxVal, int units, int shuntResistorLoc, double extShuntResistorVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAICurrentChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2559</i>
	 */
	public static native int dAQmxCreateTEDSAICurrentChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int shuntResistorLoc, double extShuntResistorVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIThrmcplChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2560</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIThrmcplChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, double, byte[])} and {@link #dAQmxCreateTEDSAIThrmcplChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIThrmcplChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int cjcSource, double cjcVal, Pointer cjcChannel);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIThrmcplChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2560</i>
	 */
	public static native int dAQmxCreateTEDSAIThrmcplChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int cjcSource, double cjcVal, byte cjcChannel[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIRTDChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64)</code><br>
	 * <i>native declaration : line 2561</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIRTDChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double)} and {@link #dAQmxCreateTEDSAIRTDChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIRTDChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIRTDChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64)</code><br>
	 * <i>native declaration : line 2561</i>
	 */
	public static native int dAQmxCreateTEDSAIRTDChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIThrmstrChanIex(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64)</code><br>
	 * <i>native declaration : line 2562</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIThrmstrChanIex(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double)} and {@link #dAQmxCreateTEDSAIThrmstrChanIex(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIThrmstrChanIex(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIThrmstrChanIex(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64)</code><br>
	 * <i>native declaration : line 2562</i>
	 */
	public static native int dAQmxCreateTEDSAIThrmstrChanIex(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIThrmstrChanVex(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64)</code><br>
	 * <i>native declaration : line 2563</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIThrmstrChanVex(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, double)} and {@link #dAQmxCreateTEDSAIThrmstrChanVex(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIThrmstrChanVex(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int resistanceConfig, int voltageExcitSource, double voltageExcitVal, double r1);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIThrmstrChanVex(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64)</code><br>
	 * <i>native declaration : line 2563</i>
	 */
	public static native int dAQmxCreateTEDSAIThrmstrChanVex(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int voltageExcitSource, double voltageExcitVal, double r1);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIResistanceChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2564</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIResistanceChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, byte[])} and {@link #dAQmxCreateTEDSAIResistanceChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIResistanceChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIResistanceChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2564</i>
	 */
	public static native int dAQmxCreateTEDSAIResistanceChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIStrainGageChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2565</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIStrainGageChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, double, double, double, byte[])} and {@link #dAQmxCreateTEDSAIStrainGageChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, double, double, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIStrainGageChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, double initialBridgeVoltage, double leadWireResistance, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIStrainGageChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2565</i>
	 */
	public static native int dAQmxCreateTEDSAIStrainGageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, double initialBridgeVoltage, double leadWireResistance, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIForceBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2566</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIForceBridgeChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, double, byte[])} and {@link #dAQmxCreateTEDSAIForceBridgeChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIForceBridgeChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIForceBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2566</i>
	 */
	public static native int dAQmxCreateTEDSAIForceBridgeChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIPressureBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2567</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIPressureBridgeChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, double, byte[])} and {@link #dAQmxCreateTEDSAIPressureBridgeChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIPressureBridgeChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIPressureBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2567</i>
	 */
	public static native int dAQmxCreateTEDSAIPressureBridgeChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAITorqueBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2568</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAITorqueBridgeChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, double, byte[])} and {@link #dAQmxCreateTEDSAITorqueBridgeChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAITorqueBridgeChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAITorqueBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2568</i>
	 */
	public static native int dAQmxCreateTEDSAITorqueBridgeChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2569</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIBridgeChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, double, byte[])} and {@link #dAQmxCreateTEDSAIBridgeChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIBridgeChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2569</i>
	 */
	public static native int dAQmxCreateTEDSAIBridgeChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIVoltageChanWithExcit(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2570</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIVoltageChanWithExcit(com.sun.jna.Pointer, byte[], byte[], int, double, double, int, int, double, byte[])} and {@link #dAQmxCreateTEDSAIVoltageChanWithExcit(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIVoltageChanWithExcit(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIVoltageChanWithExcit(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2570</i>
	 */
	public static native int dAQmxCreateTEDSAIVoltageChanWithExcit(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIAccelChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2571</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIAccelChan(com.sun.jna.Pointer, byte[], byte[], int, double, double, int, int, double, byte[])} and {@link #dAQmxCreateTEDSAIAccelChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIAccelChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, double minVal, double maxVal, int units, int currentExcitSource, double currentExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIAccelChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2571</i>
	 */
	public static native int dAQmxCreateTEDSAIAccelChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int currentExcitSource, double currentExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIForceIEPEChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2572</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIForceIEPEChan(com.sun.jna.Pointer, byte[], byte[], int, double, double, int, int, double, byte[])} and {@link #dAQmxCreateTEDSAIForceIEPEChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIForceIEPEChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, double minVal, double maxVal, int units, int currentExcitSource, double currentExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIForceIEPEChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2572</i>
	 */
	public static native int dAQmxCreateTEDSAIForceIEPEChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int currentExcitSource, double currentExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIMicrophoneChan(TaskHandle, const char[], const char[], int32, int32, float64, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2574</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIMicrophoneChan(com.sun.jna.Pointer, byte[], byte[], int, int, double, int, double, byte[])} and {@link #dAQmxCreateTEDSAIMicrophoneChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, int, double, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIMicrophoneChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int terminalConfig, int units, double maxSndPressLevel, int currentExcitSource, double currentExcitVal, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIMicrophoneChan(TaskHandle, const char[], const char[], int32, int32, float64, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2574</i>
	 */
	public static native int dAQmxCreateTEDSAIMicrophoneChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, int units, double maxSndPressLevel, int currentExcitSource, double currentExcitVal, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIPosLVDTChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2575</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIPosLVDTChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, double, double, int, byte[])} and {@link #dAQmxCreateTEDSAIPosLVDTChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIPosLVDTChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, double voltageExcitFreq, int ACExcitWireMode, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIPosLVDTChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2575</i>
	 */
	public static native int dAQmxCreateTEDSAIPosLVDTChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, double voltageExcitFreq, int ACExcitWireMode, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIPosRVDTChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2576</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTEDSAIPosRVDTChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, double, double, int, byte[])} and {@link #dAQmxCreateTEDSAIPosRVDTChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTEDSAIPosRVDTChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, double voltageExcitFreq, int ACExcitWireMode, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIPosRVDTChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2576</i>
	 */
	public static native int dAQmxCreateTEDSAIPosRVDTChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, double voltageExcitFreq, int ACExcitWireMode, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAOVoltageChan(TaskHandle, const char[], const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2578</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAOVoltageChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, byte[])} and {@link #dAQmxCreateAOVoltageChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAOVoltageChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAOVoltageChan(TaskHandle, const char[], const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2578</i>
	 */
	public static native int dAQmxCreateAOVoltageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAOCurrentChan(TaskHandle, const char[], const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2579</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAOCurrentChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, byte[])} and {@link #dAQmxCreateAOCurrentChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAOCurrentChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateAOCurrentChan(TaskHandle, const char[], const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2579</i>
	 */
	public static native int dAQmxCreateAOCurrentChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAOFuncGenChan(TaskHandle, const char[], const char[], int32, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2580</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateAOFuncGenChan(com.sun.jna.Pointer, byte[], byte[], int, double, double, double)} and {@link #dAQmxCreateAOFuncGenChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateAOFuncGenChan(Pointer taskHandle, Pointer physicalChannel, Pointer nameToAssignToChannel, int type, double freq, double amplitude, double offset);
	/**
	 * Original signature : <code>int32 DAQmxCreateAOFuncGenChan(TaskHandle, const char[], const char[], int32, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2580</i>
	 */
	public static native int dAQmxCreateAOFuncGenChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int type, double freq, double amplitude, double offset);
	/**
	 * Original signature : <code>int32 DAQmxCreateDIChan(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2582</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateDIChan(com.sun.jna.Pointer, byte[], byte[], int)} and {@link #dAQmxCreateDIChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateDIChan(Pointer taskHandle, Pointer lines, Pointer nameToAssignToLines, int lineGrouping);
	/**
	 * Original signature : <code>int32 DAQmxCreateDIChan(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2582</i>
	 */
	public static native int dAQmxCreateDIChan(Pointer taskHandle, byte lines[], byte nameToAssignToLines[], int lineGrouping);
	/**
	 * Original signature : <code>int32 DAQmxCreateDOChan(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2584</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateDOChan(com.sun.jna.Pointer, byte[], byte[], int)} and {@link #dAQmxCreateDOChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateDOChan(Pointer taskHandle, Pointer lines, Pointer nameToAssignToLines, int lineGrouping);
	/**
	 * Original signature : <code>int32 DAQmxCreateDOChan(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2584</i>
	 */
	public static native int dAQmxCreateDOChan(Pointer taskHandle, byte lines[], byte nameToAssignToLines[], int lineGrouping);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIFreqChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, uInt32, const char[])</code><br>
	 * <i>native declaration : line 2586</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCIFreqChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, com.sun.jna.NativeLong, byte[])} and {@link #dAQmxCreateCIFreqChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCIFreqChan(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int edge, int measMethod, double measTime, NativeLong divisor, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIFreqChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, uInt32, const char[])</code><br>
	 * <i>native declaration : line 2586</i>
	 */
	public static native int dAQmxCreateCIFreqChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int edge, int measMethod, double measTime, NativeLong divisor, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIPeriodChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, uInt32, const char[])</code><br>
	 * <i>native declaration : line 2587</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCIPeriodChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, double, com.sun.jna.NativeLong, byte[])} and {@link #dAQmxCreateCIPeriodChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, double, com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCIPeriodChan(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int edge, int measMethod, double measTime, NativeLong divisor, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIPeriodChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, uInt32, const char[])</code><br>
	 * <i>native declaration : line 2587</i>
	 */
	public static native int dAQmxCreateCIPeriodChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int edge, int measMethod, double measTime, NativeLong divisor, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateCICountEdgesChan(TaskHandle, const char[], const char[], int32, uInt32, int32)</code><br>
	 * <i>native declaration : line 2588</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCICountEdgesChan(com.sun.jna.Pointer, byte[], byte[], int, com.sun.jna.NativeLong, int)} and {@link #dAQmxCreateCICountEdgesChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.NativeLong, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCICountEdgesChan(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, int edge, NativeLong initialCount, int countDirection);
	/**
	 * Original signature : <code>int32 DAQmxCreateCICountEdgesChan(TaskHandle, const char[], const char[], int32, uInt32, int32)</code><br>
	 * <i>native declaration : line 2588</i>
	 */
	public static native int dAQmxCreateCICountEdgesChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], int edge, NativeLong initialCount, int countDirection);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIDutyCycleChan(TaskHandle, const char[], const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2589</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCIDutyCycleChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, byte[])} and {@link #dAQmxCreateCIDutyCycleChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCIDutyCycleChan(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, double minFreq, double maxFreq, int edge, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIDutyCycleChan(TaskHandle, const char[], const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2589</i>
	 */
	public static native int dAQmxCreateCIDutyCycleChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minFreq, double maxFreq, int edge, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIPulseWidthChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2590</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCIPulseWidthChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, byte[])} and {@link #dAQmxCreateCIPulseWidthChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCIPulseWidthChan(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int startingEdge, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIPulseWidthChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2590</i>
	 */
	public static native int dAQmxCreateCIPulseWidthChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int startingEdge, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateCISemiPeriodChan(TaskHandle, const char[], const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2591</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCISemiPeriodChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, byte[])} and {@link #dAQmxCreateCISemiPeriodChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCISemiPeriodChan(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateCISemiPeriodChan(TaskHandle, const char[], const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2591</i>
	 */
	public static native int dAQmxCreateCISemiPeriodChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateCITwoEdgeSepChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2592</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCITwoEdgeSepChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, int, byte[])} and {@link #dAQmxCreateCITwoEdgeSepChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCITwoEdgeSepChan(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, double minVal, double maxVal, int units, int firstEdge, int secondEdge, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateCITwoEdgeSepChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2592</i>
	 */
	public static native int dAQmxCreateCITwoEdgeSepChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int firstEdge, int secondEdge, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIPulseChanFreq(TaskHandle, const char[], const char[], float64, float64, int32)</code><br>
	 * <i>native declaration : line 2593</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCIPulseChanFreq(com.sun.jna.Pointer, byte[], byte[], double, double, int)} and {@link #dAQmxCreateCIPulseChanFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCIPulseChanFreq(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, double minVal, double maxVal, int units);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIPulseChanFreq(TaskHandle, const char[], const char[], float64, float64, int32)</code><br>
	 * <i>native declaration : line 2593</i>
	 */
	public static native int dAQmxCreateCIPulseChanFreq(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIPulseChanTime(TaskHandle, const char[], const char[], float64, float64, int32)</code><br>
	 * <i>native declaration : line 2594</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCIPulseChanTime(com.sun.jna.Pointer, byte[], byte[], double, double, int)} and {@link #dAQmxCreateCIPulseChanTime(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCIPulseChanTime(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, double minVal, double maxVal, int units);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIPulseChanTime(TaskHandle, const char[], const char[], float64, float64, int32)</code><br>
	 * <i>native declaration : line 2594</i>
	 */
	public static native int dAQmxCreateCIPulseChanTime(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIPulseChanTicks(TaskHandle, const char[], const char[], const char[], float64, float64)</code><br>
	 * <i>native declaration : line 2595</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCIPulseChanTicks(com.sun.jna.Pointer, byte[], byte[], byte[], double, double)} and {@link #dAQmxCreateCIPulseChanTicks(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCIPulseChanTicks(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, Pointer sourceTerminal, double minVal, double maxVal);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIPulseChanTicks(TaskHandle, const char[], const char[], const char[], float64, float64)</code><br>
	 * <i>native declaration : line 2595</i>
	 */
	public static native int dAQmxCreateCIPulseChanTicks(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], byte sourceTerminal[], double minVal, double maxVal);
	/**
	 * Original signature : <code>int32 DAQmxCreateCILinEncoderChan(TaskHandle, const char[], const char[], int32, bool32, float64, int32, int32, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2596</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCILinEncoderChan(com.sun.jna.Pointer, byte[], byte[], int, com.sun.jna.NativeLong, double, int, int, double, double, byte[])} and {@link #dAQmxCreateCILinEncoderChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, int, int, double, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCILinEncoderChan(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, int decodingType, NativeLong ZidxEnable, double ZidxVal, int ZidxPhase, int units, double distPerPulse, double initialPos, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateCILinEncoderChan(TaskHandle, const char[], const char[], int32, bool32, float64, int32, int32, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2596</i>
	 */
	public static native int dAQmxCreateCILinEncoderChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], int decodingType, NativeLong ZidxEnable, double ZidxVal, int ZidxPhase, int units, double distPerPulse, double initialPos, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIAngEncoderChan(TaskHandle, const char[], const char[], int32, bool32, float64, int32, int32, uInt32, float64, const char[])</code><br>
	 * <i>native declaration : line 2597</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCIAngEncoderChan(com.sun.jna.Pointer, byte[], byte[], int, com.sun.jna.NativeLong, double, int, int, com.sun.jna.NativeLong, double, byte[])} and {@link #dAQmxCreateCIAngEncoderChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, int, int, com.sun.jna.NativeLong, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCIAngEncoderChan(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, int decodingType, NativeLong ZidxEnable, double ZidxVal, int ZidxPhase, int units, NativeLong pulsesPerRev, double initialAngle, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIAngEncoderChan(TaskHandle, const char[], const char[], int32, bool32, float64, int32, int32, uInt32, float64, const char[])</code><br>
	 * <i>native declaration : line 2597</i>
	 */
	public static native int dAQmxCreateCIAngEncoderChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], int decodingType, NativeLong ZidxEnable, double ZidxVal, int ZidxPhase, int units, NativeLong pulsesPerRev, double initialAngle, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateCILinVelocityChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2598</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCILinVelocityChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, double, byte[])} and {@link #dAQmxCreateCILinVelocityChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCILinVelocityChan(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, double minVal, double maxVal, int decodingType, int units, double distPerPulse, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateCILinVelocityChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2598</i>
	 */
	public static native int dAQmxCreateCILinVelocityChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int decodingType, int units, double distPerPulse, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIAngVelocityChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, uInt32, const char[])</code><br>
	 * <i>native declaration : line 2599</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCIAngVelocityChan(com.sun.jna.Pointer, byte[], byte[], double, double, int, int, com.sun.jna.NativeLong, byte[])} and {@link #dAQmxCreateCIAngVelocityChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, double, int, int, com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCIAngVelocityChan(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, double minVal, double maxVal, int decodingType, int units, NativeLong pulsesPerRev, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIAngVelocityChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, uInt32, const char[])</code><br>
	 * <i>native declaration : line 2599</i>
	 */
	public static native int dAQmxCreateCIAngVelocityChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int decodingType, int units, NativeLong pulsesPerRev, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIGPSTimestampChan(TaskHandle, const char[], const char[], int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2600</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCIGPSTimestampChan(com.sun.jna.Pointer, byte[], byte[], int, int, byte[])} and {@link #dAQmxCreateCIGPSTimestampChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCIGPSTimestampChan(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, int units, int syncMethod, Pointer customScaleName);
	/**
	 * Original signature : <code>int32 DAQmxCreateCIGPSTimestampChan(TaskHandle, const char[], const char[], int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2600</i>
	 */
	public static native int dAQmxCreateCIGPSTimestampChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], int units, int syncMethod, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateCOPulseChanFreq(TaskHandle, const char[], const char[], int32, int32, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2602</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCOPulseChanFreq(com.sun.jna.Pointer, byte[], byte[], int, int, double, double, double)} and {@link #dAQmxCreateCOPulseChanFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, int, double, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCOPulseChanFreq(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, int units, int idleState, double initialDelay, double freq, double dutyCycle);
	/**
	 * Original signature : <code>int32 DAQmxCreateCOPulseChanFreq(TaskHandle, const char[], const char[], int32, int32, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2602</i>
	 */
	public static native int dAQmxCreateCOPulseChanFreq(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], int units, int idleState, double initialDelay, double freq, double dutyCycle);
	/**
	 * Original signature : <code>int32 DAQmxCreateCOPulseChanTime(TaskHandle, const char[], const char[], int32, int32, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2603</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCOPulseChanTime(com.sun.jna.Pointer, byte[], byte[], int, int, double, double, double)} and {@link #dAQmxCreateCOPulseChanTime(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, int, double, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCOPulseChanTime(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, int units, int idleState, double initialDelay, double lowTime, double highTime);
	/**
	 * Original signature : <code>int32 DAQmxCreateCOPulseChanTime(TaskHandle, const char[], const char[], int32, int32, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2603</i>
	 */
	public static native int dAQmxCreateCOPulseChanTime(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], int units, int idleState, double initialDelay, double lowTime, double highTime);
	/**
	 * Original signature : <code>int32 DAQmxCreateCOPulseChanTicks(TaskHandle, const char[], const char[], const char[], int32, int32, int32, int32)</code><br>
	 * <i>native declaration : line 2604</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateCOPulseChanTicks(com.sun.jna.Pointer, byte[], byte[], byte[], int, int, int, int)} and {@link #dAQmxCreateCOPulseChanTicks(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, int, int, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateCOPulseChanTicks(Pointer taskHandle, Pointer counter, Pointer nameToAssignToChannel, Pointer sourceTerminal, int idleState, int initialDelay, int lowTicks, int highTicks);
	/**
	 * Original signature : <code>int32 DAQmxCreateCOPulseChanTicks(TaskHandle, const char[], const char[], const char[], int32, int32, int32, int32)</code><br>
	 * <i>native declaration : line 2604</i>
	 */
	public static native int dAQmxCreateCOPulseChanTicks(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], byte sourceTerminal[], int idleState, int initialDelay, int lowTicks, int highTicks);
	/**
	 * Original signature : <code>int32 DAQmxGetAIChanCalCalDate(TaskHandle, const char[], uInt32*, uInt32*, uInt32*, uInt32*, uInt32*)</code><br>
	 * <i>native declaration : line 2606</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalCalDate(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIChanCalCalDate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalCalDate(Pointer taskHandle, Pointer channelName, NativeLongByReference year, NativeLongByReference month, NativeLongByReference day, NativeLongByReference hour, NativeLongByReference minute);
	/**
	 * Original signature : <code>int32 DAQmxGetAIChanCalCalDate(TaskHandle, const char[], uInt32*, uInt32*, uInt32*, uInt32*, uInt32*)</code><br>
	 * <i>native declaration : line 2606</i>
	 */
	public static native int dAQmxGetAIChanCalCalDate(Pointer taskHandle, byte channelName[], NativeLongByReference year, NativeLongByReference month, NativeLongByReference day, NativeLongByReference hour, NativeLongByReference minute);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalCalDate(TaskHandle, const char[], uInt32, uInt32, uInt32, uInt32, uInt32)</code><br>
	 * <i>native declaration : line 2607</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIChanCalCalDate(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong)} and {@link #dAQmxSetAIChanCalCalDate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIChanCalCalDate(Pointer taskHandle, Pointer channelName, NativeLong year, NativeLong month, NativeLong day, NativeLong hour, NativeLong minute);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalCalDate(TaskHandle, const char[], uInt32, uInt32, uInt32, uInt32, uInt32)</code><br>
	 * <i>native declaration : line 2607</i>
	 */
	public static native int dAQmxSetAIChanCalCalDate(Pointer taskHandle, byte channelName[], NativeLong year, NativeLong month, NativeLong day, NativeLong hour, NativeLong minute);
	/**
	 * Original signature : <code>int32 DAQmxGetAIChanCalExpDate(TaskHandle, const char[], uInt32*, uInt32*, uInt32*, uInt32*, uInt32*)</code><br>
	 * <i>native declaration : line 2608</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalExpDate(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIChanCalExpDate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalExpDate(Pointer taskHandle, Pointer channelName, NativeLongByReference year, NativeLongByReference month, NativeLongByReference day, NativeLongByReference hour, NativeLongByReference minute);
	/**
	 * Original signature : <code>int32 DAQmxGetAIChanCalExpDate(TaskHandle, const char[], uInt32*, uInt32*, uInt32*, uInt32*, uInt32*)</code><br>
	 * <i>native declaration : line 2608</i>
	 */
	public static native int dAQmxGetAIChanCalExpDate(Pointer taskHandle, byte channelName[], NativeLongByReference year, NativeLongByReference month, NativeLongByReference day, NativeLongByReference hour, NativeLongByReference minute);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalExpDate(TaskHandle, const char[], uInt32, uInt32, uInt32, uInt32, uInt32)</code><br>
	 * <i>native declaration : line 2609</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIChanCalExpDate(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong)} and {@link #dAQmxSetAIChanCalExpDate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIChanCalExpDate(Pointer taskHandle, Pointer channelName, NativeLong year, NativeLong month, NativeLong day, NativeLong hour, NativeLong minute);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalExpDate(TaskHandle, const char[], uInt32, uInt32, uInt32, uInt32, uInt32)</code><br>
	 * <i>native declaration : line 2609</i>
	 */
	public static native int dAQmxSetAIChanCalExpDate(Pointer taskHandle, byte channelName[], NativeLong year, NativeLong month, NativeLong day, NativeLong hour, NativeLong minute);
	/**
	 * Original signature : <code>int32 DAQmxGetChanAttribute(TaskHandle, const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 2611</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetChanAttribute(com.sun.jna.Pointer, byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #dAQmxGetChanAttribute(com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetChanAttribute(Pointer taskHandle, Pointer channel, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetChanAttribute(TaskHandle, const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 2611</i>
	 */
	public static native int dAQmxGetChanAttribute(Pointer taskHandle, byte channel[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetChanAttribute(TaskHandle, const char[], int32, null)</code><br>
	 * <i>native declaration : line 2612</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetChanAttribute(com.sun.jna.Pointer, byte[], int, java.lang.Object)} and {@link #dAQmxSetChanAttribute(com.sun.jna.Pointer, com.sun.jna.Pointer, int, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetChanAttribute(Pointer taskHandle, Pointer channel, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetChanAttribute(TaskHandle, const char[], int32, null)</code><br>
	 * <i>native declaration : line 2612</i>
	 */
	public static native int dAQmxSetChanAttribute(Pointer taskHandle, byte channel[], int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetChanAttribute(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 2613</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetChanAttribute(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxResetChanAttribute(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetChanAttribute(Pointer taskHandle, Pointer channel, int attribute);
	/**
	 * Original signature : <code>int32 DAQmxResetChanAttribute(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 2613</i>
	 */
	public static native int dAQmxResetChanAttribute(Pointer taskHandle, byte channel[], int attribute);
	/**
	 * (Analog/Counter Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgSampClkTiming(TaskHandle, const char[], float64, int32, int32, uInt64)</code><br>
	 * <i>native declaration : line 2622</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgSampClkTiming(com.sun.jna.Pointer, byte[], double, int, int, long)} and {@link #dAQmxCfgSampClkTiming(com.sun.jna.Pointer, com.sun.jna.Pointer, double, int, int, long)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgSampClkTiming(Pointer taskHandle, Pointer source, double rate, int activeEdge, int sampleMode, long sampsPerChan);
	/**
	 * (Analog/Counter Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgSampClkTiming(TaskHandle, const char[], float64, int32, int32, uInt64)</code><br>
	 * <i>native declaration : line 2622</i>
	 */
	public static native int dAQmxCfgSampClkTiming(Pointer taskHandle, byte source[], double rate, int activeEdge, int sampleMode, long sampsPerChan);
	/**
	 * (Digital Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgHandshakingTiming(TaskHandle, int32, uInt64)</code><br>
	 * <i>native declaration : line 2624</i>
	 */
	public static native int dAQmxCfgHandshakingTiming(Pointer taskHandle, int sampleMode, long sampsPerChan);
	/**
	 * (Burst Import Clock Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgBurstHandshakingTimingImportClock(TaskHandle, int32, uInt64, float64, const char[], int32, int32, int32)</code><br>
	 * <i>native declaration : line 2626</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgBurstHandshakingTimingImportClock(com.sun.jna.Pointer, int, long, double, byte[], int, int, int)} and {@link #dAQmxCfgBurstHandshakingTimingImportClock(com.sun.jna.Pointer, int, long, double, com.sun.jna.Pointer, int, int, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgBurstHandshakingTimingImportClock(Pointer taskHandle, int sampleMode, long sampsPerChan, double sampleClkRate, Pointer sampleClkSrc, int sampleClkActiveEdge, int pauseWhen, int readyEventActiveLevel);
	/**
	 * (Burst Import Clock Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgBurstHandshakingTimingImportClock(TaskHandle, int32, uInt64, float64, const char[], int32, int32, int32)</code><br>
	 * <i>native declaration : line 2626</i>
	 */
	public static native int dAQmxCfgBurstHandshakingTimingImportClock(Pointer taskHandle, int sampleMode, long sampsPerChan, double sampleClkRate, byte sampleClkSrc[], int sampleClkActiveEdge, int pauseWhen, int readyEventActiveLevel);
	/**
	 * (Burst Export Clock Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgBurstHandshakingTimingExportClock(TaskHandle, int32, uInt64, float64, const char[], int32, int32, int32)</code><br>
	 * <i>native declaration : line 2628</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgBurstHandshakingTimingExportClock(com.sun.jna.Pointer, int, long, double, byte[], int, int, int)} and {@link #dAQmxCfgBurstHandshakingTimingExportClock(com.sun.jna.Pointer, int, long, double, com.sun.jna.Pointer, int, int, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgBurstHandshakingTimingExportClock(Pointer taskHandle, int sampleMode, long sampsPerChan, double sampleClkRate, Pointer sampleClkOutpTerm, int sampleClkPulsePolarity, int pauseWhen, int readyEventActiveLevel);
	/**
	 * (Burst Export Clock Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgBurstHandshakingTimingExportClock(TaskHandle, int32, uInt64, float64, const char[], int32, int32, int32)</code><br>
	 * <i>native declaration : line 2628</i>
	 */
	public static native int dAQmxCfgBurstHandshakingTimingExportClock(Pointer taskHandle, int sampleMode, long sampsPerChan, double sampleClkRate, byte sampleClkOutpTerm[], int sampleClkPulsePolarity, int pauseWhen, int readyEventActiveLevel);
	/**
	 * Original signature : <code>int32 DAQmxCfgChangeDetectionTiming(TaskHandle, const char[], const char[], int32, uInt64)</code><br>
	 * <i>native declaration : line 2629</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgChangeDetectionTiming(com.sun.jna.Pointer, byte[], byte[], int, long)} and {@link #dAQmxCfgChangeDetectionTiming(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, long)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgChangeDetectionTiming(Pointer taskHandle, Pointer risingEdgeChan, Pointer fallingEdgeChan, int sampleMode, long sampsPerChan);
	/**
	 * Original signature : <code>int32 DAQmxCfgChangeDetectionTiming(TaskHandle, const char[], const char[], int32, uInt64)</code><br>
	 * <i>native declaration : line 2629</i>
	 */
	public static native int dAQmxCfgChangeDetectionTiming(Pointer taskHandle, byte risingEdgeChan[], byte fallingEdgeChan[], int sampleMode, long sampsPerChan);
	/**
	 * (Counter Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgImplicitTiming(TaskHandle, int32, uInt64)</code><br>
	 * <i>native declaration : line 2631</i>
	 */
	public static native int dAQmxCfgImplicitTiming(Pointer taskHandle, int sampleMode, long sampsPerChan);
	/**
	 * (Pipelined Sample Clock Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgPipelinedSampClkTiming(TaskHandle, const char[], float64, int32, int32, uInt64)</code><br>
	 * <i>native declaration : line 2633</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgPipelinedSampClkTiming(com.sun.jna.Pointer, byte[], double, int, int, long)} and {@link #dAQmxCfgPipelinedSampClkTiming(com.sun.jna.Pointer, com.sun.jna.Pointer, double, int, int, long)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgPipelinedSampClkTiming(Pointer taskHandle, Pointer source, double rate, int activeEdge, int sampleMode, long sampsPerChan);
	/**
	 * (Pipelined Sample Clock Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgPipelinedSampClkTiming(TaskHandle, const char[], float64, int32, int32, uInt64)</code><br>
	 * <i>native declaration : line 2633</i>
	 */
	public static native int dAQmxCfgPipelinedSampClkTiming(Pointer taskHandle, byte source[], double rate, int activeEdge, int sampleMode, long sampsPerChan);
	/**
	 * Original signature : <code>int32 DAQmxGetTimingAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 2635</i>
	 */
	public static native int dAQmxGetTimingAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetTimingAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 2636</i>
	 */
	public static native int dAQmxSetTimingAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetTimingAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2637</i>
	 */
	public static native int dAQmxResetTimingAttribute(Pointer taskHandle, int attribute);
	/**
	 * Original signature : <code>int32 DAQmxGetTimingAttributeEx(TaskHandle, const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 2639</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetTimingAttributeEx(com.sun.jna.Pointer, byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #dAQmxGetTimingAttributeEx(com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetTimingAttributeEx(Pointer taskHandle, Pointer deviceNames, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetTimingAttributeEx(TaskHandle, const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 2639</i>
	 */
	public static native int dAQmxGetTimingAttributeEx(Pointer taskHandle, byte deviceNames[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetTimingAttributeEx(TaskHandle, const char[], int32, null)</code><br>
	 * <i>native declaration : line 2640</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetTimingAttributeEx(com.sun.jna.Pointer, byte[], int, java.lang.Object)} and {@link #dAQmxSetTimingAttributeEx(com.sun.jna.Pointer, com.sun.jna.Pointer, int, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetTimingAttributeEx(Pointer taskHandle, Pointer deviceNames, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetTimingAttributeEx(TaskHandle, const char[], int32, null)</code><br>
	 * <i>native declaration : line 2640</i>
	 */
	public static native int dAQmxSetTimingAttributeEx(Pointer taskHandle, byte deviceNames[], int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetTimingAttributeEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 2641</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetTimingAttributeEx(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxResetTimingAttributeEx(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetTimingAttributeEx(Pointer taskHandle, Pointer deviceNames, int attribute);
	/**
	 * Original signature : <code>int32 DAQmxResetTimingAttributeEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 2641</i>
	 */
	public static native int dAQmxResetTimingAttributeEx(Pointer taskHandle, byte deviceNames[], int attribute);
	/**
	 * Original signature : <code>int32 DAQmxDisableStartTrig(TaskHandle)</code><br>
	 * <i>native declaration : line 2649</i>
	 */
	public static native int dAQmxDisableStartTrig(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxCfgDigEdgeStartTrig(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 2650</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgDigEdgeStartTrig(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxCfgDigEdgeStartTrig(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgDigEdgeStartTrig(Pointer taskHandle, Pointer triggerSource, int triggerEdge);
	/**
	 * Original signature : <code>int32 DAQmxCfgDigEdgeStartTrig(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 2650</i>
	 */
	public static native int dAQmxCfgDigEdgeStartTrig(Pointer taskHandle, byte triggerSource[], int triggerEdge);
	/**
	 * Original signature : <code>int32 DAQmxCfgAnlgEdgeStartTrig(TaskHandle, const char[], int32, float64)</code><br>
	 * <i>native declaration : line 2651</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgAnlgEdgeStartTrig(com.sun.jna.Pointer, byte[], int, double)} and {@link #dAQmxCfgAnlgEdgeStartTrig(com.sun.jna.Pointer, com.sun.jna.Pointer, int, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgAnlgEdgeStartTrig(Pointer taskHandle, Pointer triggerSource, int triggerSlope, double triggerLevel);
	/**
	 * Original signature : <code>int32 DAQmxCfgAnlgEdgeStartTrig(TaskHandle, const char[], int32, float64)</code><br>
	 * <i>native declaration : line 2651</i>
	 */
	public static native int dAQmxCfgAnlgEdgeStartTrig(Pointer taskHandle, byte triggerSource[], int triggerSlope, double triggerLevel);
	/**
	 * Original signature : <code>int32 DAQmxCfgAnlgWindowStartTrig(TaskHandle, const char[], int32, float64, float64)</code><br>
	 * <i>native declaration : line 2652</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgAnlgWindowStartTrig(com.sun.jna.Pointer, byte[], int, double, double)} and {@link #dAQmxCfgAnlgWindowStartTrig(com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgAnlgWindowStartTrig(Pointer taskHandle, Pointer triggerSource, int triggerWhen, double windowTop, double windowBottom);
	/**
	 * Original signature : <code>int32 DAQmxCfgAnlgWindowStartTrig(TaskHandle, const char[], int32, float64, float64)</code><br>
	 * <i>native declaration : line 2652</i>
	 */
	public static native int dAQmxCfgAnlgWindowStartTrig(Pointer taskHandle, byte triggerSource[], int triggerWhen, double windowTop, double windowBottom);
	/**
	 * Original signature : <code>int32 DAQmxCfgDigPatternStartTrig(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2653</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgDigPatternStartTrig(com.sun.jna.Pointer, byte[], byte[], int)} and {@link #dAQmxCfgDigPatternStartTrig(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgDigPatternStartTrig(Pointer taskHandle, Pointer triggerSource, Pointer triggerPattern, int triggerWhen);
	/**
	 * Original signature : <code>int32 DAQmxCfgDigPatternStartTrig(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2653</i>
	 */
	public static native int dAQmxCfgDigPatternStartTrig(Pointer taskHandle, byte triggerSource[], byte triggerPattern[], int triggerWhen);
	/**
	 * Original signature : <code>int32 DAQmxDisableRefTrig(TaskHandle)</code><br>
	 * <i>native declaration : line 2655</i>
	 */
	public static native int dAQmxDisableRefTrig(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxCfgDigEdgeRefTrig(TaskHandle, const char[], int32, uInt32)</code><br>
	 * <i>native declaration : line 2656</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgDigEdgeRefTrig(com.sun.jna.Pointer, byte[], int, com.sun.jna.NativeLong)} and {@link #dAQmxCfgDigEdgeRefTrig(com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgDigEdgeRefTrig(Pointer taskHandle, Pointer triggerSource, int triggerEdge, NativeLong pretriggerSamples);
	/**
	 * Original signature : <code>int32 DAQmxCfgDigEdgeRefTrig(TaskHandle, const char[], int32, uInt32)</code><br>
	 * <i>native declaration : line 2656</i>
	 */
	public static native int dAQmxCfgDigEdgeRefTrig(Pointer taskHandle, byte triggerSource[], int triggerEdge, NativeLong pretriggerSamples);
	/**
	 * Original signature : <code>int32 DAQmxCfgAnlgEdgeRefTrig(TaskHandle, const char[], int32, float64, uInt32)</code><br>
	 * <i>native declaration : line 2657</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgAnlgEdgeRefTrig(com.sun.jna.Pointer, byte[], int, double, com.sun.jna.NativeLong)} and {@link #dAQmxCfgAnlgEdgeRefTrig(com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgAnlgEdgeRefTrig(Pointer taskHandle, Pointer triggerSource, int triggerSlope, double triggerLevel, NativeLong pretriggerSamples);
	/**
	 * Original signature : <code>int32 DAQmxCfgAnlgEdgeRefTrig(TaskHandle, const char[], int32, float64, uInt32)</code><br>
	 * <i>native declaration : line 2657</i>
	 */
	public static native int dAQmxCfgAnlgEdgeRefTrig(Pointer taskHandle, byte triggerSource[], int triggerSlope, double triggerLevel, NativeLong pretriggerSamples);
	/**
	 * Original signature : <code>int32 DAQmxCfgAnlgWindowRefTrig(TaskHandle, const char[], int32, float64, float64, uInt32)</code><br>
	 * <i>native declaration : line 2658</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgAnlgWindowRefTrig(com.sun.jna.Pointer, byte[], int, double, double, com.sun.jna.NativeLong)} and {@link #dAQmxCfgAnlgWindowRefTrig(com.sun.jna.Pointer, com.sun.jna.Pointer, int, double, double, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgAnlgWindowRefTrig(Pointer taskHandle, Pointer triggerSource, int triggerWhen, double windowTop, double windowBottom, NativeLong pretriggerSamples);
	/**
	 * Original signature : <code>int32 DAQmxCfgAnlgWindowRefTrig(TaskHandle, const char[], int32, float64, float64, uInt32)</code><br>
	 * <i>native declaration : line 2658</i>
	 */
	public static native int dAQmxCfgAnlgWindowRefTrig(Pointer taskHandle, byte triggerSource[], int triggerWhen, double windowTop, double windowBottom, NativeLong pretriggerSamples);
	/**
	 * Original signature : <code>int32 DAQmxCfgDigPatternRefTrig(TaskHandle, const char[], const char[], int32, uInt32)</code><br>
	 * <i>native declaration : line 2659</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgDigPatternRefTrig(com.sun.jna.Pointer, byte[], byte[], int, com.sun.jna.NativeLong)} and {@link #dAQmxCfgDigPatternRefTrig(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgDigPatternRefTrig(Pointer taskHandle, Pointer triggerSource, Pointer triggerPattern, int triggerWhen, NativeLong pretriggerSamples);
	/**
	 * Original signature : <code>int32 DAQmxCfgDigPatternRefTrig(TaskHandle, const char[], const char[], int32, uInt32)</code><br>
	 * <i>native declaration : line 2659</i>
	 */
	public static native int dAQmxCfgDigPatternRefTrig(Pointer taskHandle, byte triggerSource[], byte triggerPattern[], int triggerWhen, NativeLong pretriggerSamples);
	/**
	 * Original signature : <code>int32 DAQmxDisableAdvTrig(TaskHandle)</code><br>
	 * <i>native declaration : line 2661</i>
	 */
	public static native int dAQmxDisableAdvTrig(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxCfgDigEdgeAdvTrig(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 2662</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgDigEdgeAdvTrig(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxCfgDigEdgeAdvTrig(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgDigEdgeAdvTrig(Pointer taskHandle, Pointer triggerSource, int triggerEdge);
	/**
	 * Original signature : <code>int32 DAQmxCfgDigEdgeAdvTrig(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 2662</i>
	 */
	public static native int dAQmxCfgDigEdgeAdvTrig(Pointer taskHandle, byte triggerSource[], int triggerEdge);
	/**
	 * Original signature : <code>int32 DAQmxGetTrigAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 2664</i>
	 */
	public static native int dAQmxGetTrigAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetTrigAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 2665</i>
	 */
	public static native int dAQmxSetTrigAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetTrigAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2666</i>
	 */
	public static native int dAQmxResetTrigAttribute(Pointer taskHandle, int attribute);
	/**
	 * Original signature : <code>int32 DAQmxSendSoftwareTrigger(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2668</i>
	 */
	public static native int dAQmxSendSoftwareTrigger(Pointer taskHandle, int triggerID);
	/**
	 * Original signature : <code>int32 DAQmxReadAnalogF64(TaskHandle, int32, float64, bool32, float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2676</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadAnalogF64(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadAnalogF64(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadAnalogF64(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, DoubleByReference readArray, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadAnalogF64(TaskHandle, int32, float64, bool32, float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2676</i>
	 */
	public static native int dAQmxReadAnalogF64(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, DoubleBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadAnalogScalarF64(TaskHandle, float64, float64*, bool32*)</code><br>
	 * <i>native declaration : line 2677</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadAnalogScalarF64(com.sun.jna.Pointer, double, java.nio.DoubleBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadAnalogScalarF64(com.sun.jna.Pointer, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadAnalogScalarF64(Pointer taskHandle, double timeout, DoubleByReference value, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadAnalogScalarF64(TaskHandle, float64, float64*, bool32*)</code><br>
	 * <i>native declaration : line 2677</i>
	 */
	public static native int dAQmxReadAnalogScalarF64(Pointer taskHandle, double timeout, DoubleBuffer value, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadBinaryI16(TaskHandle, int32, float64, bool32, int16[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2679</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadBinaryI16(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, java.nio.ShortBuffer, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadBinaryI16(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.ShortByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadBinaryI16(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, ShortByReference readArray, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadBinaryI16(TaskHandle, int32, float64, bool32, int16[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2679</i>
	 */
	public static native int dAQmxReadBinaryI16(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, ShortBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadBinaryU16(TaskHandle, int32, float64, bool32, uInt16[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2681</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadBinaryU16(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, java.nio.ShortBuffer, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadBinaryU16(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.ShortByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadBinaryU16(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, ShortByReference readArray, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadBinaryU16(TaskHandle, int32, float64, bool32, uInt16[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2681</i>
	 */
	public static native int dAQmxReadBinaryU16(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, ShortBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadBinaryI32(TaskHandle, int32, float64, bool32, int32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2683</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadBinaryI32(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadBinaryI32(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadBinaryI32(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, IntByReference readArray, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadBinaryI32(TaskHandle, int32, float64, bool32, int32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2683</i>
	 */
	public static native int dAQmxReadBinaryI32(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, IntBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadBinaryU32(TaskHandle, int32, float64, bool32, uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2685</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadBinaryU32(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadBinaryU32(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadBinaryU32(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, NativeLongByReference readArray, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadBinaryU32(TaskHandle, int32, float64, bool32, uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2685</i>
	 */
	public static native int dAQmxReadBinaryU32(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, NativeLongByReference readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadDigitalU8(TaskHandle, int32, float64, bool32, uInt8[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2687</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadDigitalU8(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, java.nio.ByteBuffer, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadDigitalU8(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadDigitalU8(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, Pointer readArray, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadDigitalU8(TaskHandle, int32, float64, bool32, uInt8[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2687</i>
	 */
	public static native int dAQmxReadDigitalU8(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, ByteBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadDigitalU16(TaskHandle, int32, float64, bool32, uInt16[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2688</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadDigitalU16(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, java.nio.ShortBuffer, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadDigitalU16(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.ShortByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadDigitalU16(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, ShortByReference readArray, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadDigitalU16(TaskHandle, int32, float64, bool32, uInt16[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2688</i>
	 */
	public static native int dAQmxReadDigitalU16(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, ShortBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadDigitalU32(TaskHandle, int32, float64, bool32, uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2689</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadDigitalU32(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadDigitalU32(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadDigitalU32(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, NativeLongByReference readArray, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadDigitalU32(TaskHandle, int32, float64, bool32, uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2689</i>
	 */
	public static native int dAQmxReadDigitalU32(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, NativeLongByReference readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadDigitalScalarU32(TaskHandle, float64, uInt32*, bool32*)</code><br>
	 * <i>native declaration : line 2690</i>
	 */
	public static native int dAQmxReadDigitalScalarU32(Pointer taskHandle, double timeout, NativeLongByReference value, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadDigitalLines(TaskHandle, int32, float64, bool32, uInt8[], uInt32, int32*, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2691</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadDigitalLines(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, java.nio.ByteBuffer, com.sun.jna.NativeLong, java.nio.IntBuffer, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadDigitalLines(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadDigitalLines(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, Pointer readArray, NativeLong arraySizeInBytes, IntByReference sampsPerChanRead, IntByReference numBytesPerSamp, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadDigitalLines(TaskHandle, int32, float64, bool32, uInt8[], uInt32, int32*, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2691</i>
	 */
	public static native int dAQmxReadDigitalLines(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, ByteBuffer readArray, NativeLong arraySizeInBytes, IntBuffer sampsPerChanRead, IntBuffer numBytesPerSamp, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCounterF64(TaskHandle, int32, float64, float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2693</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadCounterF64(com.sun.jna.Pointer, int, double, java.nio.DoubleBuffer, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadCounterF64(com.sun.jna.Pointer, int, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadCounterF64(Pointer taskHandle, int numSampsPerChan, double timeout, DoubleByReference readArray, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCounterF64(TaskHandle, int32, float64, float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2693</i>
	 */
	public static native int dAQmxReadCounterF64(Pointer taskHandle, int numSampsPerChan, double timeout, DoubleBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCounterU32(TaskHandle, int32, float64, uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2694</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadCounterU32(com.sun.jna.Pointer, int, double, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadCounterU32(com.sun.jna.Pointer, int, double, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadCounterU32(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLongByReference readArray, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCounterU32(TaskHandle, int32, float64, uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2694</i>
	 */
	public static native int dAQmxReadCounterU32(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLongByReference readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCounterF64Ex(TaskHandle, int32, float64, bool32, float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2695</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadCounterF64Ex(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadCounterF64Ex(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadCounterF64Ex(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, DoubleByReference readArray, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCounterF64Ex(TaskHandle, int32, float64, bool32, float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2695</i>
	 */
	public static native int dAQmxReadCounterF64Ex(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, DoubleBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCounterU32Ex(TaskHandle, int32, float64, bool32, uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2696</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadCounterU32Ex(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadCounterU32Ex(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadCounterU32Ex(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, NativeLongByReference readArray, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCounterU32Ex(TaskHandle, int32, float64, bool32, uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2696</i>
	 */
	public static native int dAQmxReadCounterU32Ex(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, NativeLongByReference readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCounterScalarF64(TaskHandle, float64, float64*, bool32*)</code><br>
	 * <i>native declaration : line 2697</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadCounterScalarF64(com.sun.jna.Pointer, double, java.nio.DoubleBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadCounterScalarF64(com.sun.jna.Pointer, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadCounterScalarF64(Pointer taskHandle, double timeout, DoubleByReference value, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCounterScalarF64(TaskHandle, float64, float64*, bool32*)</code><br>
	 * <i>native declaration : line 2697</i>
	 */
	public static native int dAQmxReadCounterScalarF64(Pointer taskHandle, double timeout, DoubleBuffer value, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCounterScalarU32(TaskHandle, float64, uInt32*, bool32*)</code><br>
	 * <i>native declaration : line 2698</i>
	 */
	public static native int dAQmxReadCounterScalarU32(Pointer taskHandle, double timeout, NativeLongByReference value, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCtrFreq(TaskHandle, int32, float64, bool32, float64[], float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2702</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadCtrFreq(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, java.nio.DoubleBuffer, java.nio.DoubleBuffer, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadCtrFreq(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadCtrFreq(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong interleaved, DoubleByReference readArrayFrequency, DoubleByReference readArrayDutyCycle, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCtrFreq(TaskHandle, int32, float64, bool32, float64[], float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2702</i>
	 */
	public static native int dAQmxReadCtrFreq(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong interleaved, DoubleBuffer readArrayFrequency, DoubleBuffer readArrayDutyCycle, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCtrTime(TaskHandle, int32, float64, bool32, float64[], float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2703</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadCtrTime(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, java.nio.DoubleBuffer, java.nio.DoubleBuffer, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadCtrTime(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadCtrTime(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong interleaved, DoubleByReference readArrayHighTime, DoubleByReference readArrayLowTime, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCtrTime(TaskHandle, int32, float64, bool32, float64[], float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2703</i>
	 */
	public static native int dAQmxReadCtrTime(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong interleaved, DoubleBuffer readArrayHighTime, DoubleBuffer readArrayLowTime, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCtrTicks(TaskHandle, int32, float64, bool32, uInt32[], uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2704</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadCtrTicks(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadCtrTicks(com.sun.jna.Pointer, int, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadCtrTicks(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong interleaved, NativeLongByReference readArrayHighTicks, NativeLongByReference readArrayLowTicks, NativeLong arraySizeInSamps, IntByReference sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCtrTicks(TaskHandle, int32, float64, bool32, uInt32[], uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2704</i>
	 */
	public static native int dAQmxReadCtrTicks(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong interleaved, NativeLongByReference readArrayHighTicks, NativeLongByReference readArrayLowTicks, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCtrFreqScalar(TaskHandle, float64, float64*, float64*, bool32*)</code><br>
	 * <i>native declaration : line 2706</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadCtrFreqScalar(com.sun.jna.Pointer, double, java.nio.DoubleBuffer, java.nio.DoubleBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadCtrFreqScalar(com.sun.jna.Pointer, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadCtrFreqScalar(Pointer taskHandle, double timeout, DoubleByReference frequency, DoubleByReference dutyCycle, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCtrFreqScalar(TaskHandle, float64, float64*, float64*, bool32*)</code><br>
	 * <i>native declaration : line 2706</i>
	 */
	public static native int dAQmxReadCtrFreqScalar(Pointer taskHandle, double timeout, DoubleBuffer frequency, DoubleBuffer dutyCycle, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCtrTimeScalar(TaskHandle, float64, float64*, float64*, bool32*)</code><br>
	 * <i>native declaration : line 2707</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadCtrTimeScalar(com.sun.jna.Pointer, double, java.nio.DoubleBuffer, java.nio.DoubleBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadCtrTimeScalar(com.sun.jna.Pointer, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadCtrTimeScalar(Pointer taskHandle, double timeout, DoubleByReference highTime, DoubleByReference lowTime, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCtrTimeScalar(TaskHandle, float64, float64*, float64*, bool32*)</code><br>
	 * <i>native declaration : line 2707</i>
	 */
	public static native int dAQmxReadCtrTimeScalar(Pointer taskHandle, double timeout, DoubleBuffer highTime, DoubleBuffer lowTime, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCtrTicksScalar(TaskHandle, float64, uInt32*, uInt32*, bool32*)</code><br>
	 * <i>native declaration : line 2708</i>
	 */
	public static native int dAQmxReadCtrTicksScalar(Pointer taskHandle, double timeout, NativeLongByReference highTicks, NativeLongByReference lowTicks, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadRaw(TaskHandle, int32, float64, void*, uInt32, int32*, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2712</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReadRaw(com.sun.jna.Pointer, int, double, com.sun.jna.Pointer, com.sun.jna.NativeLong, java.nio.IntBuffer, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxReadRaw(com.sun.jna.Pointer, int, double, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxReadRaw(Pointer taskHandle, int numSampsPerChan, double timeout, Pointer readArray, NativeLong arraySizeInBytes, IntByReference sampsRead, IntByReference numBytesPerSamp, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadRaw(TaskHandle, int32, float64, void*, uInt32, int32*, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2712</i>
	 */
	public static native int dAQmxReadRaw(Pointer taskHandle, int numSampsPerChan, double timeout, Pointer readArray, NativeLong arraySizeInBytes, IntBuffer sampsRead, IntBuffer numBytesPerSamp, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxGetNthTaskReadChannel(TaskHandle, uInt32, char[], int32)</code><br>
	 * <i>native declaration : line 2714</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetNthTaskReadChannel(com.sun.jna.Pointer, com.sun.jna.NativeLong, java.nio.ByteBuffer, int)} and {@link #dAQmxGetNthTaskReadChannel(com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetNthTaskReadChannel(Pointer taskHandle, NativeLong index, Pointer buffer, int bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetNthTaskReadChannel(TaskHandle, uInt32, char[], int32)</code><br>
	 * <i>native declaration : line 2714</i>
	 */
	public static native int dAQmxGetNthTaskReadChannel(Pointer taskHandle, NativeLong index, ByteBuffer buffer, int bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetReadAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 2716</i>
	 */
	public static native int dAQmxGetReadAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetReadAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 2717</i>
	 */
	public static native int dAQmxSetReadAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetReadAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2718</i>
	 */
	public static native int dAQmxResetReadAttribute(Pointer taskHandle, int attribute);
	/**
	 * Original signature : <code>int32 DAQmxConfigureLogging(TaskHandle, const char[], int32, const char[], int32)</code><br>
	 * <i>native declaration : line 2720</i><br>
	 * @deprecated use the safer methods {@link #dAQmxConfigureLogging(com.sun.jna.Pointer, byte[], int, byte[], int)} and {@link #dAQmxConfigureLogging(com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxConfigureLogging(Pointer taskHandle, Pointer filePath, int loggingMode, Pointer groupName, int operation);
	/**
	 * Original signature : <code>int32 DAQmxConfigureLogging(TaskHandle, const char[], int32, const char[], int32)</code><br>
	 * <i>native declaration : line 2720</i>
	 */
	public static native int dAQmxConfigureLogging(Pointer taskHandle, byte filePath[], int loggingMode, byte groupName[], int operation);
	/**
	 * Original signature : <code>int32 DAQmxStartNewFile(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 2721</i><br>
	 * @deprecated use the safer methods {@link #dAQmxStartNewFile(com.sun.jna.Pointer, byte[])} and {@link #dAQmxStartNewFile(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxStartNewFile(Pointer taskHandle, Pointer filePath);
	/**
	 * Original signature : <code>int32 DAQmxStartNewFile(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 2721</i>
	 */
	public static native int dAQmxStartNewFile(Pointer taskHandle, byte filePath[]);
	/**
	 * Original signature : <code>int32 DAQmxWriteAnalogF64(TaskHandle, int32, bool32, float64, bool32, const float64[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2729</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteAnalogF64(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, java.nio.DoubleBuffer, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxWriteAnalogF64(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteAnalogF64(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, DoubleByReference writeArray, IntByReference sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteAnalogF64(TaskHandle, int32, bool32, float64, bool32, const float64[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2729</i>
	 */
	public static native int dAQmxWriteAnalogF64(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, DoubleBuffer writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteAnalogScalarF64(TaskHandle, bool32, float64, float64, bool32*)</code><br>
	 * <i>native declaration : line 2730</i>
	 */
	public static native int dAQmxWriteAnalogScalarF64(Pointer taskHandle, NativeLong autoStart, double timeout, double value, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteBinaryI16(TaskHandle, int32, bool32, float64, bool32, const int16[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2732</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteBinaryI16(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, short[], java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxWriteBinaryI16(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.ptr.ShortByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteBinaryI16(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, ShortByReference writeArray, IntByReference sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteBinaryI16(TaskHandle, int32, bool32, float64, bool32, const int16[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2732</i>
	 */
	public static native int dAQmxWriteBinaryI16(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, short writeArray[], IntBuffer sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteBinaryU16(TaskHandle, int32, bool32, float64, bool32, const uInt16[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2733</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteBinaryU16(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, java.nio.ShortBuffer, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxWriteBinaryU16(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.ptr.ShortByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteBinaryU16(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, ShortByReference writeArray, IntByReference sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteBinaryU16(TaskHandle, int32, bool32, float64, bool32, const uInt16[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2733</i>
	 */
	public static native int dAQmxWriteBinaryU16(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, ShortBuffer writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteBinaryI32(TaskHandle, int32, bool32, float64, bool32, const int32[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2734</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteBinaryI32(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, int[], java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxWriteBinaryI32(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteBinaryI32(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, IntByReference writeArray, IntByReference sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteBinaryI32(TaskHandle, int32, bool32, float64, bool32, const int32[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2734</i>
	 */
	public static native int dAQmxWriteBinaryI32(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, int writeArray[], IntBuffer sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteBinaryU32(TaskHandle, int32, bool32, float64, bool32, const uInt32[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2735</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteBinaryU32(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxWriteBinaryU32(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteBinaryU32(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, NativeLongByReference writeArray, IntByReference sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteBinaryU32(TaskHandle, int32, bool32, float64, bool32, const uInt32[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2735</i>
	 */
	public static native int dAQmxWriteBinaryU32(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, NativeLongByReference writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalU8(TaskHandle, int32, bool32, float64, bool32, const uInt8[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2737</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteDigitalU8(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, java.nio.ByteBuffer, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxWriteDigitalU8(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteDigitalU8(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, Pointer writeArray, IntByReference sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalU8(TaskHandle, int32, bool32, float64, bool32, const uInt8[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2737</i>
	 */
	public static native int dAQmxWriteDigitalU8(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, ByteBuffer writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalU16(TaskHandle, int32, bool32, float64, bool32, const uInt16[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2738</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteDigitalU16(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, java.nio.ShortBuffer, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxWriteDigitalU16(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.ptr.ShortByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteDigitalU16(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, ShortByReference writeArray, IntByReference sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalU16(TaskHandle, int32, bool32, float64, bool32, const uInt16[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2738</i>
	 */
	public static native int dAQmxWriteDigitalU16(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, ShortBuffer writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalU32(TaskHandle, int32, bool32, float64, bool32, const uInt32[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2739</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteDigitalU32(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxWriteDigitalU32(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteDigitalU32(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, NativeLongByReference writeArray, IntByReference sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalU32(TaskHandle, int32, bool32, float64, bool32, const uInt32[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2739</i>
	 */
	public static native int dAQmxWriteDigitalU32(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, NativeLongByReference writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalScalarU32(TaskHandle, bool32, float64, uInt32, bool32*)</code><br>
	 * <i>native declaration : line 2740</i>
	 */
	public static native int dAQmxWriteDigitalScalarU32(Pointer taskHandle, NativeLong autoStart, double timeout, NativeLong value, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalLines(TaskHandle, int32, bool32, float64, bool32, const uInt8[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2741</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteDigitalLines(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, java.nio.ByteBuffer, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxWriteDigitalLines(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteDigitalLines(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, Pointer writeArray, IntByReference sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalLines(TaskHandle, int32, bool32, float64, bool32, const uInt8[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2741</i>
	 */
	public static native int dAQmxWriteDigitalLines(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, ByteBuffer writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteCtrFreq(TaskHandle, int32, bool32, float64, bool32, const float64[], const float64[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2743</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteCtrFreq(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxWriteCtrFreq(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteCtrFreq(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, DoubleByReference frequency, DoubleByReference dutyCycle, IntByReference numSampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteCtrFreq(TaskHandle, int32, bool32, float64, bool32, const float64[], const float64[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2743</i>
	 */
	public static native int dAQmxWriteCtrFreq(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, DoubleBuffer frequency, DoubleBuffer dutyCycle, IntBuffer numSampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteCtrFreqScalar(TaskHandle, bool32, float64, float64, float64, bool32*)</code><br>
	 * <i>native declaration : line 2744</i>
	 */
	public static native int dAQmxWriteCtrFreqScalar(Pointer taskHandle, NativeLong autoStart, double timeout, double frequency, double dutyCycle, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteCtrTime(TaskHandle, int32, bool32, float64, bool32, const float64[], const float64[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2745</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteCtrTime(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxWriteCtrTime(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteCtrTime(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, DoubleByReference highTime, DoubleByReference lowTime, IntByReference numSampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteCtrTime(TaskHandle, int32, bool32, float64, bool32, const float64[], const float64[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2745</i>
	 */
	public static native int dAQmxWriteCtrTime(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, DoubleBuffer highTime, DoubleBuffer lowTime, IntBuffer numSampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteCtrTimeScalar(TaskHandle, bool32, float64, float64, float64, bool32*)</code><br>
	 * <i>native declaration : line 2746</i>
	 */
	public static native int dAQmxWriteCtrTimeScalar(Pointer taskHandle, NativeLong autoStart, double timeout, double highTime, double lowTime, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteCtrTicks(TaskHandle, int32, bool32, float64, bool32, const uInt32[], const uInt32[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2747</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteCtrTicks(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxWriteCtrTicks(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteCtrTicks(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, NativeLongByReference highTicks, NativeLongByReference lowTicks, IntByReference numSampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteCtrTicks(TaskHandle, int32, bool32, float64, bool32, const uInt32[], const uInt32[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2747</i>
	 */
	public static native int dAQmxWriteCtrTicks(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, NativeLongByReference highTicks, NativeLongByReference lowTicks, IntBuffer numSampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteCtrTicksScalar(TaskHandle, bool32, float64, uInt32, uInt32, bool32*)</code><br>
	 * <i>native declaration : line 2748</i>
	 */
	public static native int dAQmxWriteCtrTicksScalar(Pointer taskHandle, NativeLong autoStart, double timeout, NativeLong highTicks, NativeLong lowTicks, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteRaw(TaskHandle, int32, bool32, float64, const void*, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2750</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteRaw(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.Pointer, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxWriteRaw(com.sun.jna.Pointer, int, com.sun.jna.NativeLong, double, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteRaw(Pointer taskHandle, int numSamps, NativeLong autoStart, double timeout, Pointer writeArray, IntByReference sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteRaw(TaskHandle, int32, bool32, float64, const void*, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2750</i>
	 */
	public static native int dAQmxWriteRaw(Pointer taskHandle, int numSamps, NativeLong autoStart, double timeout, Pointer writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxGetWriteAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 2752</i>
	 */
	public static native int dAQmxGetWriteAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetWriteAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 2753</i>
	 */
	public static native int dAQmxSetWriteAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetWriteAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2754</i>
	 */
	public static native int dAQmxResetWriteAttribute(Pointer taskHandle, int attribute);
	/**
	 * For possible values for parameter signalID see value set Signal in Values section above.<br>
	 * Original signature : <code>int32 DAQmxExportSignal(TaskHandle, int32, const char[])</code><br>
	 * <i>native declaration : line 2765</i><br>
	 * @deprecated use the safer methods {@link #dAQmxExportSignal(com.sun.jna.Pointer, int, byte[])} and {@link #dAQmxExportSignal(com.sun.jna.Pointer, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxExportSignal(Pointer taskHandle, int signalID, Pointer outputTerminal);
	/**
	 * For possible values for parameter signalID see value set Signal in Values section above.<br>
	 * Original signature : <code>int32 DAQmxExportSignal(TaskHandle, int32, const char[])</code><br>
	 * <i>native declaration : line 2765</i>
	 */
	public static native int dAQmxExportSignal(Pointer taskHandle, int signalID, byte outputTerminal[]);
	/**
	 * Original signature : <code>int32 DAQmxGetExportedSignalAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 2767</i>
	 */
	public static native int dAQmxGetExportedSignalAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSignalAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 2768</i>
	 */
	public static native int dAQmxSetExportedSignalAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSignalAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2769</i>
	 */
	public static native int dAQmxResetExportedSignalAttribute(Pointer taskHandle, int attribute);
	/**
	 * Original signature : <code>int32 DAQmxCreateLinScale(const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2777</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateLinScale(byte[], double, double, int, byte[])} and {@link #dAQmxCreateLinScale(com.sun.jna.Pointer, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateLinScale(Pointer name, double slope, double yIntercept, int preScaledUnits, Pointer scaledUnits);
	/**
	 * Original signature : <code>int32 DAQmxCreateLinScale(const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2777</i>
	 */
	public static native int dAQmxCreateLinScale(byte name[], double slope, double yIntercept, int preScaledUnits, byte scaledUnits[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateMapScale(const char[], float64, float64, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2778</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateMapScale(byte[], double, double, double, double, int, byte[])} and {@link #dAQmxCreateMapScale(com.sun.jna.Pointer, double, double, double, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateMapScale(Pointer name, double prescaledMin, double prescaledMax, double scaledMin, double scaledMax, int preScaledUnits, Pointer scaledUnits);
	/**
	 * Original signature : <code>int32 DAQmxCreateMapScale(const char[], float64, float64, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2778</i>
	 */
	public static native int dAQmxCreateMapScale(byte name[], double prescaledMin, double prescaledMax, double scaledMin, double scaledMax, int preScaledUnits, byte scaledUnits[]);
	/**
	 * Original signature : <code>int32 DAQmxCreatePolynomialScale(const char[], const float64[], uInt32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2779</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreatePolynomialScale(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong, int, byte[])} and {@link #dAQmxCreatePolynomialScale(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreatePolynomialScale(Pointer name, DoubleByReference forwardCoeffs, NativeLong numForwardCoeffsIn, DoubleByReference reverseCoeffs, NativeLong numReverseCoeffsIn, int preScaledUnits, Pointer scaledUnits);
	/**
	 * Original signature : <code>int32 DAQmxCreatePolynomialScale(const char[], const float64[], uInt32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2779</i>
	 */
	public static native int dAQmxCreatePolynomialScale(byte name[], DoubleBuffer forwardCoeffs, NativeLong numForwardCoeffsIn, DoubleBuffer reverseCoeffs, NativeLong numReverseCoeffsIn, int preScaledUnits, byte scaledUnits[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateTableScale(const char[], const float64[], uInt32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2780</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateTableScale(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong, int, byte[])} and {@link #dAQmxCreateTableScale(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateTableScale(Pointer name, DoubleByReference prescaledVals, NativeLong numPrescaledValsIn, DoubleByReference scaledVals, NativeLong numScaledValsIn, int preScaledUnits, Pointer scaledUnits);
	/**
	 * Original signature : <code>int32 DAQmxCreateTableScale(const char[], const float64[], uInt32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2780</i>
	 */
	public static native int dAQmxCreateTableScale(byte name[], DoubleBuffer prescaledVals, NativeLong numPrescaledValsIn, DoubleBuffer scaledVals, NativeLong numScaledValsIn, int preScaledUnits, byte scaledUnits[]);
	/**
	 * Original signature : <code>int32 DAQmxCalculateReversePolyCoeff(const float64[], uInt32, float64, float64, int32, int32, float64[])</code><br>
	 * <i>native declaration : line 2781</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCalculateReversePolyCoeff(java.nio.DoubleBuffer, com.sun.jna.NativeLong, double, double, int, int, java.nio.DoubleBuffer)} and {@link #dAQmxCalculateReversePolyCoeff(com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong, double, double, int, int, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxCalculateReversePolyCoeff(DoubleByReference forwardCoeffs, NativeLong numForwardCoeffsIn, double minValX, double maxValX, int numPointsToCompute, int reversePolyOrder, DoubleByReference reverseCoeffs);
	/**
	 * Original signature : <code>int32 DAQmxCalculateReversePolyCoeff(const float64[], uInt32, float64, float64, int32, int32, float64[])</code><br>
	 * <i>native declaration : line 2781</i>
	 */
	public static native int dAQmxCalculateReversePolyCoeff(DoubleBuffer forwardCoeffs, NativeLong numForwardCoeffsIn, double minValX, double maxValX, int numPointsToCompute, int reversePolyOrder, DoubleBuffer reverseCoeffs);
	/**
	 * Original signature : <code>int32 DAQmxGetScaleAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 2783</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScaleAttribute(byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #dAQmxGetScaleAttribute(com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScaleAttribute(Pointer scaleName, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetScaleAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 2783</i>
	 */
	public static native int dAQmxGetScaleAttribute(byte scaleName[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleAttribute(const char[], int32, null)</code><br>
	 * <i>native declaration : line 2784</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScaleAttribute(byte[], int, java.lang.Object)} and {@link #dAQmxSetScaleAttribute(com.sun.jna.Pointer, int, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScaleAttribute(Pointer scaleName, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleAttribute(const char[], int32, null)</code><br>
	 * <i>native declaration : line 2784</i>
	 */
	public static native int dAQmxSetScaleAttribute(byte scaleName[], int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxCfgInputBuffer(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 2792</i>
	 */
	public static native int dAQmxCfgInputBuffer(Pointer taskHandle, NativeLong numSampsPerChan);
	/**
	 * Original signature : <code>int32 DAQmxCfgOutputBuffer(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 2793</i>
	 */
	public static native int dAQmxCfgOutputBuffer(Pointer taskHandle, NativeLong numSampsPerChan);
	/**
	 * Original signature : <code>int32 DAQmxGetBufferAttribute(TaskHandle, int32, void*)</code><br>
	 * <i>native declaration : line 2795</i>
	 */
	public static native int dAQmxGetBufferAttribute(Pointer taskHandle, int attribute, Pointer value);
	/**
	 * Original signature : <code>int32 DAQmxSetBufferAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 2796</i>
	 */
	public static native int dAQmxSetBufferAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetBufferAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2797</i>
	 */
	public static native int dAQmxResetBufferAttribute(Pointer taskHandle, int attribute);
	/**
	 * Original signature : <code>int32 DAQmxSwitchCreateScanList(const char[], TaskHandle*)</code><br>
	 * <i>native declaration : line 2807</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchCreateScanList(byte[], com.sun.jna.ptr.PointerByReference)} and {@link #dAQmxSwitchCreateScanList(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchCreateScanList(Pointer scanList, PointerByReference taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxSwitchCreateScanList(const char[], TaskHandle*)</code><br>
	 * <i>native declaration : line 2807</i>
	 */
	public static native int dAQmxSwitchCreateScanList(byte scanList[], PointerByReference taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxSwitchConnect(const char[], const char[], bool32)</code><br>
	 * <i>native declaration : line 2809</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchConnect(byte[], byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSwitchConnect(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchConnect(Pointer switchChannel1, Pointer switchChannel2, NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchConnect(const char[], const char[], bool32)</code><br>
	 * <i>native declaration : line 2809</i>
	 */
	public static native int dAQmxSwitchConnect(byte switchChannel1[], byte switchChannel2[], NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchConnectMulti(const char[], bool32)</code><br>
	 * <i>native declaration : line 2810</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchConnectMulti(byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSwitchConnectMulti(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchConnectMulti(Pointer connectionList, NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchConnectMulti(const char[], bool32)</code><br>
	 * <i>native declaration : line 2810</i>
	 */
	public static native int dAQmxSwitchConnectMulti(byte connectionList[], NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchDisconnect(const char[], const char[], bool32)</code><br>
	 * <i>native declaration : line 2811</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchDisconnect(byte[], byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSwitchDisconnect(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchDisconnect(Pointer switchChannel1, Pointer switchChannel2, NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchDisconnect(const char[], const char[], bool32)</code><br>
	 * <i>native declaration : line 2811</i>
	 */
	public static native int dAQmxSwitchDisconnect(byte switchChannel1[], byte switchChannel2[], NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchDisconnectMulti(const char[], bool32)</code><br>
	 * <i>native declaration : line 2812</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchDisconnectMulti(byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSwitchDisconnectMulti(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchDisconnectMulti(Pointer connectionList, NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchDisconnectMulti(const char[], bool32)</code><br>
	 * <i>native declaration : line 2812</i>
	 */
	public static native int dAQmxSwitchDisconnectMulti(byte connectionList[], NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchDisconnectAll(const char[], bool32)</code><br>
	 * <i>native declaration : line 2813</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchDisconnectAll(byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSwitchDisconnectAll(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchDisconnectAll(Pointer deviceName, NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchDisconnectAll(const char[], bool32)</code><br>
	 * <i>native declaration : line 2813</i>
	 */
	public static native int dAQmxSwitchDisconnectAll(byte deviceName[], NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchSetTopologyAndReset(const char[], const char[])</code><br>
	 * <i>native declaration : line 3002</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchSetTopologyAndReset(byte[], byte[])} and {@link #dAQmxSwitchSetTopologyAndReset(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchSetTopologyAndReset(Pointer deviceName, Pointer newTopology);
	/**
	 * Original signature : <code>int32 DAQmxSwitchSetTopologyAndReset(const char[], const char[])</code><br>
	 * <i>native declaration : line 3002</i>
	 */
	public static native int dAQmxSwitchSetTopologyAndReset(byte deviceName[], byte newTopology[]);
	/**
	 * For possible values of the output parameter pathStatus see value set SwitchPathType in Values section above.<br>
	 * Original signature : <code>int32 DAQmxSwitchFindPath(const char[], const char[], char[], uInt32, int32*)</code><br>
	 * <i>native declaration : line 3005</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchFindPath(byte[], byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong, java.nio.IntBuffer)} and {@link #dAQmxSwitchFindPath(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchFindPath(Pointer switchChannel1, Pointer switchChannel2, Pointer path, NativeLong pathBufferSize, IntByReference pathStatus);
	/**
	 * For possible values of the output parameter pathStatus see value set SwitchPathType in Values section above.<br>
	 * Original signature : <code>int32 DAQmxSwitchFindPath(const char[], const char[], char[], uInt32, int32*)</code><br>
	 * <i>native declaration : line 3005</i>
	 */
	public static native int dAQmxSwitchFindPath(byte switchChannel1[], byte switchChannel2[], ByteBuffer path, NativeLong pathBufferSize, IntBuffer pathStatus);
	/**
	 * Original signature : <code>int32 DAQmxSwitchOpenRelays(const char[], bool32)</code><br>
	 * <i>native declaration : line 3007</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchOpenRelays(byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSwitchOpenRelays(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchOpenRelays(Pointer relayList, NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchOpenRelays(const char[], bool32)</code><br>
	 * <i>native declaration : line 3007</i>
	 */
	public static native int dAQmxSwitchOpenRelays(byte relayList[], NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchCloseRelays(const char[], bool32)</code><br>
	 * <i>native declaration : line 3008</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchCloseRelays(byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSwitchCloseRelays(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchCloseRelays(Pointer relayList, NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchCloseRelays(const char[], bool32)</code><br>
	 * <i>native declaration : line 3008</i>
	 */
	public static native int dAQmxSwitchCloseRelays(byte relayList[], NativeLong waitForSettling);
	/**
	 * Original signature : <code>int32 DAQmxSwitchGetSingleRelayCount(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3010</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchGetSingleRelayCount(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxSwitchGetSingleRelayCount(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchGetSingleRelayCount(Pointer relayName, NativeLongByReference count);
	/**
	 * Original signature : <code>int32 DAQmxSwitchGetSingleRelayCount(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3010</i>
	 */
	public static native int dAQmxSwitchGetSingleRelayCount(byte relayName[], NativeLongByReference count);
	/**
	 * Original signature : <code>int32 DAQmxSwitchGetMultiRelayCount(const char[], uInt32[], uInt32, uInt32*)</code><br>
	 * <i>native declaration : line 3011</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchGetMultiRelayCount(byte[], com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxSwitchGetMultiRelayCount(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchGetMultiRelayCount(Pointer relayList, NativeLongByReference count, NativeLong countArraySize, NativeLongByReference numRelayCountsRead);
	/**
	 * Original signature : <code>int32 DAQmxSwitchGetMultiRelayCount(const char[], uInt32[], uInt32, uInt32*)</code><br>
	 * <i>native declaration : line 3011</i>
	 */
	public static native int dAQmxSwitchGetMultiRelayCount(byte relayList[], NativeLongByReference count, NativeLong countArraySize, NativeLongByReference numRelayCountsRead);
	/**
	 * For possible values of the output parameter relayPos see value set RelayPos in Values section above.<br>
	 * Original signature : <code>int32 DAQmxSwitchGetSingleRelayPos(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3013</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchGetSingleRelayPos(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxSwitchGetSingleRelayPos(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchGetSingleRelayPos(Pointer relayName, NativeLongByReference relayPos);
	/**
	 * For possible values of the output parameter relayPos see value set RelayPos in Values section above.<br>
	 * Original signature : <code>int32 DAQmxSwitchGetSingleRelayPos(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3013</i>
	 */
	public static native int dAQmxSwitchGetSingleRelayPos(byte relayName[], NativeLongByReference relayPos);
	/**
	 * For possible values in the output array relayPos see value set RelayPos in Values section above.<br>
	 * Original signature : <code>int32 DAQmxSwitchGetMultiRelayPos(const char[], uInt32[], uInt32, uInt32*)</code><br>
	 * <i>native declaration : line 3015</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchGetMultiRelayPos(byte[], com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxSwitchGetMultiRelayPos(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchGetMultiRelayPos(Pointer relayList, NativeLongByReference relayPos, NativeLong relayPosArraySize, NativeLongByReference numRelayPossRead);
	/**
	 * For possible values in the output array relayPos see value set RelayPos in Values section above.<br>
	 * Original signature : <code>int32 DAQmxSwitchGetMultiRelayPos(const char[], uInt32[], uInt32, uInt32*)</code><br>
	 * <i>native declaration : line 3015</i>
	 */
	public static native int dAQmxSwitchGetMultiRelayPos(byte relayList[], NativeLongByReference relayPos, NativeLong relayPosArraySize, NativeLongByReference numRelayPossRead);
	/**
	 * Original signature : <code>int32 DAQmxSwitchWaitForSettling(const char[])</code><br>
	 * <i>native declaration : line 3017</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSwitchWaitForSettling(byte[])} and {@link #dAQmxSwitchWaitForSettling(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSwitchWaitForSettling(Pointer deviceName);
	/**
	 * Original signature : <code>int32 DAQmxSwitchWaitForSettling(const char[])</code><br>
	 * <i>native declaration : line 3017</i>
	 */
	public static native int dAQmxSwitchWaitForSettling(byte deviceName[]);
	/**
	 * Original signature : <code>int32 DAQmxGetSwitchChanAttribute(const char[], int32, void*)</code><br>
	 * <i>native declaration : line 3019</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanAttribute(byte[], int, com.sun.jna.Pointer)} and {@link #dAQmxGetSwitchChanAttribute(com.sun.jna.Pointer, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanAttribute(Pointer switchChannelName, int attribute, Pointer value);
	/**
	 * Original signature : <code>int32 DAQmxGetSwitchChanAttribute(const char[], int32, void*)</code><br>
	 * <i>native declaration : line 3019</i>
	 */
	public static native int dAQmxGetSwitchChanAttribute(byte switchChannelName[], int attribute, Pointer value);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchChanAttribute(const char[], int32, null)</code><br>
	 * <i>native declaration : line 3020</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetSwitchChanAttribute(byte[], int, java.lang.Object)} and {@link #dAQmxSetSwitchChanAttribute(com.sun.jna.Pointer, int, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetSwitchChanAttribute(Pointer switchChannelName, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchChanAttribute(const char[], int32, null)</code><br>
	 * <i>native declaration : line 3020</i>
	 */
	public static native int dAQmxSetSwitchChanAttribute(byte switchChannelName[], int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetSwitchDeviceAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3022</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchDeviceAttribute(byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #dAQmxGetSwitchDeviceAttribute(com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchDeviceAttribute(Pointer deviceName, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetSwitchDeviceAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3022</i>
	 */
	public static native int dAQmxGetSwitchDeviceAttribute(byte deviceName[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDeviceAttribute(const char[], int32, null)</code><br>
	 * <i>native declaration : line 3023</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetSwitchDeviceAttribute(byte[], int, java.lang.Object)} and {@link #dAQmxSetSwitchDeviceAttribute(com.sun.jna.Pointer, int, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetSwitchDeviceAttribute(Pointer deviceName, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDeviceAttribute(const char[], int32, null)</code><br>
	 * <i>native declaration : line 3023</i>
	 */
	public static native int dAQmxSetSwitchDeviceAttribute(byte deviceName[], int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetSwitchScanAttribute(TaskHandle, int32, void*)</code><br>
	 * <i>native declaration : line 3025</i>
	 */
	public static native int dAQmxGetSwitchScanAttribute(Pointer taskHandle, int attribute, Pointer value);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchScanAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 3026</i>
	 */
	public static native int dAQmxSetSwitchScanAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetSwitchScanAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 3027</i>
	 */
	public static native int dAQmxResetSwitchScanAttribute(Pointer taskHandle, int attribute);
	/**
	 * Original signature : <code>int32 DAQmxConnectTerms(const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 3036</i><br>
	 * @deprecated use the safer methods {@link #dAQmxConnectTerms(byte[], byte[], int)} and {@link #dAQmxConnectTerms(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxConnectTerms(Pointer sourceTerminal, Pointer destinationTerminal, int signalModifiers);
	/**
	 * Original signature : <code>int32 DAQmxConnectTerms(const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 3036</i>
	 */
	public static native int dAQmxConnectTerms(byte sourceTerminal[], byte destinationTerminal[], int signalModifiers);
	/**
	 * Original signature : <code>int32 DAQmxDisconnectTerms(const char[], const char[])</code><br>
	 * <i>native declaration : line 3037</i><br>
	 * @deprecated use the safer methods {@link #dAQmxDisconnectTerms(byte[], byte[])} and {@link #dAQmxDisconnectTerms(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxDisconnectTerms(Pointer sourceTerminal, Pointer destinationTerminal);
	/**
	 * Original signature : <code>int32 DAQmxDisconnectTerms(const char[], const char[])</code><br>
	 * <i>native declaration : line 3037</i>
	 */
	public static native int dAQmxDisconnectTerms(byte sourceTerminal[], byte destinationTerminal[]);
	/**
	 * Original signature : <code>int32 DAQmxTristateOutputTerm(const char[])</code><br>
	 * <i>native declaration : line 3038</i><br>
	 * @deprecated use the safer methods {@link #dAQmxTristateOutputTerm(byte[])} and {@link #dAQmxTristateOutputTerm(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxTristateOutputTerm(Pointer outputTerminal);
	/**
	 * Original signature : <code>int32 DAQmxTristateOutputTerm(const char[])</code><br>
	 * <i>native declaration : line 3038</i>
	 */
	public static native int dAQmxTristateOutputTerm(byte outputTerminal[]);
	/**
	 * Original signature : <code>int32 DAQmxResetDevice(const char[])</code><br>
	 * <i>native declaration : line 3046</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDevice(byte[])} and {@link #dAQmxResetDevice(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDevice(Pointer deviceName);
	/**
	 * Original signature : <code>int32 DAQmxResetDevice(const char[])</code><br>
	 * <i>native declaration : line 3046</i>
	 */
	public static native int dAQmxResetDevice(byte deviceName[]);
	/**
	 * Original signature : <code>int32 DAQmxSelfTestDevice(const char[])</code><br>
	 * <i>native declaration : line 3048</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSelfTestDevice(byte[])} and {@link #dAQmxSelfTestDevice(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSelfTestDevice(Pointer deviceName);
	/**
	 * Original signature : <code>int32 DAQmxSelfTestDevice(const char[])</code><br>
	 * <i>native declaration : line 3048</i>
	 */
	public static native int dAQmxSelfTestDevice(byte deviceName[]);
	/**
	 * Original signature : <code>int32 DAQmxGetDeviceAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3050</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDeviceAttribute(byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #dAQmxGetDeviceAttribute(com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDeviceAttribute(Pointer deviceName, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetDeviceAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3050</i>
	 */
	public static native int dAQmxGetDeviceAttribute(byte deviceName[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxCreateWatchdogTimerTask(const char[], const char[], TaskHandle*, float64, const char[], int32, null)</code><br>
	 * <i>native declaration : line 3057</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateWatchdogTimerTask(byte[], byte[], com.sun.jna.ptr.PointerByReference, double, byte[], int, java.lang.Object)} and {@link #dAQmxCreateWatchdogTimerTask(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, double, com.sun.jna.Pointer, int, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateWatchdogTimerTask(Pointer deviceName, Pointer taskName, PointerByReference taskHandle, double timeout, Pointer lines, int expState, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxCreateWatchdogTimerTask(const char[], const char[], TaskHandle*, float64, const char[], int32, null)</code><br>
	 * <i>native declaration : line 3057</i>
	 */
	public static native int dAQmxCreateWatchdogTimerTask(byte deviceName[], byte taskName[], PointerByReference taskHandle, double timeout, byte lines[], int expState, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxCreateWatchdogTimerTaskEx(const char[], const char[], TaskHandle*, float64)</code><br>
	 * <i>native declaration : line 3058</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCreateWatchdogTimerTaskEx(byte[], byte[], com.sun.jna.ptr.PointerByReference, double)} and {@link #dAQmxCreateWatchdogTimerTaskEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxCreateWatchdogTimerTaskEx(Pointer deviceName, Pointer taskName, PointerByReference taskHandle, double timeout);
	/**
	 * Original signature : <code>int32 DAQmxCreateWatchdogTimerTaskEx(const char[], const char[], TaskHandle*, float64)</code><br>
	 * <i>native declaration : line 3058</i>
	 */
	public static native int dAQmxCreateWatchdogTimerTaskEx(byte deviceName[], byte taskName[], PointerByReference taskHandle, double timeout);
	/**
	 * Original signature : <code>int32 DAQmxControlWatchdogTask(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 3059</i>
	 */
	public static native int dAQmxControlWatchdogTask(Pointer taskHandle, int action);
	/**
	 * Original signature : <code>int32 DAQmxCfgWatchdogAOExpirStates(TaskHandle, const char[], const float64[], const int32[], uInt32)</code><br>
	 * <i>native declaration : line 3061</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgWatchdogAOExpirStates(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, int[], com.sun.jna.NativeLong)} and {@link #dAQmxCfgWatchdogAOExpirStates(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgWatchdogAOExpirStates(Pointer taskHandle, Pointer channelNames, DoubleByReference expirStateArray, IntByReference outputTypeArray, NativeLong arraySize);
	/**
	 * Original signature : <code>int32 DAQmxCfgWatchdogAOExpirStates(TaskHandle, const char[], const float64[], const int32[], uInt32)</code><br>
	 * <i>native declaration : line 3061</i>
	 */
	public static native int dAQmxCfgWatchdogAOExpirStates(Pointer taskHandle, byte channelNames[], DoubleBuffer expirStateArray, int outputTypeArray[], NativeLong arraySize);
	/**
	 * Original signature : <code>int32 DAQmxCfgWatchdogCOExpirStates(TaskHandle, const char[], const int32[], uInt32)</code><br>
	 * <i>native declaration : line 3062</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgWatchdogCOExpirStates(com.sun.jna.Pointer, byte[], int[], com.sun.jna.NativeLong)} and {@link #dAQmxCfgWatchdogCOExpirStates(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgWatchdogCOExpirStates(Pointer taskHandle, Pointer channelNames, IntByReference expirStateArray, NativeLong arraySize);
	/**
	 * Original signature : <code>int32 DAQmxCfgWatchdogCOExpirStates(TaskHandle, const char[], const int32[], uInt32)</code><br>
	 * <i>native declaration : line 3062</i>
	 */
	public static native int dAQmxCfgWatchdogCOExpirStates(Pointer taskHandle, byte channelNames[], int expirStateArray[], NativeLong arraySize);
	/**
	 * Original signature : <code>int32 DAQmxCfgWatchdogDOExpirStates(TaskHandle, const char[], const int32[], uInt32)</code><br>
	 * <i>native declaration : line 3063</i><br>
	 * @deprecated use the safer methods {@link #dAQmxCfgWatchdogDOExpirStates(com.sun.jna.Pointer, byte[], int[], com.sun.jna.NativeLong)} and {@link #dAQmxCfgWatchdogDOExpirStates(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxCfgWatchdogDOExpirStates(Pointer taskHandle, Pointer channelNames, IntByReference expirStateArray, NativeLong arraySize);
	/**
	 * Original signature : <code>int32 DAQmxCfgWatchdogDOExpirStates(TaskHandle, const char[], const int32[], uInt32)</code><br>
	 * <i>native declaration : line 3063</i>
	 */
	public static native int dAQmxCfgWatchdogDOExpirStates(Pointer taskHandle, byte channelNames[], int expirStateArray[], NativeLong arraySize);
	/**
	 * Original signature : <code>int32 DAQmxGetWatchdogAttribute(TaskHandle, const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3065</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWatchdogAttribute(com.sun.jna.Pointer, byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #dAQmxGetWatchdogAttribute(com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWatchdogAttribute(Pointer taskHandle, Pointer lines, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetWatchdogAttribute(TaskHandle, const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3065</i>
	 */
	public static native int dAQmxGetWatchdogAttribute(Pointer taskHandle, byte lines[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogAttribute(TaskHandle, const char[], int32, null)</code><br>
	 * <i>native declaration : line 3066</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetWatchdogAttribute(com.sun.jna.Pointer, byte[], int, java.lang.Object)} and {@link #dAQmxSetWatchdogAttribute(com.sun.jna.Pointer, com.sun.jna.Pointer, int, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetWatchdogAttribute(Pointer taskHandle, Pointer lines, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogAttribute(TaskHandle, const char[], int32, null)</code><br>
	 * <i>native declaration : line 3066</i>
	 */
	public static native int dAQmxSetWatchdogAttribute(Pointer taskHandle, byte lines[], int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogAttribute(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3067</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetWatchdogAttribute(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxResetWatchdogAttribute(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetWatchdogAttribute(Pointer taskHandle, Pointer lines, int attribute);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogAttribute(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3067</i>
	 */
	public static native int dAQmxResetWatchdogAttribute(Pointer taskHandle, byte lines[], int attribute);
	/**
	 * Original signature : <code>int32 DAQmxSelfCal(const char[])</code><br>
	 * <i>native declaration : line 3075</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSelfCal(byte[])} and {@link #dAQmxSelfCal(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSelfCal(Pointer deviceName);
	/**
	 * Original signature : <code>int32 DAQmxSelfCal(const char[])</code><br>
	 * <i>native declaration : line 3075</i>
	 */
	public static native int dAQmxSelfCal(byte deviceName[]);
	/**
	 * Original signature : <code>int32 DAQmxPerformBridgeOffsetNullingCal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3076</i><br>
	 * @deprecated use the safer methods {@link #dAQmxPerformBridgeOffsetNullingCal(com.sun.jna.Pointer, byte[])} and {@link #dAQmxPerformBridgeOffsetNullingCal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxPerformBridgeOffsetNullingCal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxPerformBridgeOffsetNullingCal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3076</i>
	 */
	public static native int dAQmxPerformBridgeOffsetNullingCal(Pointer taskHandle, byte channel[]);
	/**
	 * Original signature : <code>int32 DAQmxPerformBridgeOffsetNullingCalEx(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3077</i><br>
	 * @deprecated use the safer methods {@link #dAQmxPerformBridgeOffsetNullingCalEx(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxPerformBridgeOffsetNullingCalEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxPerformBridgeOffsetNullingCalEx(Pointer taskHandle, Pointer channel, NativeLong skipUnsupportedChannels);
	/**
	 * Original signature : <code>int32 DAQmxPerformBridgeOffsetNullingCalEx(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3077</i>
	 */
	public static native int dAQmxPerformBridgeOffsetNullingCalEx(Pointer taskHandle, byte channel[], NativeLong skipUnsupportedChannels);
	/**
	 * Original signature : <code>int32 DAQmxPerformThrmcplLeadOffsetNullingCal(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3078</i><br>
	 * @deprecated use the safer methods {@link #dAQmxPerformThrmcplLeadOffsetNullingCal(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxPerformThrmcplLeadOffsetNullingCal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxPerformThrmcplLeadOffsetNullingCal(Pointer taskHandle, Pointer channel, NativeLong skipUnsupportedChannels);
	/**
	 * Original signature : <code>int32 DAQmxPerformThrmcplLeadOffsetNullingCal(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3078</i>
	 */
	public static native int dAQmxPerformThrmcplLeadOffsetNullingCal(Pointer taskHandle, byte channel[], NativeLong skipUnsupportedChannels);
	/**
	 * Note: This function is deprecated.  Use DAQmxPerformStrainShuntCalEx instead.<br>
	 * Original signature : <code>int32 DAQmxPerformStrainShuntCal(TaskHandle, const char[], float64, int32, bool32)</code><br>
	 * <i>native declaration : line 3080</i><br>
	 * @deprecated use the safer methods {@link #dAQmxPerformStrainShuntCal(com.sun.jna.Pointer, byte[], double, int, com.sun.jna.NativeLong)} and {@link #dAQmxPerformStrainShuntCal(com.sun.jna.Pointer, com.sun.jna.Pointer, double, int, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxPerformStrainShuntCal(Pointer taskHandle, Pointer channel, double shuntResistorValue, int shuntResistorLocation, NativeLong skipUnsupportedChannels);
	/**
	 * Note: This function is deprecated.  Use DAQmxPerformStrainShuntCalEx instead.<br>
	 * Original signature : <code>int32 DAQmxPerformStrainShuntCal(TaskHandle, const char[], float64, int32, bool32)</code><br>
	 * <i>native declaration : line 3080</i>
	 */
	public static native int dAQmxPerformStrainShuntCal(Pointer taskHandle, byte channel[], double shuntResistorValue, int shuntResistorLocation, NativeLong skipUnsupportedChannels);
	/**
	 * Original signature : <code>int32 DAQmxPerformStrainShuntCalEx(TaskHandle, const char[], float64, int32, int32, int32, bool32)</code><br>
	 * <i>native declaration : line 3081</i><br>
	 * @deprecated use the safer methods {@link #dAQmxPerformStrainShuntCalEx(com.sun.jna.Pointer, byte[], double, int, int, int, com.sun.jna.NativeLong)} and {@link #dAQmxPerformStrainShuntCalEx(com.sun.jna.Pointer, com.sun.jna.Pointer, double, int, int, int, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxPerformStrainShuntCalEx(Pointer taskHandle, Pointer channel, double shuntResistorValue, int shuntResistorLocation, int shuntResistorSelect, int shuntResistorSource, NativeLong skipUnsupportedChannels);
	/**
	 * Original signature : <code>int32 DAQmxPerformStrainShuntCalEx(TaskHandle, const char[], float64, int32, int32, int32, bool32)</code><br>
	 * <i>native declaration : line 3081</i>
	 */
	public static native int dAQmxPerformStrainShuntCalEx(Pointer taskHandle, byte channel[], double shuntResistorValue, int shuntResistorLocation, int shuntResistorSelect, int shuntResistorSource, NativeLong skipUnsupportedChannels);
	/**
	 * Note: This function is deprecated.  Use DAQmxPerformBridgeShuntCalEx instead.<br>
	 * Original signature : <code>int32 DAQmxPerformBridgeShuntCal(TaskHandle, const char[], float64, int32, float64, bool32)</code><br>
	 * <i>native declaration : line 3083</i><br>
	 * @deprecated use the safer methods {@link #dAQmxPerformBridgeShuntCal(com.sun.jna.Pointer, byte[], double, int, double, com.sun.jna.NativeLong)} and {@link #dAQmxPerformBridgeShuntCal(com.sun.jna.Pointer, com.sun.jna.Pointer, double, int, double, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxPerformBridgeShuntCal(Pointer taskHandle, Pointer channel, double shuntResistorValue, int shuntResistorLocation, double bridgeResistance, NativeLong skipUnsupportedChannels);
	/**
	 * Note: This function is deprecated.  Use DAQmxPerformBridgeShuntCalEx instead.<br>
	 * Original signature : <code>int32 DAQmxPerformBridgeShuntCal(TaskHandle, const char[], float64, int32, float64, bool32)</code><br>
	 * <i>native declaration : line 3083</i>
	 */
	public static native int dAQmxPerformBridgeShuntCal(Pointer taskHandle, byte channel[], double shuntResistorValue, int shuntResistorLocation, double bridgeResistance, NativeLong skipUnsupportedChannels);
	/**
	 * Original signature : <code>int32 DAQmxPerformBridgeShuntCalEx(TaskHandle, const char[], float64, int32, int32, int32, float64, bool32)</code><br>
	 * <i>native declaration : line 3084</i><br>
	 * @deprecated use the safer methods {@link #dAQmxPerformBridgeShuntCalEx(com.sun.jna.Pointer, byte[], double, int, int, int, double, com.sun.jna.NativeLong)} and {@link #dAQmxPerformBridgeShuntCalEx(com.sun.jna.Pointer, com.sun.jna.Pointer, double, int, int, int, double, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxPerformBridgeShuntCalEx(Pointer taskHandle, Pointer channel, double shuntResistorValue, int shuntResistorLocation, int shuntResistorSelect, int shuntResistorSource, double bridgeResistance, NativeLong skipUnsupportedChannels);
	/**
	 * Original signature : <code>int32 DAQmxPerformBridgeShuntCalEx(TaskHandle, const char[], float64, int32, int32, int32, float64, bool32)</code><br>
	 * <i>native declaration : line 3084</i>
	 */
	public static native int dAQmxPerformBridgeShuntCalEx(Pointer taskHandle, byte channel[], double shuntResistorValue, int shuntResistorLocation, int shuntResistorSelect, int shuntResistorSource, double bridgeResistance, NativeLong skipUnsupportedChannels);
	/**
	 * Original signature : <code>int32 DAQmxGetSelfCalLastDateAndTime(const char[], uInt32*, uInt32*, uInt32*, uInt32*, uInt32*)</code><br>
	 * <i>native declaration : line 3085</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSelfCalLastDateAndTime(byte[], com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetSelfCalLastDateAndTime(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSelfCalLastDateAndTime(Pointer deviceName, NativeLongByReference year, NativeLongByReference month, NativeLongByReference day, NativeLongByReference hour, NativeLongByReference minute);
	/**
	 * Original signature : <code>int32 DAQmxGetSelfCalLastDateAndTime(const char[], uInt32*, uInt32*, uInt32*, uInt32*, uInt32*)</code><br>
	 * <i>native declaration : line 3085</i>
	 */
	public static native int dAQmxGetSelfCalLastDateAndTime(byte deviceName[], NativeLongByReference year, NativeLongByReference month, NativeLongByReference day, NativeLongByReference hour, NativeLongByReference minute);
	/**
	 * Original signature : <code>int32 DAQmxGetExtCalLastDateAndTime(const char[], uInt32*, uInt32*, uInt32*, uInt32*, uInt32*)</code><br>
	 * <i>native declaration : line 3086</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExtCalLastDateAndTime(byte[], com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetExtCalLastDateAndTime(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExtCalLastDateAndTime(Pointer deviceName, NativeLongByReference year, NativeLongByReference month, NativeLongByReference day, NativeLongByReference hour, NativeLongByReference minute);
	/**
	 * Original signature : <code>int32 DAQmxGetExtCalLastDateAndTime(const char[], uInt32*, uInt32*, uInt32*, uInt32*, uInt32*)</code><br>
	 * <i>native declaration : line 3086</i>
	 */
	public static native int dAQmxGetExtCalLastDateAndTime(byte deviceName[], NativeLongByReference year, NativeLongByReference month, NativeLongByReference day, NativeLongByReference hour, NativeLongByReference minute);
	/**
	 * Original signature : <code>int32 DAQmxRestoreLastExtCalConst(const char[])</code><br>
	 * <i>native declaration : line 3087</i><br>
	 * @deprecated use the safer methods {@link #dAQmxRestoreLastExtCalConst(byte[])} and {@link #dAQmxRestoreLastExtCalConst(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxRestoreLastExtCalConst(Pointer deviceName);
	/**
	 * Original signature : <code>int32 DAQmxRestoreLastExtCalConst(const char[])</code><br>
	 * <i>native declaration : line 3087</i>
	 */
	public static native int dAQmxRestoreLastExtCalConst(byte deviceName[]);
	/**
	 * Original signature : <code>int32 DAQmxESeriesCalAdjust(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3089</i>
	 */
	public static native int dAQmxESeriesCalAdjust(NativeLong calHandle, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxMSeriesCalAdjust(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3090</i>
	 */
	public static native int dAQmxMSeriesCalAdjust(NativeLong calHandle, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxSSeriesCalAdjust(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3091</i>
	 */
	public static native int dAQmxSSeriesCalAdjust(NativeLong calHandle, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxSCBaseboardCalAdjust(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3092</i>
	 */
	public static native int dAQmxSCBaseboardCalAdjust(NativeLong calHandle, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAOSeriesCalAdjust(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3093</i>
	 */
	public static native int dAQmxAOSeriesCalAdjust(NativeLong calHandle, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxXSeriesCalAdjust(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3094</i>
	 */
	public static native int dAQmxXSeriesCalAdjust(NativeLong calHandle, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxDeviceSupportsCal(const char[], bool32*)</code><br>
	 * <i>native declaration : line 3096</i><br>
	 * @deprecated use the safer methods {@link #dAQmxDeviceSupportsCal(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxDeviceSupportsCal(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxDeviceSupportsCal(Pointer deviceName, NativeLongByReference calSupported);
	/**
	 * Original signature : <code>int32 DAQmxDeviceSupportsCal(const char[], bool32*)</code><br>
	 * <i>native declaration : line 3096</i>
	 */
	public static native int dAQmxDeviceSupportsCal(byte deviceName[], NativeLongByReference calSupported);
	/**
	 * Original signature : <code>int32 DAQmxGetCalInfoAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3098</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCalInfoAttribute(byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #dAQmxGetCalInfoAttribute(com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCalInfoAttribute(Pointer deviceName, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetCalInfoAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3098</i>
	 */
	public static native int dAQmxGetCalInfoAttribute(byte deviceName[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetCalInfoAttribute(const char[], int32, null)</code><br>
	 * <i>native declaration : line 3099</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCalInfoAttribute(byte[], int, java.lang.Object)} and {@link #dAQmxSetCalInfoAttribute(com.sun.jna.Pointer, int, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCalInfoAttribute(Pointer deviceName, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetCalInfoAttribute(const char[], int32, null)</code><br>
	 * <i>native declaration : line 3099</i>
	 */
	public static native int dAQmxSetCalInfoAttribute(byte deviceName[], int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxInitExtCal(const char[], const char[], CalHandle*)</code><br>
	 * <i>native declaration : line 3101</i><br>
	 * @deprecated use the safer methods {@link #dAQmxInitExtCal(byte[], byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxInitExtCal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxInitExtCal(Pointer deviceName, Pointer password, NativeLongByReference calHandle);
	/**
	 * Original signature : <code>int32 DAQmxInitExtCal(const char[], const char[], CalHandle*)</code><br>
	 * <i>native declaration : line 3101</i>
	 */
	public static native int dAQmxInitExtCal(byte deviceName[], byte password[], NativeLongByReference calHandle);
	/**
	 * Original signature : <code>int32 DAQmxCloseExtCal(CalHandle, int32)</code><br>
	 * <i>native declaration : line 3102</i>
	 */
	public static native int dAQmxCloseExtCal(NativeLong calHandle, int action);
	/**
	 * Original signature : <code>int32 DAQmxChangeExtCalPassword(const char[], const char[], const char[])</code><br>
	 * <i>native declaration : line 3103</i><br>
	 * @deprecated use the safer methods {@link #dAQmxChangeExtCalPassword(byte[], byte[], byte[])} and {@link #dAQmxChangeExtCalPassword(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxChangeExtCalPassword(Pointer deviceName, Pointer password, Pointer newPassword);
	/**
	 * Original signature : <code>int32 DAQmxChangeExtCalPassword(const char[], const char[], const char[])</code><br>
	 * <i>native declaration : line 3103</i>
	 */
	public static native int dAQmxChangeExtCalPassword(byte deviceName[], byte password[], byte newPassword[]);
	/**
	 * Original signature : <code>int32 DAQmxDSASetCalTemp(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3105</i>
	 */
	public static native int dAQmxDSASetCalTemp(NativeLong calHandle, double temperature);
	/**
	 * Original signature : <code>int32 DAQmxAdjustDSAAICal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3106</i>
	 */
	public static native int dAQmxAdjustDSAAICal(NativeLong calHandle, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAdjustDSAAICalEx(CalHandle, float64, bool32)</code><br>
	 * <i>native declaration : line 3107</i>
	 */
	public static native int dAQmxAdjustDSAAICalEx(NativeLong calHandle, double referenceVoltage, NativeLong inputsShorted);
	/**
	 * Original signature : <code>int32 DAQmxAdjustDSAAICalWithGainAndCoupling(CalHandle, int32, float64, float64)</code><br>
	 * <i>native declaration : line 3108</i>
	 */
	public static native int dAQmxAdjustDSAAICalWithGainAndCoupling(NativeLong calHandle, int coupling, double gain, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAdjustDSAAOCal(CalHandle, uInt32, float64, float64, float64, float64, float64)</code><br>
	 * <i>native declaration : line 3109</i>
	 */
	public static native int dAQmxAdjustDSAAOCal(NativeLong calHandle, NativeLong channel, double requestedLowVoltage, double actualLowVoltage, double requestedHighVoltage, double actualHighVoltage, double gainSetting);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4610Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3110</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust4610Cal(com.sun.jna.NativeLong, byte[], double, double)} and {@link #dAQmxAdjust4610Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust4610Cal(NativeLong calHandle, Pointer channelName, double gain, double offset);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4610Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3110</i>
	 */
	public static native int dAQmxAdjust4610Cal(NativeLong calHandle, byte channelName[], double gain, double offset);
	/**
	 * Original signature : <code>int32 DAQmxAdjustDSATimebaseCal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3111</i>
	 */
	public static native int dAQmxAdjustDSATimebaseCal(NativeLong calHandle, double referenceFrequency);
	/**
	 * Original signature : <code>int32 DAQmxAdjustDSAAOTimebaseCal(CalHandle, float64, bool32*)</code><br>
	 * <i>native declaration : line 3112</i>
	 */
	public static native int dAQmxAdjustDSAAOTimebaseCal(NativeLong calHandle, double measuredFrequency, NativeLongByReference calComplete);
	/**
	 * Original signature : <code>int32 DAQmxSetupDSAAOTimebaseCal(CalHandle, float64*)</code><br>
	 * <i>native declaration : line 3113</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetupDSAAOTimebaseCal(com.sun.jna.NativeLong, java.nio.DoubleBuffer)} and {@link #dAQmxSetupDSAAOTimebaseCal(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetupDSAAOTimebaseCal(NativeLong calHandle, DoubleByReference expectedFrequency);
	/**
	 * Original signature : <code>int32 DAQmxSetupDSAAOTimebaseCal(CalHandle, float64*)</code><br>
	 * <i>native declaration : line 3113</i>
	 */
	public static native int dAQmxSetupDSAAOTimebaseCal(NativeLong calHandle, DoubleBuffer expectedFrequency);
	/**
	 * Original signature : <code>int32 DAQmxGet4463AdjustPoints(CalHandle, int32, float64, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3114</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet4463AdjustPoints(com.sun.jna.NativeLong, int, double, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet4463AdjustPoints(com.sun.jna.NativeLong, int, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet4463AdjustPoints(NativeLong calHandle, int terminalConfig, double gain, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet4463AdjustPoints(CalHandle, int32, float64, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3114</i>
	 */
	public static native int dAQmxGet4463AdjustPoints(NativeLong calHandle, int terminalConfig, double gain, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4463Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3115</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust4463Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust4463Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust4463Cal(NativeLong calHandle, Pointer channelNames, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4463Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3115</i>
	 */
	public static native int dAQmxAdjust4463Cal(NativeLong calHandle, byte channelNames[], double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxSetup4463Cal(CalHandle, const char[], int32, float64, float64)</code><br>
	 * <i>native declaration : line 3116</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup4463Cal(com.sun.jna.NativeLong, byte[], int, double, double)} and {@link #dAQmxSetup4463Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup4463Cal(NativeLong calHandle, Pointer channelNames, int terminalConfig, double gain, double outputVoltage);
	/**
	 * Original signature : <code>int32 DAQmxSetup4463Cal(CalHandle, const char[], int32, float64, float64)</code><br>
	 * <i>native declaration : line 3116</i>
	 */
	public static native int dAQmxSetup4463Cal(NativeLong calHandle, byte channelNames[], int terminalConfig, double gain, double outputVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAdjustTIOTimebaseCal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3119</i>
	 */
	public static native int dAQmxAdjustTIOTimebaseCal(NativeLong calHandle, double referenceFrequency);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4204Cal(CalHandle, const char[], float64, bool32, float64)</code><br>
	 * <i>native declaration : line 3121</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust4204Cal(com.sun.jna.NativeLong, byte[], double, com.sun.jna.NativeLong, double)} and {@link #dAQmxAdjust4204Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, com.sun.jna.NativeLong, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust4204Cal(NativeLong calHandle, Pointer channelNames, double lowPassFreq, NativeLong trackHoldEnabled, double inputVal);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4204Cal(CalHandle, const char[], float64, bool32, float64)</code><br>
	 * <i>native declaration : line 3121</i>
	 */
	public static native int dAQmxAdjust4204Cal(NativeLong calHandle, byte channelNames[], double lowPassFreq, NativeLong trackHoldEnabled, double inputVal);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4220Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3122</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust4220Cal(com.sun.jna.NativeLong, byte[], double, double)} and {@link #dAQmxAdjust4220Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust4220Cal(NativeLong calHandle, Pointer channelNames, double gain, double inputVal);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4220Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3122</i>
	 */
	public static native int dAQmxAdjust4220Cal(NativeLong calHandle, byte channelNames[], double gain, double inputVal);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4224Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3123</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust4224Cal(com.sun.jna.NativeLong, byte[], double, double)} and {@link #dAQmxAdjust4224Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust4224Cal(NativeLong calHandle, Pointer channelNames, double gain, double inputVal);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4224Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3123</i>
	 */
	public static native int dAQmxAdjust4224Cal(NativeLong calHandle, byte channelNames[], double gain, double inputVal);
	/**
	 * Note: This function is obsolete and now always returns zero.<br>
	 * Original signature : <code>int32 DAQmxAdjust4225Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3127</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust4225Cal(com.sun.jna.NativeLong, byte[], double, double)} and {@link #dAQmxAdjust4225Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust4225Cal(NativeLong calHandle, Pointer channelNames, double gain, double inputVal);
	/**
	 * Note: This function is obsolete and now always returns zero.<br>
	 * Original signature : <code>int32 DAQmxAdjust4225Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3127</i>
	 */
	public static native int dAQmxAdjust4225Cal(NativeLong calHandle, byte channelNames[], double gain, double inputVal);
	/**
	 * Original signature : <code>int32 DAQmxSetup433xCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3129</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup433xCal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup433xCal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup433xCal(NativeLong calHandle, Pointer channelNames, double excitationVoltage);
	/**
	 * Original signature : <code>int32 DAQmxSetup433xCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3129</i>
	 */
	public static native int dAQmxSetup433xCal(NativeLong calHandle, byte channelNames[], double excitationVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAdjust433xCal(CalHandle, float64, float64, int32)</code><br>
	 * <i>native declaration : line 3130</i>
	 */
	public static native int dAQmxAdjust433xCal(NativeLong calHandle, double refVoltage, double refExcitation, int shuntLocation);
	/**
	 * Original signature : <code>int32 DAQmxSetup4339Cal(CalHandle, const char[], int32, float64, float64, float64)</code><br>
	 * <i>native declaration : line 3131</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup4339Cal(com.sun.jna.NativeLong, byte[], int, double, double, double)} and {@link #dAQmxSetup4339Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int, double, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup4339Cal(NativeLong calHandle, Pointer channelNames, int calMode, double rangeMax, double rangeMin, double excitationVoltage);
	/**
	 * Original signature : <code>int32 DAQmxSetup4339Cal(CalHandle, const char[], int32, float64, float64, float64)</code><br>
	 * <i>native declaration : line 3131</i>
	 */
	public static native int dAQmxSetup4339Cal(NativeLong calHandle, byte channelNames[], int calMode, double rangeMax, double rangeMin, double excitationVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4339Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3132</i>
	 */
	public static native int dAQmxAdjust4339Cal(NativeLong calHandle, double refVoltage);
	/**
	 * Original signature : <code>int32 DAQmxGet4339CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3133</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet4339CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet4339CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet4339CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet4339CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3133</i>
	 */
	public static native int dAQmxGet4339CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4300Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3134</i>
	 */
	public static native int dAQmxAdjust4300Cal(NativeLong calHandle, double refVoltage);
	/**
	 * Original signature : <code>int32 DAQmxSetup4302Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3135</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup4302Cal(com.sun.jna.NativeLong, byte[], double, double)} and {@link #dAQmxSetup4302Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup4302Cal(NativeLong calHandle, Pointer channelNames, double rangeMin, double rangeMax);
	/**
	 * Original signature : <code>int32 DAQmxSetup4302Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3135</i>
	 */
	public static native int dAQmxSetup4302Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax);
	/**
	 * Original signature : <code>int32 DAQmxGet4302CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3136</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet4302CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet4302CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet4302CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet4302CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3136</i>
	 */
	public static native int dAQmxGet4302CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4302Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3137</i>
	 */
	public static native int dAQmxAdjust4302Cal(NativeLong calHandle, double refVoltage);
	/**
	 * Original signature : <code>int32 DAQmxSetup4303Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3138</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup4303Cal(com.sun.jna.NativeLong, byte[], double, double)} and {@link #dAQmxSetup4303Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup4303Cal(NativeLong calHandle, Pointer channelNames, double rangeMin, double rangeMax);
	/**
	 * Original signature : <code>int32 DAQmxSetup4303Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3138</i>
	 */
	public static native int dAQmxSetup4303Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax);
	/**
	 * Original signature : <code>int32 DAQmxGet4303CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3139</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet4303CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet4303CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet4303CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet4303CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3139</i>
	 */
	public static native int dAQmxGet4303CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4303Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3140</i>
	 */
	public static native int dAQmxAdjust4303Cal(NativeLong calHandle, double refVoltage);
	/**
	 * Original signature : <code>int32 DAQmxSetup4304Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3141</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup4304Cal(com.sun.jna.NativeLong, byte[], double, double)} and {@link #dAQmxSetup4304Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup4304Cal(NativeLong calHandle, Pointer channelNames, double rangeMin, double rangeMax);
	/**
	 * Original signature : <code>int32 DAQmxSetup4304Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3141</i>
	 */
	public static native int dAQmxSetup4304Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax);
	/**
	 * Original signature : <code>int32 DAQmxGet4304CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3142</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet4304CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet4304CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet4304CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet4304CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3142</i>
	 */
	public static native int dAQmxGet4304CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4304Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3143</i>
	 */
	public static native int dAQmxAdjust4304Cal(NativeLong calHandle, double refVoltage);
	/**
	 * Original signature : <code>int32 DAQmxSetup4305Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3144</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup4305Cal(com.sun.jna.NativeLong, byte[], double, double)} and {@link #dAQmxSetup4305Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup4305Cal(NativeLong calHandle, Pointer channelNames, double rangeMin, double rangeMax);
	/**
	 * Original signature : <code>int32 DAQmxSetup4305Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3144</i>
	 */
	public static native int dAQmxSetup4305Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax);
	/**
	 * Original signature : <code>int32 DAQmxGet4305CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3145</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet4305CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet4305CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet4305CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet4305CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3145</i>
	 */
	public static native int dAQmxGet4305CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4305Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3146</i>
	 */
	public static native int dAQmxAdjust4305Cal(NativeLong calHandle, double refVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4353Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3147</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust4353Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust4353Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust4353Cal(NativeLong calHandle, Pointer channelNames, double refVal);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4353Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3147</i>
	 */
	public static native int dAQmxAdjust4353Cal(NativeLong calHandle, byte channelNames[], double refVal);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4357Cal(CalHandle, const char[], const float64[], int32)</code><br>
	 * <i>native declaration : line 3148</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust4357Cal(com.sun.jna.NativeLong, byte[], java.nio.DoubleBuffer, int)} and {@link #dAQmxAdjust4357Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust4357Cal(NativeLong calHandle, Pointer channelNames, DoubleByReference refVals, int numRefVals);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4357Cal(CalHandle, const char[], const float64[], int32)</code><br>
	 * <i>native declaration : line 3148</i>
	 */
	public static native int dAQmxAdjust4357Cal(NativeLong calHandle, byte channelNames[], DoubleBuffer refVals, int numRefVals);
	/**
	 * Original signature : <code>int32 DAQmxSetup4322Cal(CalHandle, const char[], int32, float64)</code><br>
	 * <i>native declaration : line 3149</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup4322Cal(com.sun.jna.NativeLong, byte[], int, double)} and {@link #dAQmxSetup4322Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup4322Cal(NativeLong calHandle, Pointer channelNames, int outputType, double outputVal);
	/**
	 * Original signature : <code>int32 DAQmxSetup4322Cal(CalHandle, const char[], int32, float64)</code><br>
	 * <i>native declaration : line 3149</i>
	 */
	public static native int dAQmxSetup4322Cal(NativeLong calHandle, byte channelNames[], int outputType, double outputVal);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4322Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3150</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust4322Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust4322Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust4322Cal(NativeLong calHandle, Pointer channelNames, double refVal);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4322Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3150</i>
	 */
	public static native int dAQmxAdjust4322Cal(NativeLong calHandle, byte channelNames[], double refVal);
	/**
	 * Original signature : <code>int32 DAQmxGet4322CalAdjustPoints(CalHandle, int32, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3151</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet4322CalAdjustPoints(com.sun.jna.NativeLong, int, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet4322CalAdjustPoints(com.sun.jna.NativeLong, int, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet4322CalAdjustPoints(NativeLong calHandle, int outputType, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet4322CalAdjustPoints(CalHandle, int32, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3151</i>
	 */
	public static native int dAQmxGet4322CalAdjustPoints(NativeLong calHandle, int outputType, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxConnectSCExpressCalAccChans(CalHandle, const char[], const char[])</code><br>
	 * <i>native declaration : line 3152</i><br>
	 * @deprecated use the safer methods {@link #dAQmxConnectSCExpressCalAccChans(com.sun.jna.NativeLong, byte[], byte[])} and {@link #dAQmxConnectSCExpressCalAccChans(com.sun.jna.NativeLong, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxConnectSCExpressCalAccChans(NativeLong calHandle, Pointer channelNames, Pointer connection);
	/**
	 * Original signature : <code>int32 DAQmxConnectSCExpressCalAccChans(CalHandle, const char[], const char[])</code><br>
	 * <i>native declaration : line 3152</i>
	 */
	public static native int dAQmxConnectSCExpressCalAccChans(NativeLong calHandle, byte channelNames[], byte connection[]);
	/**
	 * Original signature : <code>int32 DAQmxDisconnectSCExpressCalAccChans(CalHandle)</code><br>
	 * <i>native declaration : line 3153</i>
	 */
	public static native int dAQmxDisconnectSCExpressCalAccChans(NativeLong calHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetPossibleSCExpressCalAccConnections(const char[], const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3154</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPossibleSCExpressCalAccConnections(byte[], byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetPossibleSCExpressCalAccConnections(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPossibleSCExpressCalAccConnections(Pointer deviceName, Pointer channelNames, Pointer connections, NativeLong connectionsBufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetPossibleSCExpressCalAccConnections(const char[], const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3154</i>
	 */
	public static native int dAQmxGetPossibleSCExpressCalAccConnections(byte deviceName[], byte channelNames[], String connections, NativeLong connectionsBufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetSCExpressCalAccBridgeOutput(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3155</i>
	 */
	public static native int dAQmxSetSCExpressCalAccBridgeOutput(NativeLong calHandle, double voltsPerVolt);
	/**
	 * Original signature : <code>int32 DAQmxGet9201CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3157</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9201CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9201CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9201CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9201CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3157</i>
	 */
	public static native int dAQmxGet9201CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxCSeriesSetCalTemp(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3158</i>
	 */
	public static native int dAQmxCSeriesSetCalTemp(NativeLong calHandle, double temperature);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9201Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3159</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9201Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9201Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9201Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9201Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3159</i>
	 */
	public static native int dAQmxAdjust9201Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9203CalAdjustPoints(CalHandle, float64, float64, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3160</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9203CalAdjustPoints(com.sun.jna.NativeLong, double, double, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9203CalAdjustPoints(com.sun.jna.NativeLong, double, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9203CalAdjustPoints(NativeLong calHandle, double rangeMin, double rangeMax, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9203CalAdjustPoints(CalHandle, float64, float64, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3160</i>
	 */
	public static native int dAQmxGet9203CalAdjustPoints(NativeLong calHandle, double rangeMin, double rangeMax, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9203GainCal(CalHandle, const char[], float64, float64, float64)</code><br>
	 * <i>native declaration : line 3161</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9203GainCal(com.sun.jna.NativeLong, byte[], double, double, double)} and {@link #dAQmxAdjust9203GainCal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9203GainCal(NativeLong calHandle, Pointer channelNames, double rangeMin, double rangeMax, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9203GainCal(CalHandle, const char[], float64, float64, float64)</code><br>
	 * <i>native declaration : line 3161</i>
	 */
	public static native int dAQmxAdjust9203GainCal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9203OffsetCal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3162</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9203OffsetCal(com.sun.jna.NativeLong, byte[], double, double)} and {@link #dAQmxAdjust9203OffsetCal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9203OffsetCal(NativeLong calHandle, Pointer channelNames, double rangeMin, double rangeMax);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9203OffsetCal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3162</i>
	 */
	public static native int dAQmxAdjust9203OffsetCal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9205Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3163</i>
	 */
	public static native int dAQmxAdjust9205Cal(NativeLong calHandle, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9206Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3164</i>
	 */
	public static native int dAQmxAdjust9206Cal(NativeLong calHandle, double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9207CalAdjustPoints(CalHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3165</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9207CalAdjustPoints(com.sun.jna.NativeLong, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9207CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9207CalAdjustPoints(NativeLong calHandle, Pointer channelNames, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9207CalAdjustPoints(CalHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3165</i>
	 */
	public static native int dAQmxGet9207CalAdjustPoints(NativeLong calHandle, byte channelNames[], DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9207GainCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3166</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9207GainCal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9207GainCal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9207GainCal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9207GainCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3166</i>
	 */
	public static native int dAQmxAdjust9207GainCal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9207OffsetCal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3167</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9207OffsetCal(com.sun.jna.NativeLong, byte[])} and {@link #dAQmxAdjust9207OffsetCal(com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9207OffsetCal(NativeLong calHandle, Pointer channelNames);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9207OffsetCal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3167</i>
	 */
	public static native int dAQmxAdjust9207OffsetCal(NativeLong calHandle, byte channelNames[]);
	/**
	 * Original signature : <code>int32 DAQmxGet9208CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3168</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9208CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9208CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9208CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9208CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3168</i>
	 */
	public static native int dAQmxGet9208CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9208GainCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3169</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9208GainCal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9208GainCal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9208GainCal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9208GainCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3169</i>
	 */
	public static native int dAQmxAdjust9208GainCal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9208OffsetCal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3170</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9208OffsetCal(com.sun.jna.NativeLong, byte[])} and {@link #dAQmxAdjust9208OffsetCal(com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9208OffsetCal(NativeLong calHandle, Pointer channelNames);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9208OffsetCal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3170</i>
	 */
	public static native int dAQmxAdjust9208OffsetCal(NativeLong calHandle, byte channelNames[]);
	/**
	 * Original signature : <code>int32 DAQmxGet9209CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3171</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9209CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9209CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9209CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9209CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3171</i>
	 */
	public static native int dAQmxGet9209CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9209GainCal(CalHandle, const char[], int32, float64)</code><br>
	 * <i>native declaration : line 3172</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9209GainCal(com.sun.jna.NativeLong, byte[], int, double)} and {@link #dAQmxAdjust9209GainCal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9209GainCal(NativeLong calHandle, Pointer channelNames, int terminalConfig, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9209GainCal(CalHandle, const char[], int32, float64)</code><br>
	 * <i>native declaration : line 3172</i>
	 */
	public static native int dAQmxAdjust9209GainCal(NativeLong calHandle, byte channelNames[], int terminalConfig, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9209OffsetCal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3173</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9209OffsetCal(com.sun.jna.NativeLong, byte[])} and {@link #dAQmxAdjust9209OffsetCal(com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9209OffsetCal(NativeLong calHandle, Pointer channelNames);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9209OffsetCal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3173</i>
	 */
	public static native int dAQmxAdjust9209OffsetCal(NativeLong calHandle, byte channelNames[]);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9211Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3174</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9211Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9211Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9211Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9211Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3174</i>
	 */
	public static native int dAQmxAdjust9211Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9212CalAdjustPoints(CalHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3175</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9212CalAdjustPoints(com.sun.jna.NativeLong, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9212CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9212CalAdjustPoints(NativeLong calHandle, Pointer channelNames, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9212CalAdjustPoints(CalHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3175</i>
	 */
	public static native int dAQmxGet9212CalAdjustPoints(NativeLong calHandle, byte channelNames[], DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9212Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3176</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9212Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9212Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9212Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9212Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3176</i>
	 */
	public static native int dAQmxAdjust9212Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9213CalAdjustPoints(CalHandle, float64, float64, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3177</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9213CalAdjustPoints(com.sun.jna.NativeLong, double, double, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9213CalAdjustPoints(com.sun.jna.NativeLong, double, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9213CalAdjustPoints(NativeLong calHandle, double rangeMin, double rangeMax, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9213CalAdjustPoints(CalHandle, float64, float64, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3177</i>
	 */
	public static native int dAQmxGet9213CalAdjustPoints(NativeLong calHandle, double rangeMin, double rangeMax, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9213Cal(CalHandle, const char[], float64, float64, float64)</code><br>
	 * <i>native declaration : line 3178</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9213Cal(com.sun.jna.NativeLong, byte[], double, double, double)} and {@link #dAQmxAdjust9213Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9213Cal(NativeLong calHandle, Pointer channelNames, double rangeMin, double rangeMax, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9213Cal(CalHandle, const char[], float64, float64, float64)</code><br>
	 * <i>native declaration : line 3178</i>
	 */
	public static native int dAQmxAdjust9213Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax, double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9214CalAdjustPoints(CalHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3179</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9214CalAdjustPoints(com.sun.jna.NativeLong, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9214CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9214CalAdjustPoints(NativeLong calHandle, Pointer channelNames, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9214CalAdjustPoints(CalHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3179</i>
	 */
	public static native int dAQmxGet9214CalAdjustPoints(NativeLong calHandle, byte channelNames[], DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9214Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3180</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9214Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9214Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9214Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9214Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3180</i>
	 */
	public static native int dAQmxAdjust9214Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9215CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3181</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9215CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9215CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9215CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9215CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3181</i>
	 */
	public static native int dAQmxGet9215CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9215Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3182</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9215Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9215Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9215Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9215Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3182</i>
	 */
	public static native int dAQmxAdjust9215Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9216CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3183</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9216CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9216CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9216CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9216CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3183</i>
	 */
	public static native int dAQmxGet9216CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9216Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3184</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9216Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9216Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9216Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9216Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3184</i>
	 */
	public static native int dAQmxAdjust9216Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9217CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3185</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9217CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9217CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9217CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9217CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3185</i>
	 */
	public static native int dAQmxGet9217CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9217Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3186</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9217Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9217Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9217Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9217Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3186</i>
	 */
	public static native int dAQmxAdjust9217Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9218Cal(CalHandle, const char[], float64, float64, int32)</code><br>
	 * <i>native declaration : line 3187</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup9218Cal(com.sun.jna.NativeLong, byte[], double, double, int)} and {@link #dAQmxSetup9218Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup9218Cal(NativeLong calHandle, Pointer channelNames, double rangeMin, double rangeMax, int measType);
	/**
	 * Original signature : <code>int32 DAQmxSetup9218Cal(CalHandle, const char[], float64, float64, int32)</code><br>
	 * <i>native declaration : line 3187</i>
	 */
	public static native int dAQmxSetup9218Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax, int measType);
	/**
	 * Original signature : <code>int32 DAQmxGet9218CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3188</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9218CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9218CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9218CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9218CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3188</i>
	 */
	public static native int dAQmxGet9218CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9218Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3189</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9218Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9218Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9218Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9218Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3189</i>
	 */
	public static native int dAQmxAdjust9218Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9219Cal(CalHandle, const char[], float64, float64, int32, int32)</code><br>
	 * <i>native declaration : line 3190</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup9219Cal(com.sun.jna.NativeLong, byte[], double, double, int, int)} and {@link #dAQmxSetup9219Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double, int, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup9219Cal(NativeLong calHandle, Pointer channelNames, double rangeMin, double rangeMax, int measType, int bridgeConfig);
	/**
	 * Original signature : <code>int32 DAQmxSetup9219Cal(CalHandle, const char[], float64, float64, int32, int32)</code><br>
	 * <i>native declaration : line 3190</i>
	 */
	public static native int dAQmxSetup9219Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax, int measType, int bridgeConfig);
	/**
	 * Original signature : <code>int32 DAQmxGet9219CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3191</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9219CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9219CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9219CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9219CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3191</i>
	 */
	public static native int dAQmxGet9219CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9219Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3192</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9219Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9219Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9219Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9219Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3192</i>
	 */
	public static native int dAQmxAdjust9219Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9220CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3193</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9220CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9220CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9220CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9220CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3193</i>
	 */
	public static native int dAQmxGet9220CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9220Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3194</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9220Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9220Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9220Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9220Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3194</i>
	 */
	public static native int dAQmxAdjust9220Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9221CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3195</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9221CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9221CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9221CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9221CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3195</i>
	 */
	public static native int dAQmxGet9221CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9221Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3196</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9221Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9221Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9221Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9221Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3196</i>
	 */
	public static native int dAQmxAdjust9221Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9222CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3197</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9222CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9222CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9222CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9222CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3197</i>
	 */
	public static native int dAQmxGet9222CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9222Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3198</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9222Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9222Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9222Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9222Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3198</i>
	 */
	public static native int dAQmxAdjust9222Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9223CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3199</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9223CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9223CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9223CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9223CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3199</i>
	 */
	public static native int dAQmxGet9223CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9223Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3200</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9223Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9223Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9223Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9223Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3200</i>
	 */
	public static native int dAQmxAdjust9223Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9225CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3201</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9225CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9225CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9225CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9225CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3201</i>
	 */
	public static native int dAQmxGet9225CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9225Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3202</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9225Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9225Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9225Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9225Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3202</i>
	 */
	public static native int dAQmxAdjust9225Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9226CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3203</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9226CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9226CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9226CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9226CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3203</i>
	 */
	public static native int dAQmxGet9226CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9226Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3204</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9226Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9226Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9226Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9226Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3204</i>
	 */
	public static native int dAQmxAdjust9226Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9227CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3205</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9227CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9227CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9227CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9227CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3205</i>
	 */
	public static native int dAQmxGet9227CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9227Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3206</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9227Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9227Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9227Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9227Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3206</i>
	 */
	public static native int dAQmxAdjust9227Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9229CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3207</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9229CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9229CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9229CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9229CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3207</i>
	 */
	public static native int dAQmxGet9229CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9229Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3208</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9229Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9229Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9229Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9229Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3208</i>
	 */
	public static native int dAQmxAdjust9229Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9230CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3209</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9230CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9230CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9230CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9230CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3209</i>
	 */
	public static native int dAQmxGet9230CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9230Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3210</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9230Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9230Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9230Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9230Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3210</i>
	 */
	public static native int dAQmxAdjust9230Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9232CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3211</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9232CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9232CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9232CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9232CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3211</i>
	 */
	public static native int dAQmxGet9232CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9232Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3212</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9232Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9232Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9232Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9232Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3212</i>
	 */
	public static native int dAQmxAdjust9232Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9234CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3213</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9234CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9234CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9234CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9234CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3213</i>
	 */
	public static native int dAQmxGet9234CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9234GainCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3214</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9234GainCal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9234GainCal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9234GainCal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9234GainCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3214</i>
	 */
	public static native int dAQmxAdjust9234GainCal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9234OffsetCal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3215</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9234OffsetCal(com.sun.jna.NativeLong, byte[])} and {@link #dAQmxAdjust9234OffsetCal(com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9234OffsetCal(NativeLong calHandle, Pointer channelNames);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9234OffsetCal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3215</i>
	 */
	public static native int dAQmxAdjust9234OffsetCal(NativeLong calHandle, byte channelNames[]);
	/**
	 * Original signature : <code>int32 DAQmxGet9238CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3216</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9238CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9238CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9238CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9238CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3216</i>
	 */
	public static native int dAQmxGet9238CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9238Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3217</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9238Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9238Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9238Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9238Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3217</i>
	 */
	public static native int dAQmxAdjust9238Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9239CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3218</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9239CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9239CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9239CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9239CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3218</i>
	 */
	public static native int dAQmxGet9239CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9239Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3219</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9239Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9239Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9239Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9239Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3219</i>
	 */
	public static native int dAQmxAdjust9239Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9242CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3220</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9242CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9242CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9242CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9242CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3220</i>
	 */
	public static native int dAQmxGet9242CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9242Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3221</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup9242Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup9242Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup9242Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9242Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3221</i>
	 */
	public static native int dAQmxSetup9242Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9242Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3222</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9242Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9242Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9242Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9242Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3222</i>
	 */
	public static native int dAQmxAdjust9242Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9244CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3223</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9244CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9244CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9244CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9244CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3223</i>
	 */
	public static native int dAQmxGet9244CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9244Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3224</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup9244Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup9244Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup9244Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9244Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3224</i>
	 */
	public static native int dAQmxSetup9244Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9244Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3225</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9244Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9244Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9244Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9244Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3225</i>
	 */
	public static native int dAQmxAdjust9244Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9246CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3226</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9246CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9246CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9246CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9246CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3226</i>
	 */
	public static native int dAQmxGet9246CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9246Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3227</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9246Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9246Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9246Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9246Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3227</i>
	 */
	public static native int dAQmxAdjust9246Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9247CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3228</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9247CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9247CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9247CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9247CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3228</i>
	 */
	public static native int dAQmxGet9247CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9247Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3229</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9247Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9247Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9247Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9247Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3229</i>
	 */
	public static native int dAQmxAdjust9247Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9251CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3230</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9251CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9251CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9251CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9251CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3230</i>
	 */
	public static native int dAQmxGet9251CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9251Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3231</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9251Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9251Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9251Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9251Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3231</i>
	 */
	public static native int dAQmxAdjust9251Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9260CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3232</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9260CalAdjustPoints(com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9260CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9260CalAdjustPoints(NativeLong calHandle, IntByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9260CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3232</i>
	 */
	public static native int dAQmxGet9260CalAdjustPoints(NativeLong calHandle, IntBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9260Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3233</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup9260Cal(com.sun.jna.NativeLong, byte[], int)} and {@link #dAQmxSetup9260Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup9260Cal(NativeLong calHandle, Pointer channelNames, int value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9260Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3233</i>
	 */
	public static native int dAQmxSetup9260Cal(NativeLong calHandle, byte channelNames[], int value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9260Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3234</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9260Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9260Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9260Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9260Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3234</i>
	 */
	public static native int dAQmxAdjust9260Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9263CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3235</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9263CalAdjustPoints(com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9263CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9263CalAdjustPoints(NativeLong calHandle, IntByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9263CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3235</i>
	 */
	public static native int dAQmxGet9263CalAdjustPoints(NativeLong calHandle, IntBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9263Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3236</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup9263Cal(com.sun.jna.NativeLong, byte[], int)} and {@link #dAQmxSetup9263Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup9263Cal(NativeLong calHandle, Pointer channelNames, int value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9263Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3236</i>
	 */
	public static native int dAQmxSetup9263Cal(NativeLong calHandle, byte channelNames[], int value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9263Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3237</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9263Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9263Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9263Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9263Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3237</i>
	 */
	public static native int dAQmxAdjust9263Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9264CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3238</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9264CalAdjustPoints(com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9264CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9264CalAdjustPoints(NativeLong calHandle, IntByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9264CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3238</i>
	 */
	public static native int dAQmxGet9264CalAdjustPoints(NativeLong calHandle, IntBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9264Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3239</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup9264Cal(com.sun.jna.NativeLong, byte[], int)} and {@link #dAQmxSetup9264Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup9264Cal(NativeLong calHandle, Pointer channelNames, int value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9264Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3239</i>
	 */
	public static native int dAQmxSetup9264Cal(NativeLong calHandle, byte channelNames[], int value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9264Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3240</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9264Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9264Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9264Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9264Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3240</i>
	 */
	public static native int dAQmxAdjust9264Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9265CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3241</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9265CalAdjustPoints(com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9265CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9265CalAdjustPoints(NativeLong calHandle, IntByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9265CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3241</i>
	 */
	public static native int dAQmxGet9265CalAdjustPoints(NativeLong calHandle, IntBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9265Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3242</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup9265Cal(com.sun.jna.NativeLong, byte[], int)} and {@link #dAQmxSetup9265Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup9265Cal(NativeLong calHandle, Pointer channelNames, int value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9265Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3242</i>
	 */
	public static native int dAQmxSetup9265Cal(NativeLong calHandle, byte channelNames[], int value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9265Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3243</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9265Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9265Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9265Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9265Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3243</i>
	 */
	public static native int dAQmxAdjust9265Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9269CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3244</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGet9269CalAdjustPoints(com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGet9269CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGet9269CalAdjustPoints(NativeLong calHandle, IntByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9269CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3244</i>
	 */
	public static native int dAQmxGet9269CalAdjustPoints(NativeLong calHandle, IntBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9269Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3245</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup9269Cal(com.sun.jna.NativeLong, byte[], int)} and {@link #dAQmxSetup9269Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup9269Cal(NativeLong calHandle, Pointer channelNames, int value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9269Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3245</i>
	 */
	public static native int dAQmxSetup9269Cal(NativeLong calHandle, byte channelNames[], int value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9269Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3246</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust9269Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust9269Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust9269Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9269Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3246</i>
	 */
	public static native int dAQmxAdjust9269Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxSetup1102Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3248</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1102Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup1102Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1102Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1102Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3248</i>
	 */
	public static native int dAQmxSetup1102Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1102Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3249</i>
	 */
	public static native int dAQmxAdjust1102Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1104Cal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3251</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1104Cal(com.sun.jna.NativeLong, byte[])} and {@link #dAQmxSetup1104Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1104Cal(NativeLong calHandle, Pointer channelName);
	/**
	 * Original signature : <code>int32 DAQmxSetup1104Cal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3251</i>
	 */
	public static native int dAQmxSetup1104Cal(NativeLong calHandle, byte channelName[]);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1104Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3252</i>
	 */
	public static native int dAQmxAdjust1104Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1112Cal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3254</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1112Cal(com.sun.jna.NativeLong, byte[])} and {@link #dAQmxSetup1112Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1112Cal(NativeLong calHandle, Pointer channelName);
	/**
	 * Original signature : <code>int32 DAQmxSetup1112Cal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3254</i>
	 */
	public static native int dAQmxSetup1112Cal(NativeLong calHandle, byte channelName[]);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1112Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3255</i>
	 */
	public static native int dAQmxAdjust1112Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1122Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3257</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1122Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup1122Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1122Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1122Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3257</i>
	 */
	public static native int dAQmxSetup1122Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1122Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3258</i>
	 */
	public static native int dAQmxAdjust1122Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1124Cal(CalHandle, const char[], int32, uInt32)</code><br>
	 * <i>native declaration : line 3260</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1124Cal(com.sun.jna.NativeLong, byte[], int, com.sun.jna.NativeLong)} and {@link #dAQmxSetup1124Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1124Cal(NativeLong calHandle, Pointer channelName, int range, NativeLong dacValue);
	/**
	 * Original signature : <code>int32 DAQmxSetup1124Cal(CalHandle, const char[], int32, uInt32)</code><br>
	 * <i>native declaration : line 3260</i>
	 */
	public static native int dAQmxSetup1124Cal(NativeLong calHandle, byte channelName[], int range, NativeLong dacValue);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1124Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3261</i>
	 */
	public static native int dAQmxAdjust1124Cal(NativeLong calHandle, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1125Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3263</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1125Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup1125Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1125Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1125Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3263</i>
	 */
	public static native int dAQmxSetup1125Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1125Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3264</i>
	 */
	public static native int dAQmxAdjust1125Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1126Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3266</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1126Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup1126Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1126Cal(NativeLong calHandle, Pointer channelName, double upperFreqLimit);
	/**
	 * Original signature : <code>int32 DAQmxSetup1126Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3266</i>
	 */
	public static native int dAQmxSetup1126Cal(NativeLong calHandle, byte channelName[], double upperFreqLimit);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1126Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3267</i>
	 */
	public static native int dAQmxAdjust1126Cal(NativeLong calHandle, double refFreq, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1141Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3269</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1141Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup1141Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1141Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1141Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3269</i>
	 */
	public static native int dAQmxSetup1141Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1141Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3270</i>
	 */
	public static native int dAQmxAdjust1141Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1142Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3271</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1142Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup1142Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1142Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1142Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3271</i>
	 */
	public static native int dAQmxSetup1142Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1142Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3272</i>
	 */
	public static native int dAQmxAdjust1142Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1143Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3273</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1143Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup1143Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1143Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1143Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3273</i>
	 */
	public static native int dAQmxSetup1143Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1143Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3274</i>
	 */
	public static native int dAQmxAdjust1143Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1502Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3277</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1502Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup1502Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1502Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1502Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3277</i>
	 */
	public static native int dAQmxSetup1502Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1502Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3278</i>
	 */
	public static native int dAQmxAdjust1502Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1503Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3280</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1503Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup1503Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1503Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1503Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3280</i>
	 */
	public static native int dAQmxSetup1503Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1503Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3281</i>
	 */
	public static native int dAQmxAdjust1503Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1503CurrentCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3282</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAdjust1503CurrentCal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxAdjust1503CurrentCal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAdjust1503CurrentCal(NativeLong calHandle, Pointer channelName, double measCurrent);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1503CurrentCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3282</i>
	 */
	public static native int dAQmxAdjust1503CurrentCal(NativeLong calHandle, byte channelName[], double measCurrent);
	/**
	 * Original signature : <code>int32 DAQmxSetup1520Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3284</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1520Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup1520Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1520Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1520Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3284</i>
	 */
	public static native int dAQmxSetup1520Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1520Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3285</i>
	 */
	public static native int dAQmxAdjust1520Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1521Cal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3287</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1521Cal(com.sun.jna.NativeLong, byte[])} and {@link #dAQmxSetup1521Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1521Cal(NativeLong calHandle, Pointer channelName);
	/**
	 * Original signature : <code>int32 DAQmxSetup1521Cal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3287</i>
	 */
	public static native int dAQmxSetup1521Cal(NativeLong calHandle, byte channelName[]);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1521Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3288</i>
	 */
	public static native int dAQmxAdjust1521Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup153xCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3290</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup153xCal(com.sun.jna.NativeLong, byte[], double)} and {@link #dAQmxSetup153xCal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup153xCal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup153xCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3290</i>
	 */
	public static native int dAQmxSetup153xCal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust153xCal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3291</i>
	 */
	public static native int dAQmxAdjust153xCal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1540Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3293</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetup1540Cal(com.sun.jna.NativeLong, byte[], double, double)} and {@link #dAQmxSetup1540Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetup1540Cal(NativeLong calHandle, Pointer channelName, double excitationVoltage, double excitationFreq);
	/**
	 * Original signature : <code>int32 DAQmxSetup1540Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3293</i>
	 */
	public static native int dAQmxSetup1540Cal(NativeLong calHandle, byte channelName[], double excitationVoltage, double excitationFreq);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1540Cal(CalHandle, float64, float64, int32)</code><br>
	 * <i>native declaration : line 3294</i>
	 */
	public static native int dAQmxAdjust1540Cal(NativeLong calHandle, double refVoltage, double measOutput, int inputCalSource);
	/**
	 * Original signature : <code>int32 DAQmxConfigureTEDS(const char[], const char[])</code><br>
	 * <i>native declaration : line 3301</i><br>
	 * @deprecated use the safer methods {@link #dAQmxConfigureTEDS(byte[], byte[])} and {@link #dAQmxConfigureTEDS(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxConfigureTEDS(Pointer physicalChannel, Pointer filePath);
	/**
	 * Original signature : <code>int32 DAQmxConfigureTEDS(const char[], const char[])</code><br>
	 * <i>native declaration : line 3301</i>
	 */
	public static native int dAQmxConfigureTEDS(byte physicalChannel[], byte filePath[]);
	/**
	 * Original signature : <code>int32 DAQmxClearTEDS(const char[])</code><br>
	 * <i>native declaration : line 3302</i><br>
	 * @deprecated use the safer methods {@link #dAQmxClearTEDS(byte[])} and {@link #dAQmxClearTEDS(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxClearTEDS(Pointer physicalChannel);
	/**
	 * Original signature : <code>int32 DAQmxClearTEDS(const char[])</code><br>
	 * <i>native declaration : line 3302</i>
	 */
	public static native int dAQmxClearTEDS(byte physicalChannel[]);
	/**
	 * Original signature : <code>int32 DAQmxWriteToTEDSFromArray(const char[], const uInt8[], uInt32, int32)</code><br>
	 * <i>native declaration : line 3303</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteToTEDSFromArray(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong, int)} and {@link #dAQmxWriteToTEDSFromArray(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteToTEDSFromArray(Pointer physicalChannel, Pointer bitStream, NativeLong arraySize, int basicTEDSOptions);
	/**
	 * Original signature : <code>int32 DAQmxWriteToTEDSFromArray(const char[], const uInt8[], uInt32, int32)</code><br>
	 * <i>native declaration : line 3303</i>
	 */
	public static native int dAQmxWriteToTEDSFromArray(byte physicalChannel[], ByteBuffer bitStream, NativeLong arraySize, int basicTEDSOptions);
	/**
	 * Original signature : <code>int32 DAQmxWriteToTEDSFromFile(const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 3304</i><br>
	 * @deprecated use the safer methods {@link #dAQmxWriteToTEDSFromFile(byte[], byte[], int)} and {@link #dAQmxWriteToTEDSFromFile(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxWriteToTEDSFromFile(Pointer physicalChannel, Pointer filePath, int basicTEDSOptions);
	/**
	 * Original signature : <code>int32 DAQmxWriteToTEDSFromFile(const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 3304</i>
	 */
	public static native int dAQmxWriteToTEDSFromFile(byte physicalChannel[], byte filePath[], int basicTEDSOptions);
	/**
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3305</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanAttribute(byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #dAQmxGetPhysicalChanAttribute(com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanAttribute(Pointer physicalChannel, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3305</i>
	 */
	public static native int dAQmxGetPhysicalChanAttribute(byte physicalChannel[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxWaitForNextSampleClock(TaskHandle, float64, bool32*)</code><br>
	 * <i>native declaration : line 3312</i>
	 */
	public static native int dAQmxWaitForNextSampleClock(Pointer taskHandle, double timeout, NativeLongByReference isLate);
	/**
	 * Original signature : <code>int32 DAQmxGetRealTimeAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 3313</i>
	 */
	public static native int dAQmxGetRealTimeAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetRealTimeAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 3314</i>
	 */
	public static native int dAQmxSetRealTimeAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetRealTimeAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 3315</i>
	 */
	public static native int dAQmxResetRealTimeAttribute(Pointer taskHandle, int attribute);
	/**
	 * Note: This function is obsolete and now always returns zero.<br>
	 * Original signature : <code>bool32 DAQmxIsReadOrWriteLate(int32)</code><br>
	 * <i>native declaration : line 3318</i>
	 */
	public static native NativeLong dAQmxIsReadOrWriteLate(int errorCode);
	/**
	 * Original signature : <code>int32 DAQmxSaveTask(TaskHandle, const char[], const char[], uInt32)</code><br>
	 * <i>native declaration : line 3325</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSaveTask(com.sun.jna.Pointer, byte[], byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSaveTask(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSaveTask(Pointer taskHandle, Pointer saveAs, Pointer author, NativeLong options);
	/**
	 * Original signature : <code>int32 DAQmxSaveTask(TaskHandle, const char[], const char[], uInt32)</code><br>
	 * <i>native declaration : line 3325</i>
	 */
	public static native int dAQmxSaveTask(Pointer taskHandle, byte saveAs[], byte author[], NativeLong options);
	/**
	 * Original signature : <code>int32 DAQmxSaveGlobalChan(TaskHandle, const char[], const char[], const char[], uInt32)</code><br>
	 * <i>native declaration : line 3326</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSaveGlobalChan(com.sun.jna.Pointer, byte[], byte[], byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSaveGlobalChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSaveGlobalChan(Pointer taskHandle, Pointer channelName, Pointer saveAs, Pointer author, NativeLong options);
	/**
	 * Original signature : <code>int32 DAQmxSaveGlobalChan(TaskHandle, const char[], const char[], const char[], uInt32)</code><br>
	 * <i>native declaration : line 3326</i>
	 */
	public static native int dAQmxSaveGlobalChan(Pointer taskHandle, byte channelName[], byte saveAs[], byte author[], NativeLong options);
	/**
	 * Original signature : <code>int32 DAQmxSaveScale(const char[], const char[], const char[], uInt32)</code><br>
	 * <i>native declaration : line 3327</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSaveScale(byte[], byte[], byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSaveScale(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSaveScale(Pointer scaleName, Pointer saveAs, Pointer author, NativeLong options);
	/**
	 * Original signature : <code>int32 DAQmxSaveScale(const char[], const char[], const char[], uInt32)</code><br>
	 * <i>native declaration : line 3327</i>
	 */
	public static native int dAQmxSaveScale(byte scaleName[], byte saveAs[], byte author[], NativeLong options);
	/**
	 * Original signature : <code>int32 DAQmxDeleteSavedTask(const char[])</code><br>
	 * <i>native declaration : line 3328</i><br>
	 * @deprecated use the safer methods {@link #dAQmxDeleteSavedTask(byte[])} and {@link #dAQmxDeleteSavedTask(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxDeleteSavedTask(Pointer taskName);
	/**
	 * Original signature : <code>int32 DAQmxDeleteSavedTask(const char[])</code><br>
	 * <i>native declaration : line 3328</i>
	 */
	public static native int dAQmxDeleteSavedTask(byte taskName[]);
	/**
	 * Original signature : <code>int32 DAQmxDeleteSavedGlobalChan(const char[])</code><br>
	 * <i>native declaration : line 3329</i><br>
	 * @deprecated use the safer methods {@link #dAQmxDeleteSavedGlobalChan(byte[])} and {@link #dAQmxDeleteSavedGlobalChan(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxDeleteSavedGlobalChan(Pointer channelName);
	/**
	 * Original signature : <code>int32 DAQmxDeleteSavedGlobalChan(const char[])</code><br>
	 * <i>native declaration : line 3329</i>
	 */
	public static native int dAQmxDeleteSavedGlobalChan(byte channelName[]);
	/**
	 * Original signature : <code>int32 DAQmxDeleteSavedScale(const char[])</code><br>
	 * <i>native declaration : line 3330</i><br>
	 * @deprecated use the safer methods {@link #dAQmxDeleteSavedScale(byte[])} and {@link #dAQmxDeleteSavedScale(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxDeleteSavedScale(Pointer scaleName);
	/**
	 * Original signature : <code>int32 DAQmxDeleteSavedScale(const char[])</code><br>
	 * <i>native declaration : line 3330</i>
	 */
	public static native int dAQmxDeleteSavedScale(byte scaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxGetPersistedTaskAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3332</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPersistedTaskAttribute(byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #dAQmxGetPersistedTaskAttribute(com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPersistedTaskAttribute(Pointer taskName, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetPersistedTaskAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3332</i>
	 */
	public static native int dAQmxGetPersistedTaskAttribute(byte taskName[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetPersistedChanAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3333</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPersistedChanAttribute(byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #dAQmxGetPersistedChanAttribute(com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPersistedChanAttribute(Pointer channel, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetPersistedChanAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3333</i>
	 */
	public static native int dAQmxGetPersistedChanAttribute(byte channel[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetPersistedScaleAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3334</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPersistedScaleAttribute(byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #dAQmxGetPersistedScaleAttribute(com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPersistedScaleAttribute(Pointer scaleName, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetPersistedScaleAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3334</i>
	 */
	public static native int dAQmxGetPersistedScaleAttribute(byte scaleName[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetSystemInfoAttribute(int32, void*, null)</code><br>
	 * <i>native declaration : line 3341</i>
	 */
	public static native int dAQmxGetSystemInfoAttribute(int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetDigitalPowerUpStates(const char[], const char[], int32, null)</code><br>
	 * <i>native declaration : line 3342</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigitalPowerUpStates(byte[], byte[], int, java.lang.Object)} and {@link #dAQmxSetDigitalPowerUpStates(com.sun.jna.Pointer, com.sun.jna.Pointer, int, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigitalPowerUpStates(Pointer deviceName, Pointer channelNames, int state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetDigitalPowerUpStates(const char[], const char[], int32, null)</code><br>
	 * <i>native declaration : line 3342</i>
	 */
	public static native int dAQmxSetDigitalPowerUpStates(byte deviceName[], byte channelNames[], int state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetDigitalPowerUpStates(const char[], const char[], int32*, null)</code><br>
	 * <i>native declaration : line 3343</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigitalPowerUpStates(byte[], byte[], java.nio.IntBuffer, java.lang.Object)} and {@link #dAQmxGetDigitalPowerUpStates(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigitalPowerUpStates(Pointer deviceName, Pointer channelName, IntByReference state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetDigitalPowerUpStates(const char[], const char[], int32*, null)</code><br>
	 * <i>native declaration : line 3343</i>
	 */
	public static native int dAQmxGetDigitalPowerUpStates(byte deviceName[], byte channelName[], IntBuffer state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetDigitalPullUpPullDownStates(const char[], const char[], int32, null)</code><br>
	 * <i>native declaration : line 3344</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigitalPullUpPullDownStates(byte[], byte[], int, java.lang.Object)} and {@link #dAQmxSetDigitalPullUpPullDownStates(com.sun.jna.Pointer, com.sun.jna.Pointer, int, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigitalPullUpPullDownStates(Pointer deviceName, Pointer channelName, int state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetDigitalPullUpPullDownStates(const char[], const char[], int32, null)</code><br>
	 * <i>native declaration : line 3344</i>
	 */
	public static native int dAQmxSetDigitalPullUpPullDownStates(byte deviceName[], byte channelName[], int state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetDigitalPullUpPullDownStates(const char[], const char[], int32*, null)</code><br>
	 * <i>native declaration : line 3345</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigitalPullUpPullDownStates(byte[], byte[], java.nio.IntBuffer, java.lang.Object)} and {@link #dAQmxGetDigitalPullUpPullDownStates(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigitalPullUpPullDownStates(Pointer deviceName, Pointer channelName, IntByReference state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetDigitalPullUpPullDownStates(const char[], const char[], int32*, null)</code><br>
	 * <i>native declaration : line 3345</i>
	 */
	public static native int dAQmxGetDigitalPullUpPullDownStates(byte deviceName[], byte channelName[], IntBuffer state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetAnalogPowerUpStates(const char[], const char[], float64, int32, null)</code><br>
	 * <i>native declaration : line 3346</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnalogPowerUpStates(byte[], byte[], double, int, java.lang.Object)} and {@link #dAQmxSetAnalogPowerUpStates(com.sun.jna.Pointer, com.sun.jna.Pointer, double, int, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnalogPowerUpStates(Pointer deviceName, Pointer channelNames, double state, int channelType, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetAnalogPowerUpStates(const char[], const char[], float64, int32, null)</code><br>
	 * <i>native declaration : line 3346</i>
	 */
	public static native int dAQmxSetAnalogPowerUpStates(byte deviceName[], byte channelNames[], double state, int channelType, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetAnalogPowerUpStatesWithOutputType(const char[], const float64[], const int32[], uInt32)</code><br>
	 * <i>native declaration : line 3347</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnalogPowerUpStatesWithOutputType(byte[], java.nio.DoubleBuffer, int[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAnalogPowerUpStatesWithOutputType(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnalogPowerUpStatesWithOutputType(Pointer channelNames, DoubleByReference stateArray, IntByReference channelTypeArray, NativeLong arraySize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnalogPowerUpStatesWithOutputType(const char[], const float64[], const int32[], uInt32)</code><br>
	 * <i>native declaration : line 3347</i>
	 */
	public static native int dAQmxSetAnalogPowerUpStatesWithOutputType(byte channelNames[], DoubleBuffer stateArray, int channelTypeArray[], NativeLong arraySize);
	/**
	 * Original signature : <code>int32 DAQmxGetAnalogPowerUpStates(const char[], const char[], float64*, int32, null)</code><br>
	 * <i>native declaration : line 3348</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnalogPowerUpStates(byte[], byte[], java.nio.DoubleBuffer, int, java.lang.Object)} and {@link #dAQmxGetAnalogPowerUpStates(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, int, java.lang.Object)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnalogPowerUpStates(Pointer deviceName, Pointer channelName, DoubleByReference state, int channelType, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetAnalogPowerUpStates(const char[], const char[], float64*, int32, null)</code><br>
	 * <i>native declaration : line 3348</i>
	 */
	public static native int dAQmxGetAnalogPowerUpStates(byte deviceName[], byte channelName[], DoubleBuffer state, int channelType, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetAnalogPowerUpStatesWithOutputType(const char[], float64[], int32[], uInt32*)</code><br>
	 * <i>native declaration : line 3349</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnalogPowerUpStatesWithOutputType(byte[], java.nio.DoubleBuffer, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAnalogPowerUpStatesWithOutputType(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnalogPowerUpStatesWithOutputType(Pointer channelNames, DoubleByReference stateArray, IntByReference channelTypeArray, NativeLongByReference arraySizePtr);
	/**
	 * Original signature : <code>int32 DAQmxGetAnalogPowerUpStatesWithOutputType(const char[], float64[], int32[], uInt32*)</code><br>
	 * <i>native declaration : line 3349</i>
	 */
	public static native int dAQmxGetAnalogPowerUpStatesWithOutputType(byte channelNames[], DoubleBuffer stateArray, IntBuffer channelTypeArray, NativeLongByReference arraySizePtr);
	/**
	 * Original signature : <code>int32 DAQmxSetDigitalLogicFamilyPowerUpState(const char[], int32)</code><br>
	 * <i>native declaration : line 3350</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigitalLogicFamilyPowerUpState(byte[], int)} and {@link #dAQmxSetDigitalLogicFamilyPowerUpState(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigitalLogicFamilyPowerUpState(Pointer deviceName, int logicFamily);
	/**
	 * Original signature : <code>int32 DAQmxSetDigitalLogicFamilyPowerUpState(const char[], int32)</code><br>
	 * <i>native declaration : line 3350</i>
	 */
	public static native int dAQmxSetDigitalLogicFamilyPowerUpState(byte deviceName[], int logicFamily);
	/**
	 * Original signature : <code>int32 DAQmxGetDigitalLogicFamilyPowerUpState(const char[], int32*)</code><br>
	 * <i>native declaration : line 3351</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigitalLogicFamilyPowerUpState(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDigitalLogicFamilyPowerUpState(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigitalLogicFamilyPowerUpState(Pointer deviceName, IntByReference logicFamily);
	/**
	 * Original signature : <code>int32 DAQmxGetDigitalLogicFamilyPowerUpState(const char[], int32*)</code><br>
	 * <i>native declaration : line 3351</i>
	 */
	public static native int dAQmxGetDigitalLogicFamilyPowerUpState(byte deviceName[], IntBuffer logicFamily);
	/**
	 * Original signature : <code>int32 DAQmxAddNetworkDevice(const char[], const char[], bool32, float64, char[], uInt32)</code><br>
	 * <i>native declaration : line 3352</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAddNetworkDevice(byte[], byte[], com.sun.jna.NativeLong, double, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxAddNetworkDevice(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, double, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxAddNetworkDevice(Pointer IPAddress, Pointer deviceName, NativeLong attemptReservation, double timeout, Pointer deviceNameOut, NativeLong deviceNameOutBufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAddNetworkDevice(const char[], const char[], bool32, float64, char[], uInt32)</code><br>
	 * <i>native declaration : line 3352</i>
	 */
	public static native int dAQmxAddNetworkDevice(byte IPAddress[], byte deviceName[], NativeLong attemptReservation, double timeout, ByteBuffer deviceNameOut, NativeLong deviceNameOutBufferSize);
	/**
	 * Original signature : <code>int32 DAQmxDeleteNetworkDevice(const char[])</code><br>
	 * <i>native declaration : line 3353</i><br>
	 * @deprecated use the safer methods {@link #dAQmxDeleteNetworkDevice(byte[])} and {@link #dAQmxDeleteNetworkDevice(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxDeleteNetworkDevice(Pointer deviceName);
	/**
	 * Original signature : <code>int32 DAQmxDeleteNetworkDevice(const char[])</code><br>
	 * <i>native declaration : line 3353</i>
	 */
	public static native int dAQmxDeleteNetworkDevice(byte deviceName[]);
	/**
	 * Original signature : <code>int32 DAQmxReserveNetworkDevice(const char[], bool32)</code><br>
	 * <i>native declaration : line 3354</i><br>
	 * @deprecated use the safer methods {@link #dAQmxReserveNetworkDevice(byte[], com.sun.jna.NativeLong)} and {@link #dAQmxReserveNetworkDevice(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxReserveNetworkDevice(Pointer deviceName, NativeLong overrideReservation);
	/**
	 * Original signature : <code>int32 DAQmxReserveNetworkDevice(const char[], bool32)</code><br>
	 * <i>native declaration : line 3354</i>
	 */
	public static native int dAQmxReserveNetworkDevice(byte deviceName[], NativeLong overrideReservation);
	/**
	 * Original signature : <code>int32 DAQmxUnreserveNetworkDevice(const char[])</code><br>
	 * <i>native declaration : line 3355</i><br>
	 * @deprecated use the safer methods {@link #dAQmxUnreserveNetworkDevice(byte[])} and {@link #dAQmxUnreserveNetworkDevice(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxUnreserveNetworkDevice(Pointer deviceName);
	/**
	 * Original signature : <code>int32 DAQmxUnreserveNetworkDevice(const char[])</code><br>
	 * <i>native declaration : line 3355</i>
	 */
	public static native int dAQmxUnreserveNetworkDevice(byte deviceName[]);
	/**
	 * Original signature : <code>int32 DAQmxAutoConfigureCDAQSyncConnections(const char[], float64)</code><br>
	 * <i>native declaration : line 3362</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAutoConfigureCDAQSyncConnections(byte[], double)} and {@link #dAQmxAutoConfigureCDAQSyncConnections(com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxAutoConfigureCDAQSyncConnections(Pointer chassisDevicesPorts, double timeout);
	/**
	 * Original signature : <code>int32 DAQmxAutoConfigureCDAQSyncConnections(const char[], float64)</code><br>
	 * <i>native declaration : line 3362</i>
	 */
	public static native int dAQmxAutoConfigureCDAQSyncConnections(byte chassisDevicesPorts[], double timeout);
	/**
	 * Original signature : <code>int32 DAQmxGetAutoConfiguredCDAQSyncConnections(char[], uInt32)</code><br>
	 * <i>native declaration : line 3363</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAutoConfiguredCDAQSyncConnections(java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAutoConfiguredCDAQSyncConnections(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAutoConfiguredCDAQSyncConnections(Pointer portList, NativeLong portListSize);
	/**
	 * Original signature : <code>int32 DAQmxGetAutoConfiguredCDAQSyncConnections(char[], uInt32)</code><br>
	 * <i>native declaration : line 3363</i>
	 */
	public static native int dAQmxGetAutoConfiguredCDAQSyncConnections(ByteBuffer portList, NativeLong portListSize);
	/**
	 * Original signature : <code>int32 DAQmxAreConfiguredCDAQSyncPortsDisconnected(const char[], float64, bool32*)</code><br>
	 * <i>native declaration : line 3364</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAreConfiguredCDAQSyncPortsDisconnected(byte[], double, com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxAreConfiguredCDAQSyncPortsDisconnected(com.sun.jna.Pointer, double, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxAreConfiguredCDAQSyncPortsDisconnected(Pointer chassisDevicesPorts, double timeout, NativeLongByReference disconnectedPortsExist);
	/**
	 * Original signature : <code>int32 DAQmxAreConfiguredCDAQSyncPortsDisconnected(const char[], float64, bool32*)</code><br>
	 * <i>native declaration : line 3364</i>
	 */
	public static native int dAQmxAreConfiguredCDAQSyncPortsDisconnected(byte chassisDevicesPorts[], double timeout, NativeLongByReference disconnectedPortsExist);
	/**
	 * Original signature : <code>int32 DAQmxGetDisconnectedCDAQSyncPorts(char[], uInt32)</code><br>
	 * <i>native declaration : line 3365</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDisconnectedCDAQSyncPorts(java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDisconnectedCDAQSyncPorts(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDisconnectedCDAQSyncPorts(Pointer portList, NativeLong portListSize);
	/**
	 * Original signature : <code>int32 DAQmxGetDisconnectedCDAQSyncPorts(char[], uInt32)</code><br>
	 * <i>native declaration : line 3365</i>
	 */
	public static native int dAQmxGetDisconnectedCDAQSyncPorts(ByteBuffer portList, NativeLong portListSize);
	/**
	 * Original signature : <code>int32 DAQmxAddCDAQSyncConnection(const char[])</code><br>
	 * <i>native declaration : line 3366</i><br>
	 * @deprecated use the safer methods {@link #dAQmxAddCDAQSyncConnection(byte[])} and {@link #dAQmxAddCDAQSyncConnection(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxAddCDAQSyncConnection(Pointer portList);
	/**
	 * Original signature : <code>int32 DAQmxAddCDAQSyncConnection(const char[])</code><br>
	 * <i>native declaration : line 3366</i>
	 */
	public static native int dAQmxAddCDAQSyncConnection(byte portList[]);
	/**
	 * Original signature : <code>int32 DAQmxRemoveCDAQSyncConnection(const char[])</code><br>
	 * <i>native declaration : line 3367</i><br>
	 * @deprecated use the safer methods {@link #dAQmxRemoveCDAQSyncConnection(byte[])} and {@link #dAQmxRemoveCDAQSyncConnection(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxRemoveCDAQSyncConnection(Pointer portList);
	/**
	 * Original signature : <code>int32 DAQmxRemoveCDAQSyncConnection(const char[])</code><br>
	 * <i>native declaration : line 3367</i>
	 */
	public static native int dAQmxRemoveCDAQSyncConnection(byte portList[]);
	/**
	 * Original signature : <code>int32 DAQmxGetErrorString(int32, char[], uInt32)</code><br>
	 * <i>native declaration : line 3376</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetErrorString(int, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetErrorString(int, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetErrorString(int errorCode, Pointer errorString, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetErrorString(int32, char[], uInt32)</code><br>
	 * <i>native declaration : line 3376</i>
	 */
	public static native int dAQmxGetErrorString(int errorCode, ByteBuffer errorString, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetExtendedErrorInfo(char[], uInt32)</code><br>
	 * <i>native declaration : line 3377</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExtendedErrorInfo(java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetExtendedErrorInfo(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExtendedErrorInfo(Pointer errorString, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetExtendedErrorInfo(char[], uInt32)</code><br>
	 * <i>native declaration : line 3377</i>
	 */
	public static native int dAQmxGetExtendedErrorInfo(ByteBuffer errorString, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Buf_Input_BufSize ***<br>
	 * Original signature : <code>int32 DAQmxGetBufInputBufSize(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 3386</i>
	 */
	public static native int dAQmxGetBufInputBufSize(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetBufInputBufSize(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 3387</i>
	 */
	public static native int dAQmxSetBufInputBufSize(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetBufInputBufSize(TaskHandle)</code><br>
	 * <i>native declaration : line 3388</i>
	 */
	public static native int dAQmxResetBufInputBufSize(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Buf_Input_OnbrdBufSize ***<br>
	 * Original signature : <code>int32 DAQmxGetBufInputOnbrdBufSize(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 3390</i>
	 */
	public static native int dAQmxGetBufInputOnbrdBufSize(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Buf_Output_BufSize ***<br>
	 * Original signature : <code>int32 DAQmxGetBufOutputBufSize(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 3392</i>
	 */
	public static native int dAQmxGetBufOutputBufSize(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetBufOutputBufSize(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 3393</i>
	 */
	public static native int dAQmxSetBufOutputBufSize(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetBufOutputBufSize(TaskHandle)</code><br>
	 * <i>native declaration : line 3394</i>
	 */
	public static native int dAQmxResetBufOutputBufSize(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Buf_Output_OnbrdBufSize ***<br>
	 * Original signature : <code>int32 DAQmxGetBufOutputOnbrdBufSize(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 3396</i>
	 */
	public static native int dAQmxGetBufOutputOnbrdBufSize(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetBufOutputOnbrdBufSize(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 3397</i>
	 */
	public static native int dAQmxSetBufOutputOnbrdBufSize(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetBufOutputOnbrdBufSize(TaskHandle)</code><br>
	 * <i>native declaration : line 3398</i>
	 */
	public static native int dAQmxResetBufOutputOnbrdBufSize(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SelfCal_Supported ***<br>
	 * Original signature : <code>int32 DAQmxGetSelfCalSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 3402</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSelfCalSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetSelfCalSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSelfCalSupported(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SelfCal_Supported ***<br>
	 * Original signature : <code>int32 DAQmxGetSelfCalSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 3402</i>
	 */
	public static native int dAQmxGetSelfCalSupported(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SelfCal_LastTemp ***<br>
	 * Original signature : <code>int32 DAQmxGetSelfCalLastTemp(const char[], float64*)</code><br>
	 * <i>native declaration : line 3404</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSelfCalLastTemp(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSelfCalLastTemp(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSelfCalLastTemp(Pointer deviceName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SelfCal_LastTemp ***<br>
	 * Original signature : <code>int32 DAQmxGetSelfCalLastTemp(const char[], float64*)</code><br>
	 * <i>native declaration : line 3404</i>
	 */
	public static native int dAQmxGetSelfCalLastTemp(byte deviceName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_ExtCal_RecommendedInterval ***<br>
	 * Original signature : <code>int32 DAQmxGetExtCalRecommendedInterval(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3406</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExtCalRecommendedInterval(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetExtCalRecommendedInterval(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExtCalRecommendedInterval(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_ExtCal_RecommendedInterval ***<br>
	 * Original signature : <code>int32 DAQmxGetExtCalRecommendedInterval(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3406</i>
	 */
	public static native int dAQmxGetExtCalRecommendedInterval(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_ExtCal_LastTemp ***<br>
	 * Original signature : <code>int32 DAQmxGetExtCalLastTemp(const char[], float64*)</code><br>
	 * <i>native declaration : line 3408</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExtCalLastTemp(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetExtCalLastTemp(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExtCalLastTemp(Pointer deviceName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_ExtCal_LastTemp ***<br>
	 * Original signature : <code>int32 DAQmxGetExtCalLastTemp(const char[], float64*)</code><br>
	 * <i>native declaration : line 3408</i>
	 */
	public static native int dAQmxGetExtCalLastTemp(byte deviceName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Cal_UserDefinedInfo ***<br>
	 * Original signature : <code>int32 DAQmxGetCalUserDefinedInfo(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3410</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCalUserDefinedInfo(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCalUserDefinedInfo(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCalUserDefinedInfo(Pointer deviceName, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Cal_UserDefinedInfo ***<br>
	 * Original signature : <code>int32 DAQmxGetCalUserDefinedInfo(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3410</i>
	 */
	public static native int dAQmxGetCalUserDefinedInfo(byte deviceName[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCalUserDefinedInfo(const char[], const char*)</code><br>
	 * <i>native declaration : line 3411</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCalUserDefinedInfo(byte[], java.lang.String)} and {@link #dAQmxSetCalUserDefinedInfo(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCalUserDefinedInfo(Pointer deviceName, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCalUserDefinedInfo(const char[], const char*)</code><br>
	 * <i>native declaration : line 3411</i>
	 */
	public static native int dAQmxSetCalUserDefinedInfo(byte deviceName[], String data);
	/**
	 * *** Set/Get functions for DAQmx_Cal_UserDefinedInfo_MaxSize ***<br>
	 * Original signature : <code>int32 DAQmxGetCalUserDefinedInfoMaxSize(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3413</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCalUserDefinedInfoMaxSize(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCalUserDefinedInfoMaxSize(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCalUserDefinedInfoMaxSize(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Cal_UserDefinedInfo_MaxSize ***<br>
	 * Original signature : <code>int32 DAQmxGetCalUserDefinedInfoMaxSize(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3413</i>
	 */
	public static native int dAQmxGetCalUserDefinedInfoMaxSize(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Cal_DevTemp ***<br>
	 * Original signature : <code>int32 DAQmxGetCalDevTemp(const char[], float64*)</code><br>
	 * <i>native declaration : line 3415</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCalDevTemp(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCalDevTemp(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCalDevTemp(Pointer deviceName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Cal_DevTemp ***<br>
	 * Original signature : <code>int32 DAQmxGetCalDevTemp(const char[], float64*)</code><br>
	 * <i>native declaration : line 3415</i>
	 */
	public static native int dAQmxGetCalDevTemp(byte deviceName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Cal_AccConnectionCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCalAccConnectionCount(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3417</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCalAccConnectionCount(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCalAccConnectionCount(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCalAccConnectionCount(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Cal_AccConnectionCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCalAccConnectionCount(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3417</i>
	 */
	public static native int dAQmxGetCalAccConnectionCount(byte deviceName[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCalAccConnectionCount(const char[], uInt32)</code><br>
	 * <i>native declaration : line 3418</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCalAccConnectionCount(byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCalAccConnectionCount(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCalAccConnectionCount(Pointer deviceName, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCalAccConnectionCount(const char[], uInt32)</code><br>
	 * <i>native declaration : line 3418</i>
	 */
	public static native int dAQmxSetCalAccConnectionCount(byte deviceName[], NativeLong data);
	/**
	 * *** Set/Get functions for DAQmx_Cal_RecommendedAccConnectionCountLimit ***<br>
	 * Original signature : <code>int32 DAQmxGetCalRecommendedAccConnectionCountLimit(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3420</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCalRecommendedAccConnectionCountLimit(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCalRecommendedAccConnectionCountLimit(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCalRecommendedAccConnectionCountLimit(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Cal_RecommendedAccConnectionCountLimit ***<br>
	 * Original signature : <code>int32 DAQmxGetCalRecommendedAccConnectionCountLimit(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3420</i>
	 */
	public static native int dAQmxGetCalRecommendedAccConnectionCountLimit(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Max ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMax(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3424</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIMax(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIMax(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIMax(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Max ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMax(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3424</i>
	 */
	public static native int dAQmxGetAIMax(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIMax(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3425</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIMax(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIMax(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIMax(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIMax(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3425</i>
	 */
	public static native int dAQmxSetAIMax(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIMax(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3426</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIMax(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIMax(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIMax(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIMax(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3426</i>
	 */
	public static native int dAQmxResetAIMax(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Min ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMin(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3428</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIMin(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIMin(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIMin(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Min ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMin(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3428</i>
	 */
	public static native int dAQmxGetAIMin(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIMin(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3429</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIMin(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIMin(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIMin(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIMin(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3429</i>
	 */
	public static native int dAQmxSetAIMin(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIMin(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3430</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIMin(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIMin(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIMin(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIMin(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3430</i>
	 */
	public static native int dAQmxResetAIMin(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_CustomScaleName ***<br>
	 * Original signature : <code>int32 DAQmxGetAICustomScaleName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3432</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAICustomScaleName(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAICustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAICustomScaleName(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AI_CustomScaleName ***<br>
	 * Original signature : <code>int32 DAQmxGetAICustomScaleName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3432</i>
	 */
	public static native int dAQmxGetAICustomScaleName(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAICustomScaleName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 3433</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAICustomScaleName(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetAICustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAICustomScaleName(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICustomScaleName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 3433</i>
	 */
	public static native int dAQmxSetAICustomScaleName(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAICustomScaleName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3434</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAICustomScaleName(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAICustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAICustomScaleName(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAICustomScaleName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3434</i>
	 */
	public static native int dAQmxResetAICustomScaleName(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetAIMeasType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3437</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIMeasType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIMeasType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIMeasType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetAIMeasType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3437</i>
	 */
	public static native int dAQmxGetAIMeasType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Uses value set VoltageUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIVoltageUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3440</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIVoltageUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIVoltageUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIVoltageUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set VoltageUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIVoltageUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3440</i>
	 */
	public static native int dAQmxGetAIVoltageUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVoltageUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3441</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIVoltageUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIVoltageUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIVoltageUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVoltageUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3441</i>
	 */
	public static native int dAQmxSetAIVoltageUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVoltageUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3442</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIVoltageUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIVoltageUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIVoltageUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVoltageUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3442</i>
	 */
	public static native int dAQmxResetAIVoltageUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Voltage_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAIVoltagedBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3444</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIVoltagedBRef(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIVoltagedBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIVoltagedBRef(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Voltage_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAIVoltagedBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3444</i>
	 */
	public static native int dAQmxGetAIVoltagedBRef(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVoltagedBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3445</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIVoltagedBRef(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIVoltagedBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIVoltagedBRef(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVoltagedBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3445</i>
	 */
	public static native int dAQmxSetAIVoltagedBRef(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVoltagedBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3446</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIVoltagedBRef(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIVoltagedBRef(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIVoltagedBRef(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVoltagedBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3446</i>
	 */
	public static native int dAQmxResetAIVoltagedBRef(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set VoltageUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIVoltageACRMSUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3449</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIVoltageACRMSUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIVoltageACRMSUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIVoltageACRMSUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set VoltageUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIVoltageACRMSUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3449</i>
	 */
	public static native int dAQmxGetAIVoltageACRMSUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVoltageACRMSUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3450</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIVoltageACRMSUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIVoltageACRMSUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIVoltageACRMSUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVoltageACRMSUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3450</i>
	 */
	public static native int dAQmxSetAIVoltageACRMSUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVoltageACRMSUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3451</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIVoltageACRMSUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIVoltageACRMSUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIVoltageACRMSUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVoltageACRMSUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3451</i>
	 */
	public static native int dAQmxResetAIVoltageACRMSUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TemperatureUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAITempUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3454</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAITempUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAITempUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAITempUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TemperatureUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAITempUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3454</i>
	 */
	public static native int dAQmxGetAITempUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAITempUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3455</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAITempUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAITempUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAITempUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAITempUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3455</i>
	 */
	public static native int dAQmxSetAITempUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAITempUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3456</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAITempUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAITempUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAITempUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAITempUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3456</i>
	 */
	public static native int dAQmxResetAITempUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ThermocoupleType1<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3459</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIThrmcplType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIThrmcplType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIThrmcplType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ThermocoupleType1<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3459</i>
	 */
	public static native int dAQmxGetAIThrmcplType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmcplType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3460</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIThrmcplType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIThrmcplType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIThrmcplType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmcplType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3460</i>
	 */
	public static native int dAQmxSetAIThrmcplType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmcplType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3461</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIThrmcplType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIThrmcplType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIThrmcplType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmcplType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3461</i>
	 */
	public static native int dAQmxResetAIThrmcplType(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ScaleType2<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplScaleType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3464</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIThrmcplScaleType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIThrmcplScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIThrmcplScaleType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ScaleType2<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplScaleType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3464</i>
	 */
	public static native int dAQmxGetAIThrmcplScaleType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmcplScaleType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3465</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIThrmcplScaleType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIThrmcplScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIThrmcplScaleType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmcplScaleType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3465</i>
	 */
	public static native int dAQmxSetAIThrmcplScaleType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmcplScaleType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3466</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIThrmcplScaleType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIThrmcplScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIThrmcplScaleType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmcplScaleType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3466</i>
	 */
	public static native int dAQmxResetAIThrmcplScaleType(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CJCSource1<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplCJCSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3469</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIThrmcplCJCSrc(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIThrmcplCJCSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIThrmcplCJCSrc(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CJCSource1<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplCJCSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3469</i>
	 */
	public static native int dAQmxGetAIThrmcplCJCSrc(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmcpl_CJCVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplCJCVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3471</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIThrmcplCJCVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIThrmcplCJCVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIThrmcplCJCVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmcpl_CJCVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplCJCVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3471</i>
	 */
	public static native int dAQmxGetAIThrmcplCJCVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmcplCJCVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3472</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIThrmcplCJCVal(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIThrmcplCJCVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIThrmcplCJCVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmcplCJCVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3472</i>
	 */
	public static native int dAQmxSetAIThrmcplCJCVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmcplCJCVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3473</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIThrmcplCJCVal(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIThrmcplCJCVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIThrmcplCJCVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmcplCJCVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3473</i>
	 */
	public static native int dAQmxResetAIThrmcplCJCVal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmcpl_CJCChan ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplCJCChan(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3475</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIThrmcplCJCChan(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIThrmcplCJCChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIThrmcplCJCChan(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmcpl_CJCChan ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplCJCChan(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3475</i>
	 */
	public static native int dAQmxGetAIThrmcplCJCChan(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Uses value set RTDType1<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3478</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRTDType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIRTDType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRTDType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set RTDType1<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3478</i>
	 */
	public static native int dAQmxGetAIRTDType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3479</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRTDType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIRTDType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRTDType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3479</i>
	 */
	public static native int dAQmxSetAIRTDType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3480</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRTDType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRTDType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRTDType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3480</i>
	 */
	public static native int dAQmxResetAIRTDType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_R0 ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDR0(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3482</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRTDR0(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIRTDR0(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRTDR0(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_R0 ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDR0(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3482</i>
	 */
	public static native int dAQmxGetAIRTDR0(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDR0(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3483</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRTDR0(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIRTDR0(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRTDR0(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDR0(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3483</i>
	 */
	public static native int dAQmxSetAIRTDR0(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDR0(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3484</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRTDR0(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRTDR0(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRTDR0(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDR0(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3484</i>
	 */
	public static native int dAQmxResetAIRTDR0(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_A ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDA(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3486</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRTDA(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIRTDA(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRTDA(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_A ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDA(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3486</i>
	 */
	public static native int dAQmxGetAIRTDA(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDA(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3487</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRTDA(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIRTDA(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRTDA(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDA(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3487</i>
	 */
	public static native int dAQmxSetAIRTDA(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDA(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3488</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRTDA(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRTDA(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRTDA(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDA(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3488</i>
	 */
	public static native int dAQmxResetAIRTDA(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_B ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDB(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3490</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRTDB(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIRTDB(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRTDB(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_B ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDB(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3490</i>
	 */
	public static native int dAQmxGetAIRTDB(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDB(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3491</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRTDB(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIRTDB(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRTDB(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDB(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3491</i>
	 */
	public static native int dAQmxSetAIRTDB(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDB(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3492</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRTDB(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRTDB(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRTDB(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDB(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3492</i>
	 */
	public static native int dAQmxResetAIRTDB(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_C ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDC(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3494</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRTDC(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIRTDC(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRTDC(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_C ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDC(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3494</i>
	 */
	public static native int dAQmxGetAIRTDC(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDC(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3495</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRTDC(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIRTDC(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRTDC(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDC(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3495</i>
	 */
	public static native int dAQmxSetAIRTDC(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDC(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3496</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRTDC(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRTDC(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRTDC(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDC(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3496</i>
	 */
	public static native int dAQmxResetAIRTDC(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_A ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrA(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3498</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIThrmstrA(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIThrmstrA(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIThrmstrA(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_A ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrA(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3498</i>
	 */
	public static native int dAQmxGetAIThrmstrA(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrA(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3499</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIThrmstrA(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIThrmstrA(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIThrmstrA(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrA(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3499</i>
	 */
	public static native int dAQmxSetAIThrmstrA(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrA(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3500</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIThrmstrA(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIThrmstrA(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIThrmstrA(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrA(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3500</i>
	 */
	public static native int dAQmxResetAIThrmstrA(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_B ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrB(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3502</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIThrmstrB(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIThrmstrB(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIThrmstrB(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_B ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrB(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3502</i>
	 */
	public static native int dAQmxGetAIThrmstrB(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrB(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3503</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIThrmstrB(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIThrmstrB(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIThrmstrB(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrB(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3503</i>
	 */
	public static native int dAQmxSetAIThrmstrB(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrB(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3504</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIThrmstrB(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIThrmstrB(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIThrmstrB(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrB(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3504</i>
	 */
	public static native int dAQmxResetAIThrmstrB(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_C ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrC(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3506</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIThrmstrC(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIThrmstrC(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIThrmstrC(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_C ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrC(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3506</i>
	 */
	public static native int dAQmxGetAIThrmstrC(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrC(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3507</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIThrmstrC(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIThrmstrC(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIThrmstrC(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrC(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3507</i>
	 */
	public static native int dAQmxSetAIThrmstrC(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrC(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3508</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIThrmstrC(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIThrmstrC(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIThrmstrC(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrC(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3508</i>
	 */
	public static native int dAQmxResetAIThrmstrC(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_R1 ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrR1(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3510</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIThrmstrR1(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIThrmstrR1(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIThrmstrR1(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_R1 ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrR1(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3510</i>
	 */
	public static native int dAQmxGetAIThrmstrR1(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrR1(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3511</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIThrmstrR1(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIThrmstrR1(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIThrmstrR1(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrR1(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3511</i>
	 */
	public static native int dAQmxSetAIThrmstrR1(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrR1(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3512</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIThrmstrR1(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIThrmstrR1(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIThrmstrR1(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrR1(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3512</i>
	 */
	public static native int dAQmxResetAIThrmstrR1(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ForceReadFromChan ***<br>
	 * Original signature : <code>int32 DAQmxGetAIForceReadFromChan(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3514</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIForceReadFromChan(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIForceReadFromChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIForceReadFromChan(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ForceReadFromChan ***<br>
	 * Original signature : <code>int32 DAQmxGetAIForceReadFromChan(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3514</i>
	 */
	public static native int dAQmxGetAIForceReadFromChan(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceReadFromChan(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3515</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIForceReadFromChan(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIForceReadFromChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIForceReadFromChan(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceReadFromChan(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3515</i>
	 */
	public static native int dAQmxSetAIForceReadFromChan(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceReadFromChan(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3516</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIForceReadFromChan(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIForceReadFromChan(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIForceReadFromChan(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceReadFromChan(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3516</i>
	 */
	public static native int dAQmxResetAIForceReadFromChan(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CurrentUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3519</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAICurrentUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAICurrentUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAICurrentUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CurrentUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3519</i>
	 */
	public static native int dAQmxGetAICurrentUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3520</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAICurrentUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAICurrentUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAICurrentUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3520</i>
	 */
	public static native int dAQmxSetAICurrentUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3521</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAICurrentUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAICurrentUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAICurrentUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3521</i>
	 */
	public static native int dAQmxResetAICurrentUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CurrentUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentACRMSUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3524</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAICurrentACRMSUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAICurrentACRMSUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAICurrentACRMSUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CurrentUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentACRMSUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3524</i>
	 */
	public static native int dAQmxGetAICurrentACRMSUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentACRMSUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3525</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAICurrentACRMSUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAICurrentACRMSUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAICurrentACRMSUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentACRMSUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3525</i>
	 */
	public static native int dAQmxSetAICurrentACRMSUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentACRMSUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3526</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAICurrentACRMSUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAICurrentACRMSUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAICurrentACRMSUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentACRMSUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3526</i>
	 */
	public static native int dAQmxResetAICurrentACRMSUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set StrainUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3529</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIStrainUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIStrainUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIStrainUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set StrainUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3529</i>
	 */
	public static native int dAQmxGetAIStrainUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3530</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIStrainUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIStrainUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIStrainUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3530</i>
	 */
	public static native int dAQmxSetAIStrainUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3531</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIStrainUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIStrainUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIStrainUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3531</i>
	 */
	public static native int dAQmxResetAIStrainUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_StrainGage_ForceReadFromChan ***<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGageForceReadFromChan(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3533</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIStrainGageForceReadFromChan(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIStrainGageForceReadFromChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIStrainGageForceReadFromChan(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_StrainGage_ForceReadFromChan ***<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGageForceReadFromChan(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3533</i>
	 */
	public static native int dAQmxGetAIStrainGageForceReadFromChan(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGageForceReadFromChan(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3534</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIStrainGageForceReadFromChan(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIStrainGageForceReadFromChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIStrainGageForceReadFromChan(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGageForceReadFromChan(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3534</i>
	 */
	public static native int dAQmxSetAIStrainGageForceReadFromChan(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGageForceReadFromChan(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3535</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIStrainGageForceReadFromChan(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIStrainGageForceReadFromChan(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIStrainGageForceReadFromChan(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGageForceReadFromChan(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3535</i>
	 */
	public static native int dAQmxResetAIStrainGageForceReadFromChan(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_StrainGage_GageFactor ***<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGageGageFactor(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3537</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIStrainGageGageFactor(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIStrainGageGageFactor(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIStrainGageGageFactor(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_StrainGage_GageFactor ***<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGageGageFactor(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3537</i>
	 */
	public static native int dAQmxGetAIStrainGageGageFactor(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGageGageFactor(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3538</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIStrainGageGageFactor(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIStrainGageGageFactor(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIStrainGageGageFactor(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGageGageFactor(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3538</i>
	 */
	public static native int dAQmxSetAIStrainGageGageFactor(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGageGageFactor(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3539</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIStrainGageGageFactor(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIStrainGageGageFactor(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIStrainGageGageFactor(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGageGageFactor(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3539</i>
	 */
	public static native int dAQmxResetAIStrainGageGageFactor(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_StrainGage_PoissonRatio ***<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGagePoissonRatio(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3541</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIStrainGagePoissonRatio(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIStrainGagePoissonRatio(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIStrainGagePoissonRatio(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_StrainGage_PoissonRatio ***<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGagePoissonRatio(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3541</i>
	 */
	public static native int dAQmxGetAIStrainGagePoissonRatio(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGagePoissonRatio(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3542</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIStrainGagePoissonRatio(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIStrainGagePoissonRatio(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIStrainGagePoissonRatio(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGagePoissonRatio(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3542</i>
	 */
	public static native int dAQmxSetAIStrainGagePoissonRatio(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGagePoissonRatio(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3543</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIStrainGagePoissonRatio(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIStrainGagePoissonRatio(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIStrainGagePoissonRatio(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGagePoissonRatio(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3543</i>
	 */
	public static native int dAQmxResetAIStrainGagePoissonRatio(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set StrainGageBridgeType1<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGageCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3546</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIStrainGageCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIStrainGageCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIStrainGageCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set StrainGageBridgeType1<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGageCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3546</i>
	 */
	public static native int dAQmxGetAIStrainGageCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGageCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3547</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIStrainGageCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIStrainGageCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIStrainGageCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGageCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3547</i>
	 */
	public static native int dAQmxSetAIStrainGageCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGageCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3548</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIStrainGageCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIStrainGageCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIStrainGageCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGageCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3548</i>
	 */
	public static native int dAQmxResetAIStrainGageCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set StrainGageRosetteType<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageRosetteType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3551</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRosetteStrainGageRosetteType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIRosetteStrainGageRosetteType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRosetteStrainGageRosetteType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set StrainGageRosetteType<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageRosetteType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3551</i>
	 */
	public static native int dAQmxGetAIRosetteStrainGageRosetteType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RosetteStrainGage_Orientation ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageOrientation(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3553</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRosetteStrainGageOrientation(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIRosetteStrainGageOrientation(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRosetteStrainGageOrientation(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RosetteStrainGage_Orientation ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageOrientation(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3553</i>
	 */
	public static native int dAQmxGetAIRosetteStrainGageOrientation(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRosetteStrainGageOrientation(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3554</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRosetteStrainGageOrientation(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIRosetteStrainGageOrientation(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRosetteStrainGageOrientation(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRosetteStrainGageOrientation(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3554</i>
	 */
	public static native int dAQmxSetAIRosetteStrainGageOrientation(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRosetteStrainGageOrientation(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3555</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRosetteStrainGageOrientation(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRosetteStrainGageOrientation(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRosetteStrainGageOrientation(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRosetteStrainGageOrientation(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3555</i>
	 */
	public static native int dAQmxResetAIRosetteStrainGageOrientation(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RosetteStrainGage_StrainChans ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageStrainChans(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3557</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRosetteStrainGageStrainChans(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIRosetteStrainGageStrainChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRosetteStrainGageStrainChans(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AI_RosetteStrainGage_StrainChans ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageStrainChans(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3557</i>
	 */
	public static native int dAQmxGetAIRosetteStrainGageStrainChans(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Uses value set StrainGageRosetteMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageRosetteMeasType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3560</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRosetteStrainGageRosetteMeasType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIRosetteStrainGageRosetteMeasType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRosetteStrainGageRosetteMeasType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set StrainGageRosetteMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageRosetteMeasType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3560</i>
	 */
	public static native int dAQmxGetAIRosetteStrainGageRosetteMeasType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRosetteStrainGageRosetteMeasType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3561</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRosetteStrainGageRosetteMeasType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIRosetteStrainGageRosetteMeasType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRosetteStrainGageRosetteMeasType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRosetteStrainGageRosetteMeasType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3561</i>
	 */
	public static native int dAQmxSetAIRosetteStrainGageRosetteMeasType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRosetteStrainGageRosetteMeasType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3562</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRosetteStrainGageRosetteMeasType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRosetteStrainGageRosetteMeasType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRosetteStrainGageRosetteMeasType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRosetteStrainGageRosetteMeasType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3562</i>
	 */
	public static native int dAQmxResetAIRosetteStrainGageRosetteMeasType(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ResistanceUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIResistanceUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3565</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIResistanceUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIResistanceUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIResistanceUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ResistanceUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIResistanceUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3565</i>
	 */
	public static native int dAQmxGetAIResistanceUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIResistanceUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3566</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIResistanceUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIResistanceUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIResistanceUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIResistanceUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3566</i>
	 */
	public static native int dAQmxSetAIResistanceUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIResistanceUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3567</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIResistanceUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIResistanceUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIResistanceUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIResistanceUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3567</i>
	 */
	public static native int dAQmxResetAIResistanceUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set FrequencyUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3570</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIFreqUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIFreqUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FrequencyUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3570</i>
	 */
	public static native int dAQmxGetAIFreqUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3571</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIFreqUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIFreqUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3571</i>
	 */
	public static native int dAQmxSetAIFreqUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3572</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIFreqUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIFreqUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3572</i>
	 */
	public static native int dAQmxResetAIFreqUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Freq_ThreshVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFreqThreshVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3574</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIFreqThreshVoltage(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIFreqThreshVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIFreqThreshVoltage(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Freq_ThreshVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFreqThreshVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3574</i>
	 */
	public static native int dAQmxGetAIFreqThreshVoltage(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFreqThreshVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3575</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIFreqThreshVoltage(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIFreqThreshVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIFreqThreshVoltage(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFreqThreshVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3575</i>
	 */
	public static native int dAQmxSetAIFreqThreshVoltage(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFreqThreshVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3576</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIFreqThreshVoltage(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIFreqThreshVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIFreqThreshVoltage(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFreqThreshVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3576</i>
	 */
	public static native int dAQmxResetAIFreqThreshVoltage(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Freq_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFreqHyst(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3578</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIFreqHyst(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIFreqHyst(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIFreqHyst(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Freq_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFreqHyst(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3578</i>
	 */
	public static native int dAQmxGetAIFreqHyst(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFreqHyst(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3579</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIFreqHyst(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIFreqHyst(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIFreqHyst(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFreqHyst(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3579</i>
	 */
	public static native int dAQmxSetAIFreqHyst(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFreqHyst(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3580</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIFreqHyst(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIFreqHyst(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIFreqHyst(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFreqHyst(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3580</i>
	 */
	public static native int dAQmxResetAIFreqHyst(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LengthUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAILVDTUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3583</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAILVDTUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAILVDTUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAILVDTUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LengthUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAILVDTUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3583</i>
	 */
	public static native int dAQmxGetAILVDTUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILVDTUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3584</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAILVDTUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAILVDTUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAILVDTUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILVDTUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3584</i>
	 */
	public static native int dAQmxSetAILVDTUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILVDTUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3585</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAILVDTUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAILVDTUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAILVDTUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILVDTUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3585</i>
	 */
	public static native int dAQmxResetAILVDTUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_LVDT_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAILVDTSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3587</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAILVDTSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAILVDTSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAILVDTSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_LVDT_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAILVDTSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3587</i>
	 */
	public static native int dAQmxGetAILVDTSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILVDTSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3588</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAILVDTSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAILVDTSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAILVDTSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILVDTSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3588</i>
	 */
	public static native int dAQmxSetAILVDTSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILVDTSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3589</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAILVDTSensitivity(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAILVDTSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAILVDTSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILVDTSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3589</i>
	 */
	public static native int dAQmxResetAILVDTSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LVDTSensitivityUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAILVDTSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3592</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAILVDTSensitivityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAILVDTSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAILVDTSensitivityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LVDTSensitivityUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAILVDTSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3592</i>
	 */
	public static native int dAQmxGetAILVDTSensitivityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILVDTSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3593</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAILVDTSensitivityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAILVDTSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAILVDTSensitivityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILVDTSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3593</i>
	 */
	public static native int dAQmxSetAILVDTSensitivityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILVDTSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3594</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAILVDTSensitivityUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAILVDTSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAILVDTSensitivityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILVDTSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3594</i>
	 */
	public static native int dAQmxResetAILVDTSensitivityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AngleUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIRVDTUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3597</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRVDTUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIRVDTUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRVDTUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AngleUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIRVDTUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3597</i>
	 */
	public static native int dAQmxGetAIRVDTUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRVDTUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3598</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRVDTUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIRVDTUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRVDTUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRVDTUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3598</i>
	 */
	public static native int dAQmxSetAIRVDTUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRVDTUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3599</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRVDTUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRVDTUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRVDTUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRVDTUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3599</i>
	 */
	public static native int dAQmxResetAIRVDTUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RVDT_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRVDTSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3601</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRVDTSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIRVDTSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRVDTSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RVDT_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRVDTSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3601</i>
	 */
	public static native int dAQmxGetAIRVDTSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRVDTSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3602</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRVDTSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIRVDTSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRVDTSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRVDTSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3602</i>
	 */
	public static native int dAQmxSetAIRVDTSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRVDTSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3603</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRVDTSensitivity(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRVDTSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRVDTSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRVDTSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3603</i>
	 */
	public static native int dAQmxResetAIRVDTSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set RVDTSensitivityUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIRVDTSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3606</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRVDTSensitivityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIRVDTSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRVDTSensitivityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set RVDTSensitivityUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIRVDTSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3606</i>
	 */
	public static native int dAQmxGetAIRVDTSensitivityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRVDTSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3607</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRVDTSensitivityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIRVDTSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRVDTSensitivityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRVDTSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3607</i>
	 */
	public static native int dAQmxSetAIRVDTSensitivityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRVDTSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3608</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRVDTSensitivityUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRVDTSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRVDTSensitivityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRVDTSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3608</i>
	 */
	public static native int dAQmxResetAIRVDTSensitivityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LengthUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAIEddyCurrentProxProbeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3611</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIEddyCurrentProxProbeUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIEddyCurrentProxProbeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIEddyCurrentProxProbeUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LengthUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAIEddyCurrentProxProbeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3611</i>
	 */
	public static native int dAQmxGetAIEddyCurrentProxProbeUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEddyCurrentProxProbeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3612</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIEddyCurrentProxProbeUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIEddyCurrentProxProbeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIEddyCurrentProxProbeUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEddyCurrentProxProbeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3612</i>
	 */
	public static native int dAQmxSetAIEddyCurrentProxProbeUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEddyCurrentProxProbeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3613</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIEddyCurrentProxProbeUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIEddyCurrentProxProbeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIEddyCurrentProxProbeUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEddyCurrentProxProbeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3613</i>
	 */
	public static native int dAQmxResetAIEddyCurrentProxProbeUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_EddyCurrentProxProbe_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIEddyCurrentProxProbeSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3615</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIEddyCurrentProxProbeSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIEddyCurrentProxProbeSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIEddyCurrentProxProbeSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_EddyCurrentProxProbe_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIEddyCurrentProxProbeSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3615</i>
	 */
	public static native int dAQmxGetAIEddyCurrentProxProbeSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEddyCurrentProxProbeSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3616</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIEddyCurrentProxProbeSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIEddyCurrentProxProbeSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIEddyCurrentProxProbeSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEddyCurrentProxProbeSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3616</i>
	 */
	public static native int dAQmxSetAIEddyCurrentProxProbeSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEddyCurrentProxProbeSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3617</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIEddyCurrentProxProbeSensitivity(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIEddyCurrentProxProbeSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIEddyCurrentProxProbeSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEddyCurrentProxProbeSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3617</i>
	 */
	public static native int dAQmxResetAIEddyCurrentProxProbeSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set EddyCurrentProxProbeSensitivityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3620</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIEddyCurrentProxProbeSensitivityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIEddyCurrentProxProbeSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIEddyCurrentProxProbeSensitivityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set EddyCurrentProxProbeSensitivityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3620</i>
	 */
	public static native int dAQmxGetAIEddyCurrentProxProbeSensitivityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3621</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIEddyCurrentProxProbeSensitivityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIEddyCurrentProxProbeSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIEddyCurrentProxProbeSensitivityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3621</i>
	 */
	public static native int dAQmxSetAIEddyCurrentProxProbeSensitivityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3622</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIEddyCurrentProxProbeSensitivityUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIEddyCurrentProxProbeSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIEddyCurrentProxProbeSensitivityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3622</i>
	 */
	public static native int dAQmxResetAIEddyCurrentProxProbeSensitivityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_SoundPressure_MaxSoundPressureLvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAISoundPressureMaxSoundPressureLvl(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3624</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAISoundPressureMaxSoundPressureLvl(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAISoundPressureMaxSoundPressureLvl(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAISoundPressureMaxSoundPressureLvl(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_SoundPressure_MaxSoundPressureLvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAISoundPressureMaxSoundPressureLvl(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3624</i>
	 */
	public static native int dAQmxGetAISoundPressureMaxSoundPressureLvl(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISoundPressureMaxSoundPressureLvl(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3625</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAISoundPressureMaxSoundPressureLvl(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAISoundPressureMaxSoundPressureLvl(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAISoundPressureMaxSoundPressureLvl(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISoundPressureMaxSoundPressureLvl(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3625</i>
	 */
	public static native int dAQmxSetAISoundPressureMaxSoundPressureLvl(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAISoundPressureMaxSoundPressureLvl(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3626</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAISoundPressureMaxSoundPressureLvl(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAISoundPressureMaxSoundPressureLvl(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAISoundPressureMaxSoundPressureLvl(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAISoundPressureMaxSoundPressureLvl(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3626</i>
	 */
	public static native int dAQmxResetAISoundPressureMaxSoundPressureLvl(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SoundPressureUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAISoundPressureUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3629</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAISoundPressureUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAISoundPressureUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAISoundPressureUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SoundPressureUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAISoundPressureUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3629</i>
	 */
	public static native int dAQmxGetAISoundPressureUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISoundPressureUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3630</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAISoundPressureUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAISoundPressureUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAISoundPressureUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISoundPressureUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3630</i>
	 */
	public static native int dAQmxSetAISoundPressureUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAISoundPressureUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3631</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAISoundPressureUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAISoundPressureUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAISoundPressureUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAISoundPressureUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3631</i>
	 */
	public static native int dAQmxResetAISoundPressureUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_SoundPressure_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAISoundPressuredBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3633</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAISoundPressuredBRef(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAISoundPressuredBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAISoundPressuredBRef(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_SoundPressure_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAISoundPressuredBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3633</i>
	 */
	public static native int dAQmxGetAISoundPressuredBRef(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISoundPressuredBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3634</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAISoundPressuredBRef(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAISoundPressuredBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAISoundPressuredBRef(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISoundPressuredBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3634</i>
	 */
	public static native int dAQmxSetAISoundPressuredBRef(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAISoundPressuredBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3635</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAISoundPressuredBRef(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAISoundPressuredBRef(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAISoundPressuredBRef(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAISoundPressuredBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3635</i>
	 */
	public static native int dAQmxResetAISoundPressuredBRef(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Microphone_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMicrophoneSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3637</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIMicrophoneSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIMicrophoneSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIMicrophoneSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Microphone_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMicrophoneSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3637</i>
	 */
	public static native int dAQmxGetAIMicrophoneSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIMicrophoneSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3638</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIMicrophoneSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIMicrophoneSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIMicrophoneSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIMicrophoneSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3638</i>
	 */
	public static native int dAQmxSetAIMicrophoneSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIMicrophoneSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3639</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIMicrophoneSensitivity(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIMicrophoneSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIMicrophoneSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIMicrophoneSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3639</i>
	 */
	public static native int dAQmxResetAIMicrophoneSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AccelUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAIAccelUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3642</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIAccelUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIAccelUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIAccelUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AccelUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAIAccelUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3642</i>
	 */
	public static native int dAQmxGetAIAccelUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAccelUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3643</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIAccelUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIAccelUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIAccelUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAccelUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3643</i>
	 */
	public static native int dAQmxSetAIAccelUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAccelUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3644</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIAccelUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIAccelUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIAccelUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAccelUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3644</i>
	 */
	public static native int dAQmxResetAIAccelUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Accel_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAcceldBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3646</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIAcceldBRef(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIAcceldBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIAcceldBRef(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Accel_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAcceldBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3646</i>
	 */
	public static native int dAQmxGetAIAcceldBRef(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAcceldBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3647</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIAcceldBRef(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIAcceldBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIAcceldBRef(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAcceldBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3647</i>
	 */
	public static native int dAQmxSetAIAcceldBRef(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAcceldBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3648</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIAcceldBRef(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIAcceldBRef(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIAcceldBRef(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAcceldBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3648</i>
	 */
	public static native int dAQmxResetAIAcceldBRef(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Accel_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAccelSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3650</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIAccelSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIAccelSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIAccelSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Accel_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAccelSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3650</i>
	 */
	public static native int dAQmxGetAIAccelSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAccelSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3651</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIAccelSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIAccelSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIAccelSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAccelSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3651</i>
	 */
	public static native int dAQmxSetAIAccelSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAccelSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3652</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIAccelSensitivity(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIAccelSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIAccelSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAccelSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3652</i>
	 */
	public static native int dAQmxResetAIAccelSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AccelSensitivityUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIAccelSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3655</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIAccelSensitivityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIAccelSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIAccelSensitivityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AccelSensitivityUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIAccelSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3655</i>
	 */
	public static native int dAQmxGetAIAccelSensitivityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAccelSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3656</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIAccelSensitivityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIAccelSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIAccelSensitivityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAccelSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3656</i>
	 */
	public static native int dAQmxSetAIAccelSensitivityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAccelSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3657</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIAccelSensitivityUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIAccelSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIAccelSensitivityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAccelSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3657</i>
	 */
	public static native int dAQmxResetAIAccelSensitivityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set VelocityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3660</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIVelocityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIVelocityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIVelocityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set VelocityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3660</i>
	 */
	public static native int dAQmxGetAIVelocityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3661</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIVelocityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIVelocityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIVelocityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3661</i>
	 */
	public static native int dAQmxSetAIVelocityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3662</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIVelocityUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIVelocityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIVelocityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3662</i>
	 */
	public static native int dAQmxResetAIVelocityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Velocity_IEPESensor_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityIEPESensordBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3664</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIVelocityIEPESensordBRef(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIVelocityIEPESensordBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIVelocityIEPESensordBRef(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Velocity_IEPESensor_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityIEPESensordBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3664</i>
	 */
	public static native int dAQmxGetAIVelocityIEPESensordBRef(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityIEPESensordBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3665</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIVelocityIEPESensordBRef(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIVelocityIEPESensordBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIVelocityIEPESensordBRef(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityIEPESensordBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3665</i>
	 */
	public static native int dAQmxSetAIVelocityIEPESensordBRef(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityIEPESensordBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3666</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIVelocityIEPESensordBRef(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIVelocityIEPESensordBRef(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIVelocityIEPESensordBRef(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityIEPESensordBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3666</i>
	 */
	public static native int dAQmxResetAIVelocityIEPESensordBRef(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Velocity_IEPESensor_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityIEPESensorSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3668</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIVelocityIEPESensorSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIVelocityIEPESensorSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIVelocityIEPESensorSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Velocity_IEPESensor_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityIEPESensorSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3668</i>
	 */
	public static native int dAQmxGetAIVelocityIEPESensorSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityIEPESensorSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3669</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIVelocityIEPESensorSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIVelocityIEPESensorSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIVelocityIEPESensorSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityIEPESensorSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3669</i>
	 */
	public static native int dAQmxSetAIVelocityIEPESensorSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityIEPESensorSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3670</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIVelocityIEPESensorSensitivity(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIVelocityIEPESensorSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIVelocityIEPESensorSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityIEPESensorSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3670</i>
	 */
	public static native int dAQmxResetAIVelocityIEPESensorSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set VelocityIEPESensorSensitivityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityIEPESensorSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3673</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIVelocityIEPESensorSensitivityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIVelocityIEPESensorSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIVelocityIEPESensorSensitivityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set VelocityIEPESensorSensitivityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityIEPESensorSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3673</i>
	 */
	public static native int dAQmxGetAIVelocityIEPESensorSensitivityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityIEPESensorSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3674</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIVelocityIEPESensorSensitivityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIVelocityIEPESensorSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIVelocityIEPESensorSensitivityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityIEPESensorSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3674</i>
	 */
	public static native int dAQmxSetAIVelocityIEPESensorSensitivityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityIEPESensorSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3675</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIVelocityIEPESensorSensitivityUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIVelocityIEPESensorSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIVelocityIEPESensorSensitivityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityIEPESensorSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3675</i>
	 */
	public static native int dAQmxResetAIVelocityIEPESensorSensitivityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ForceUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIForceUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3678</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIForceUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIForceUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIForceUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ForceUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIForceUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3678</i>
	 */
	public static native int dAQmxGetAIForceUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3679</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIForceUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIForceUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIForceUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3679</i>
	 */
	public static native int dAQmxSetAIForceUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3680</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIForceUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIForceUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIForceUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3680</i>
	 */
	public static native int dAQmxResetAIForceUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Force_IEPESensor_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIForceIEPESensorSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3682</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIForceIEPESensorSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIForceIEPESensorSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIForceIEPESensorSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Force_IEPESensor_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIForceIEPESensorSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3682</i>
	 */
	public static native int dAQmxGetAIForceIEPESensorSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceIEPESensorSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3683</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIForceIEPESensorSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIForceIEPESensorSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIForceIEPESensorSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceIEPESensorSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3683</i>
	 */
	public static native int dAQmxSetAIForceIEPESensorSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceIEPESensorSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3684</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIForceIEPESensorSensitivity(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIForceIEPESensorSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIForceIEPESensorSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceIEPESensorSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3684</i>
	 */
	public static native int dAQmxResetAIForceIEPESensorSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ForceIEPESensorSensitivityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIForceIEPESensorSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3687</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIForceIEPESensorSensitivityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIForceIEPESensorSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIForceIEPESensorSensitivityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ForceIEPESensorSensitivityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIForceIEPESensorSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3687</i>
	 */
	public static native int dAQmxGetAIForceIEPESensorSensitivityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceIEPESensorSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3688</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIForceIEPESensorSensitivityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIForceIEPESensorSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIForceIEPESensorSensitivityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceIEPESensorSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3688</i>
	 */
	public static native int dAQmxSetAIForceIEPESensorSensitivityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceIEPESensorSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3689</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIForceIEPESensorSensitivityUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIForceIEPESensorSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIForceIEPESensorSensitivityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceIEPESensorSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3689</i>
	 */
	public static native int dAQmxResetAIForceIEPESensorSensitivityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set PressureUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIPressureUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3692</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIPressureUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIPressureUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIPressureUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set PressureUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIPressureUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3692</i>
	 */
	public static native int dAQmxGetAIPressureUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIPressureUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3693</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIPressureUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIPressureUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIPressureUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIPressureUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3693</i>
	 */
	public static native int dAQmxSetAIPressureUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIPressureUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3694</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIPressureUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIPressureUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIPressureUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIPressureUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3694</i>
	 */
	public static native int dAQmxResetAIPressureUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TorqueUnits<br>
	 * Original signature : <code>int32 DAQmxGetAITorqueUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3697</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAITorqueUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAITorqueUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAITorqueUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TorqueUnits<br>
	 * Original signature : <code>int32 DAQmxGetAITorqueUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3697</i>
	 */
	public static native int dAQmxGetAITorqueUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAITorqueUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3698</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAITorqueUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAITorqueUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAITorqueUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAITorqueUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3698</i>
	 */
	public static native int dAQmxSetAITorqueUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAITorqueUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3699</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAITorqueUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAITorqueUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAITorqueUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAITorqueUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3699</i>
	 */
	public static native int dAQmxResetAITorqueUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set BridgeUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3702</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIBridgeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set BridgeUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3702</i>
	 */
	public static native int dAQmxGetAIBridgeUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3703</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIBridgeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3703</i>
	 */
	public static native int dAQmxSetAIBridgeUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3704</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3704</i>
	 */
	public static native int dAQmxResetAIBridgeUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set BridgeElectricalUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeElectricalUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3707</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeElectricalUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIBridgeElectricalUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeElectricalUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set BridgeElectricalUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeElectricalUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3707</i>
	 */
	public static native int dAQmxGetAIBridgeElectricalUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeElectricalUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3708</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeElectricalUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIBridgeElectricalUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeElectricalUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeElectricalUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3708</i>
	 */
	public static native int dAQmxSetAIBridgeElectricalUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeElectricalUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3709</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeElectricalUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeElectricalUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeElectricalUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeElectricalUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3709</i>
	 */
	public static native int dAQmxResetAIBridgeElectricalUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set BridgePhysicalUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgePhysicalUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3712</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgePhysicalUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIBridgePhysicalUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgePhysicalUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set BridgePhysicalUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgePhysicalUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3712</i>
	 */
	public static native int dAQmxGetAIBridgePhysicalUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgePhysicalUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3713</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgePhysicalUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIBridgePhysicalUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgePhysicalUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgePhysicalUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3713</i>
	 */
	public static native int dAQmxSetAIBridgePhysicalUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgePhysicalUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3714</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgePhysicalUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgePhysicalUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgePhysicalUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgePhysicalUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3714</i>
	 */
	public static native int dAQmxResetAIBridgePhysicalUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ScaleType4<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeScaleType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3717</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeScaleType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIBridgeScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeScaleType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ScaleType4<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeScaleType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3717</i>
	 */
	public static native int dAQmxGetAIBridgeScaleType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeScaleType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3718</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeScaleType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIBridgeScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeScaleType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeScaleType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3718</i>
	 */
	public static native int dAQmxSetAIBridgeScaleType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeScaleType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3719</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeScaleType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeScaleType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeScaleType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3719</i>
	 */
	public static native int dAQmxResetAIBridgeScaleType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_First_ElectricalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3721</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeTwoPointLinFirstElectricalVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIBridgeTwoPointLinFirstElectricalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeTwoPointLinFirstElectricalVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_First_ElectricalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3721</i>
	 */
	public static native int dAQmxGetAIBridgeTwoPointLinFirstElectricalVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3722</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeTwoPointLinFirstElectricalVal(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIBridgeTwoPointLinFirstElectricalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeTwoPointLinFirstElectricalVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3722</i>
	 */
	public static native int dAQmxSetAIBridgeTwoPointLinFirstElectricalVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3723</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeTwoPointLinFirstElectricalVal(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeTwoPointLinFirstElectricalVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeTwoPointLinFirstElectricalVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3723</i>
	 */
	public static native int dAQmxResetAIBridgeTwoPointLinFirstElectricalVal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_First_PhysicalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3725</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeTwoPointLinFirstPhysicalVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIBridgeTwoPointLinFirstPhysicalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeTwoPointLinFirstPhysicalVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_First_PhysicalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3725</i>
	 */
	public static native int dAQmxGetAIBridgeTwoPointLinFirstPhysicalVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3726</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeTwoPointLinFirstPhysicalVal(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIBridgeTwoPointLinFirstPhysicalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeTwoPointLinFirstPhysicalVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3726</i>
	 */
	public static native int dAQmxSetAIBridgeTwoPointLinFirstPhysicalVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3727</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeTwoPointLinFirstPhysicalVal(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeTwoPointLinFirstPhysicalVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeTwoPointLinFirstPhysicalVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3727</i>
	 */
	public static native int dAQmxResetAIBridgeTwoPointLinFirstPhysicalVal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_Second_ElectricalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3729</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeTwoPointLinSecondElectricalVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIBridgeTwoPointLinSecondElectricalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeTwoPointLinSecondElectricalVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_Second_ElectricalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3729</i>
	 */
	public static native int dAQmxGetAIBridgeTwoPointLinSecondElectricalVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3730</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeTwoPointLinSecondElectricalVal(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIBridgeTwoPointLinSecondElectricalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeTwoPointLinSecondElectricalVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3730</i>
	 */
	public static native int dAQmxSetAIBridgeTwoPointLinSecondElectricalVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3731</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeTwoPointLinSecondElectricalVal(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeTwoPointLinSecondElectricalVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeTwoPointLinSecondElectricalVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3731</i>
	 */
	public static native int dAQmxResetAIBridgeTwoPointLinSecondElectricalVal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_Second_PhysicalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3733</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeTwoPointLinSecondPhysicalVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIBridgeTwoPointLinSecondPhysicalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeTwoPointLinSecondPhysicalVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_Second_PhysicalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3733</i>
	 */
	public static native int dAQmxGetAIBridgeTwoPointLinSecondPhysicalVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3734</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeTwoPointLinSecondPhysicalVal(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIBridgeTwoPointLinSecondPhysicalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeTwoPointLinSecondPhysicalVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3734</i>
	 */
	public static native int dAQmxSetAIBridgeTwoPointLinSecondPhysicalVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3735</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeTwoPointLinSecondPhysicalVal(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeTwoPointLinSecondPhysicalVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeTwoPointLinSecondPhysicalVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3735</i>
	 */
	public static native int dAQmxResetAIBridgeTwoPointLinSecondPhysicalVal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Table_ElectricalVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTableElectricalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3737</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeTableElectricalVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIBridgeTableElectricalVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeTableElectricalVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Table_ElectricalVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTableElectricalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3737</i>
	 */
	public static native int dAQmxGetAIBridgeTableElectricalVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTableElectricalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3738</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeTableElectricalVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetAIBridgeTableElectricalVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeTableElectricalVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTableElectricalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3738</i>
	 */
	public static native int dAQmxSetAIBridgeTableElectricalVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTableElectricalVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3739</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeTableElectricalVals(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeTableElectricalVals(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeTableElectricalVals(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTableElectricalVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3739</i>
	 */
	public static native int dAQmxResetAIBridgeTableElectricalVals(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Table_PhysicalVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTablePhysicalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3741</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeTablePhysicalVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIBridgeTablePhysicalVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeTablePhysicalVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Table_PhysicalVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTablePhysicalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3741</i>
	 */
	public static native int dAQmxGetAIBridgeTablePhysicalVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTablePhysicalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3742</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeTablePhysicalVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetAIBridgeTablePhysicalVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeTablePhysicalVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTablePhysicalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3742</i>
	 */
	public static native int dAQmxSetAIBridgeTablePhysicalVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTablePhysicalVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3743</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeTablePhysicalVals(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeTablePhysicalVals(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeTablePhysicalVals(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTablePhysicalVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3743</i>
	 */
	public static native int dAQmxResetAIBridgeTablePhysicalVals(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Poly_ForwardCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgePolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3745</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgePolyForwardCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIBridgePolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgePolyForwardCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Poly_ForwardCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgePolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3745</i>
	 */
	public static native int dAQmxGetAIBridgePolyForwardCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgePolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3746</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgePolyForwardCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetAIBridgePolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgePolyForwardCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgePolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3746</i>
	 */
	public static native int dAQmxSetAIBridgePolyForwardCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgePolyForwardCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3747</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgePolyForwardCoeff(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgePolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgePolyForwardCoeff(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgePolyForwardCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3747</i>
	 */
	public static native int dAQmxResetAIBridgePolyForwardCoeff(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Poly_ReverseCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgePolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3749</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgePolyReverseCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIBridgePolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgePolyReverseCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Poly_ReverseCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgePolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3749</i>
	 */
	public static native int dAQmxGetAIBridgePolyReverseCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgePolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3750</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgePolyReverseCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetAIBridgePolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgePolyReverseCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgePolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3750</i>
	 */
	public static native int dAQmxSetAIBridgePolyReverseCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgePolyReverseCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3751</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgePolyReverseCoeff(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgePolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgePolyReverseCoeff(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgePolyReverseCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3751</i>
	 */
	public static native int dAQmxResetAIBridgePolyReverseCoeff(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Is_TEDS ***<br>
	 * Original signature : <code>int32 DAQmxGetAIIsTEDS(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3753</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIIsTEDS(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIIsTEDS(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIIsTEDS(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Is_TEDS ***<br>
	 * Original signature : <code>int32 DAQmxGetAIIsTEDS(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3753</i>
	 */
	public static native int dAQmxGetAIIsTEDS(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_TEDS_Units ***<br>
	 * Original signature : <code>int32 DAQmxGetAITEDSUnits(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3755</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAITEDSUnits(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAITEDSUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAITEDSUnits(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AI_TEDS_Units ***<br>
	 * Original signature : <code>int32 DAQmxGetAITEDSUnits(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3755</i>
	 */
	public static native int dAQmxGetAITEDSUnits(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Uses value set Coupling1<br>
	 * Original signature : <code>int32 DAQmxGetAICoupling(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3758</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAICoupling(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAICoupling(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAICoupling(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Coupling1<br>
	 * Original signature : <code>int32 DAQmxGetAICoupling(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3758</i>
	 */
	public static native int dAQmxGetAICoupling(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICoupling(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3759</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAICoupling(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAICoupling(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAICoupling(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICoupling(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3759</i>
	 */
	public static native int dAQmxSetAICoupling(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAICoupling(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3760</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAICoupling(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAICoupling(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAICoupling(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAICoupling(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3760</i>
	 */
	public static native int dAQmxResetAICoupling(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Impedance1<br>
	 * Original signature : <code>int32 DAQmxGetAIImpedance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3763</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIImpedance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIImpedance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * Uses value set Impedance1<br>
	 * Original signature : <code>int32 DAQmxGetAIImpedance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3763</i>
	 */
	public static native int dAQmxGetAIImpedance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIImpedance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3764</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIImpedance(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIImpedance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIImpedance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3764</i>
	 */
	public static native int dAQmxSetAIImpedance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIImpedance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3765</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIImpedance(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIImpedance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIImpedance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3765</i>
	 */
	public static native int dAQmxResetAIImpedance(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg<br>
	 * Original signature : <code>int32 DAQmxGetAITermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3768</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAITermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAITermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAITermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg<br>
	 * Original signature : <code>int32 DAQmxGetAITermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3768</i>
	 */
	public static native int dAQmxGetAITermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAITermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3769</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAITermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAITermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAITermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAITermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3769</i>
	 */
	public static native int dAQmxSetAITermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAITermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3770</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAITermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAITermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAITermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAITermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3770</i>
	 */
	public static native int dAQmxResetAITermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_InputSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAIInputSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3772</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIInputSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIInputSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIInputSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AI_InputSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAIInputSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3772</i>
	 */
	public static native int dAQmxGetAIInputSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIInputSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 3773</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIInputSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetAIInputSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIInputSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIInputSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 3773</i>
	 */
	public static native int dAQmxSetAIInputSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIInputSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3774</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIInputSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIInputSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIInputSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIInputSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3774</i>
	 */
	public static native int dAQmxResetAIInputSrc(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ResistanceConfiguration<br>
	 * Original signature : <code>int32 DAQmxGetAIResistanceCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3777</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIResistanceCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIResistanceCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIResistanceCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ResistanceConfiguration<br>
	 * Original signature : <code>int32 DAQmxGetAIResistanceCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3777</i>
	 */
	public static native int dAQmxGetAIResistanceCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIResistanceCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3778</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIResistanceCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIResistanceCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIResistanceCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIResistanceCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3778</i>
	 */
	public static native int dAQmxSetAIResistanceCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIResistanceCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3779</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIResistanceCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIResistanceCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIResistanceCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIResistanceCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3779</i>
	 */
	public static native int dAQmxResetAIResistanceCfg(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_LeadWireResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAILeadWireResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3781</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAILeadWireResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAILeadWireResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAILeadWireResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_LeadWireResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAILeadWireResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3781</i>
	 */
	public static native int dAQmxGetAILeadWireResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILeadWireResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3782</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAILeadWireResistance(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAILeadWireResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAILeadWireResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILeadWireResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3782</i>
	 */
	public static native int dAQmxSetAILeadWireResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILeadWireResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3783</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAILeadWireResistance(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAILeadWireResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAILeadWireResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILeadWireResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3783</i>
	 */
	public static native int dAQmxResetAILeadWireResistance(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set BridgeConfiguration1<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3786</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIBridgeCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set BridgeConfiguration1<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3786</i>
	 */
	public static native int dAQmxGetAIBridgeCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3787</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIBridgeCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3787</i>
	 */
	public static native int dAQmxSetAIBridgeCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3788</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3788</i>
	 */
	public static native int dAQmxResetAIBridgeCfg(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_NomResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeNomResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3790</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeNomResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIBridgeNomResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeNomResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_NomResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeNomResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3790</i>
	 */
	public static native int dAQmxGetAIBridgeNomResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeNomResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3791</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeNomResistance(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIBridgeNomResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeNomResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeNomResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3791</i>
	 */
	public static native int dAQmxSetAIBridgeNomResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeNomResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3792</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeNomResistance(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeNomResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeNomResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeNomResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3792</i>
	 */
	public static native int dAQmxResetAIBridgeNomResistance(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_InitialVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeInitialVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3794</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeInitialVoltage(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIBridgeInitialVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeInitialVoltage(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_InitialVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeInitialVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3794</i>
	 */
	public static native int dAQmxGetAIBridgeInitialVoltage(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeInitialVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3795</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeInitialVoltage(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIBridgeInitialVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeInitialVoltage(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeInitialVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3795</i>
	 */
	public static native int dAQmxSetAIBridgeInitialVoltage(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeInitialVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3796</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeInitialVoltage(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeInitialVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeInitialVoltage(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeInitialVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3796</i>
	 */
	public static native int dAQmxResetAIBridgeInitialVoltage(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_InitialRatio ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeInitialRatio(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3798</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeInitialRatio(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIBridgeInitialRatio(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeInitialRatio(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_InitialRatio ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeInitialRatio(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3798</i>
	 */
	public static native int dAQmxGetAIBridgeInitialRatio(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeInitialRatio(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3799</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeInitialRatio(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIBridgeInitialRatio(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeInitialRatio(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeInitialRatio(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3799</i>
	 */
	public static native int dAQmxSetAIBridgeInitialRatio(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeInitialRatio(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3800</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeInitialRatio(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeInitialRatio(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeInitialRatio(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeInitialRatio(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3800</i>
	 */
	public static native int dAQmxResetAIBridgeInitialRatio(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3802</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeShuntCalEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIBridgeShuntCalEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeShuntCalEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3802</i>
	 */
	public static native int dAQmxGetAIBridgeShuntCalEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3803</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeShuntCalEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIBridgeShuntCalEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeShuntCalEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3803</i>
	 */
	public static native int dAQmxSetAIBridgeShuntCalEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3804</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeShuntCalEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeShuntCalEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeShuntCalEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3804</i>
	 */
	public static native int dAQmxResetAIBridgeShuntCalEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ShuntCalSelect<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalSelect(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3807</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeShuntCalSelect(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIBridgeShuntCalSelect(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeShuntCalSelect(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ShuntCalSelect<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalSelect(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3807</i>
	 */
	public static native int dAQmxGetAIBridgeShuntCalSelect(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalSelect(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3808</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeShuntCalSelect(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIBridgeShuntCalSelect(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeShuntCalSelect(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalSelect(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3808</i>
	 */
	public static native int dAQmxSetAIBridgeShuntCalSelect(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalSelect(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3809</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeShuntCalSelect(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeShuntCalSelect(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeShuntCalSelect(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalSelect(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3809</i>
	 */
	public static native int dAQmxResetAIBridgeShuntCalSelect(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set BridgeShuntCalSource<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalASrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3812</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeShuntCalShuntCalASrc(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIBridgeShuntCalShuntCalASrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeShuntCalShuntCalASrc(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set BridgeShuntCalSource<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalASrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3812</i>
	 */
	public static native int dAQmxGetAIBridgeShuntCalShuntCalASrc(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalASrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3813</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeShuntCalShuntCalASrc(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIBridgeShuntCalShuntCalASrc(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeShuntCalShuntCalASrc(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalASrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3813</i>
	 */
	public static native int dAQmxSetAIBridgeShuntCalShuntCalASrc(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalASrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3814</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeShuntCalShuntCalASrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeShuntCalShuntCalASrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeShuntCalShuntCalASrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalASrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3814</i>
	 */
	public static native int dAQmxResetAIBridgeShuntCalShuntCalASrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_GainAdjust ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalGainAdjust(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3816</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeShuntCalGainAdjust(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIBridgeShuntCalGainAdjust(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeShuntCalGainAdjust(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_GainAdjust ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalGainAdjust(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3816</i>
	 */
	public static native int dAQmxGetAIBridgeShuntCalGainAdjust(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalGainAdjust(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3817</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeShuntCalGainAdjust(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIBridgeShuntCalGainAdjust(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeShuntCalGainAdjust(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalGainAdjust(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3817</i>
	 */
	public static native int dAQmxSetAIBridgeShuntCalGainAdjust(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalGainAdjust(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3818</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeShuntCalGainAdjust(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeShuntCalGainAdjust(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeShuntCalGainAdjust(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalGainAdjust(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3818</i>
	 */
	public static native int dAQmxResetAIBridgeShuntCalGainAdjust(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalAResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalAResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3820</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeShuntCalShuntCalAResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIBridgeShuntCalShuntCalAResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeShuntCalShuntCalAResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalAResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalAResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3820</i>
	 */
	public static native int dAQmxGetAIBridgeShuntCalShuntCalAResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalAResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3821</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeShuntCalShuntCalAResistance(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIBridgeShuntCalShuntCalAResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeShuntCalShuntCalAResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalAResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3821</i>
	 */
	public static native int dAQmxSetAIBridgeShuntCalShuntCalAResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalAResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3822</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeShuntCalShuntCalAResistance(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeShuntCalShuntCalAResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeShuntCalShuntCalAResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalAResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3822</i>
	 */
	public static native int dAQmxResetAIBridgeShuntCalShuntCalAResistance(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalAActualResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3824</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeShuntCalShuntCalAActualResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIBridgeShuntCalShuntCalAActualResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeShuntCalShuntCalAActualResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalAActualResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3824</i>
	 */
	public static native int dAQmxGetAIBridgeShuntCalShuntCalAActualResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3825</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeShuntCalShuntCalAActualResistance(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIBridgeShuntCalShuntCalAActualResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeShuntCalShuntCalAActualResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3825</i>
	 */
	public static native int dAQmxSetAIBridgeShuntCalShuntCalAActualResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3826</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeShuntCalShuntCalAActualResistance(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeShuntCalShuntCalAActualResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeShuntCalShuntCalAActualResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3826</i>
	 */
	public static native int dAQmxResetAIBridgeShuntCalShuntCalAActualResistance(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalBResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalBResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3828</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeShuntCalShuntCalBResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIBridgeShuntCalShuntCalBResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeShuntCalShuntCalBResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalBResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalBResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3828</i>
	 */
	public static native int dAQmxGetAIBridgeShuntCalShuntCalBResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalBResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3829</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeShuntCalShuntCalBResistance(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIBridgeShuntCalShuntCalBResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeShuntCalShuntCalBResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalBResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3829</i>
	 */
	public static native int dAQmxSetAIBridgeShuntCalShuntCalBResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalBResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3830</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeShuntCalShuntCalBResistance(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeShuntCalShuntCalBResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeShuntCalShuntCalBResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalBResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3830</i>
	 */
	public static native int dAQmxResetAIBridgeShuntCalShuntCalBResistance(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalBActualResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3832</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeShuntCalShuntCalBActualResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIBridgeShuntCalShuntCalBActualResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeShuntCalShuntCalBActualResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalBActualResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3832</i>
	 */
	public static native int dAQmxGetAIBridgeShuntCalShuntCalBActualResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3833</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeShuntCalShuntCalBActualResistance(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIBridgeShuntCalShuntCalBActualResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeShuntCalShuntCalBActualResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3833</i>
	 */
	public static native int dAQmxSetAIBridgeShuntCalShuntCalBActualResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3834</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeShuntCalShuntCalBActualResistance(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeShuntCalShuntCalBActualResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeShuntCalShuntCalBActualResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3834</i>
	 */
	public static native int dAQmxResetAIBridgeShuntCalShuntCalBActualResistance(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Balance_CoarsePot ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeBalanceCoarsePot(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3836</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeBalanceCoarsePot(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIBridgeBalanceCoarsePot(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeBalanceCoarsePot(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Balance_CoarsePot ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeBalanceCoarsePot(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3836</i>
	 */
	public static native int dAQmxGetAIBridgeBalanceCoarsePot(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeBalanceCoarsePot(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3837</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeBalanceCoarsePot(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIBridgeBalanceCoarsePot(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeBalanceCoarsePot(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeBalanceCoarsePot(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3837</i>
	 */
	public static native int dAQmxSetAIBridgeBalanceCoarsePot(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeBalanceCoarsePot(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3838</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeBalanceCoarsePot(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeBalanceCoarsePot(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeBalanceCoarsePot(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeBalanceCoarsePot(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3838</i>
	 */
	public static native int dAQmxResetAIBridgeBalanceCoarsePot(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Balance_FinePot ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeBalanceFinePot(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3840</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIBridgeBalanceFinePot(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIBridgeBalanceFinePot(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIBridgeBalanceFinePot(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Balance_FinePot ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeBalanceFinePot(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3840</i>
	 */
	public static native int dAQmxGetAIBridgeBalanceFinePot(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeBalanceFinePot(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3841</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIBridgeBalanceFinePot(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIBridgeBalanceFinePot(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIBridgeBalanceFinePot(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeBalanceFinePot(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3841</i>
	 */
	public static native int dAQmxSetAIBridgeBalanceFinePot(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeBalanceFinePot(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3842</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIBridgeBalanceFinePot(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIBridgeBalanceFinePot(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIBridgeBalanceFinePot(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeBalanceFinePot(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3842</i>
	 */
	public static native int dAQmxResetAIBridgeBalanceFinePot(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CurrentShuntResistorLocation1<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentShuntLoc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3845</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAICurrentShuntLoc(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAICurrentShuntLoc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAICurrentShuntLoc(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CurrentShuntResistorLocation1<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentShuntLoc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3845</i>
	 */
	public static native int dAQmxGetAICurrentShuntLoc(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentShuntLoc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3846</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAICurrentShuntLoc(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAICurrentShuntLoc(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAICurrentShuntLoc(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentShuntLoc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3846</i>
	 */
	public static native int dAQmxSetAICurrentShuntLoc(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentShuntLoc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3847</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAICurrentShuntLoc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAICurrentShuntLoc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAICurrentShuntLoc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentShuntLoc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3847</i>
	 */
	public static native int dAQmxResetAICurrentShuntLoc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_CurrentShunt_Resistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentShuntResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3849</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAICurrentShuntResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAICurrentShuntResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAICurrentShuntResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_CurrentShunt_Resistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentShuntResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3849</i>
	 */
	public static native int dAQmxGetAICurrentShuntResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentShuntResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3850</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAICurrentShuntResistance(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAICurrentShuntResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAICurrentShuntResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentShuntResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3850</i>
	 */
	public static native int dAQmxSetAICurrentShuntResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentShuntResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3851</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAICurrentShuntResistance(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAICurrentShuntResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAICurrentShuntResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentShuntResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3851</i>
	 */
	public static native int dAQmxResetAICurrentShuntResistance(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Sense<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitSense(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3854</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIExcitSense(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIExcitSense(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIExcitSense(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Sense<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitSense(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3854</i>
	 */
	public static native int dAQmxGetAIExcitSense(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitSense(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3855</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIExcitSense(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIExcitSense(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIExcitSense(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitSense(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3855</i>
	 */
	public static native int dAQmxSetAIExcitSense(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitSense(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3856</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIExcitSense(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIExcitSense(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIExcitSense(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitSense(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3856</i>
	 */
	public static native int dAQmxResetAIExcitSense(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ExcitationSource<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3859</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIExcitSrc(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIExcitSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIExcitSrc(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ExcitationSource<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3859</i>
	 */
	public static native int dAQmxGetAIExcitSrc(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3860</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIExcitSrc(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIExcitSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIExcitSrc(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3860</i>
	 */
	public static native int dAQmxSetAIExcitSrc(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3861</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIExcitSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIExcitSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIExcitSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3861</i>
	 */
	public static native int dAQmxResetAIExcitSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_Val ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3863</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIExcitVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIExcitVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIExcitVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_Val ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3863</i>
	 */
	public static native int dAQmxGetAIExcitVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3864</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIExcitVal(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIExcitVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIExcitVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3864</i>
	 */
	public static native int dAQmxSetAIExcitVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3865</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIExcitVal(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIExcitVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIExcitVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3865</i>
	 */
	public static native int dAQmxResetAIExcitVal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_UseForScaling ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitUseForScaling(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3867</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIExcitUseForScaling(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIExcitUseForScaling(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIExcitUseForScaling(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_UseForScaling ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitUseForScaling(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3867</i>
	 */
	public static native int dAQmxGetAIExcitUseForScaling(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitUseForScaling(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3868</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIExcitUseForScaling(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIExcitUseForScaling(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIExcitUseForScaling(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitUseForScaling(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3868</i>
	 */
	public static native int dAQmxSetAIExcitUseForScaling(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitUseForScaling(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3869</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIExcitUseForScaling(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIExcitUseForScaling(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIExcitUseForScaling(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitUseForScaling(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3869</i>
	 */
	public static native int dAQmxResetAIExcitUseForScaling(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_UseMultiplexed ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitUseMultiplexed(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3871</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIExcitUseMultiplexed(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIExcitUseMultiplexed(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIExcitUseMultiplexed(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_UseMultiplexed ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitUseMultiplexed(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3871</i>
	 */
	public static native int dAQmxGetAIExcitUseMultiplexed(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitUseMultiplexed(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3872</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIExcitUseMultiplexed(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIExcitUseMultiplexed(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIExcitUseMultiplexed(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitUseMultiplexed(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3872</i>
	 */
	public static native int dAQmxSetAIExcitUseMultiplexed(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitUseMultiplexed(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3873</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIExcitUseMultiplexed(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIExcitUseMultiplexed(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIExcitUseMultiplexed(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitUseMultiplexed(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3873</i>
	 */
	public static native int dAQmxResetAIExcitUseMultiplexed(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_ActualVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitActualVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3875</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIExcitActualVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIExcitActualVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIExcitActualVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_ActualVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitActualVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3875</i>
	 */
	public static native int dAQmxGetAIExcitActualVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitActualVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3876</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIExcitActualVal(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIExcitActualVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIExcitActualVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitActualVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3876</i>
	 */
	public static native int dAQmxSetAIExcitActualVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitActualVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3877</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIExcitActualVal(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIExcitActualVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIExcitActualVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitActualVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3877</i>
	 */
	public static native int dAQmxResetAIExcitActualVal(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ExcitationDCorAC<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitDCorAC(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3880</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIExcitDCorAC(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIExcitDCorAC(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIExcitDCorAC(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ExcitationDCorAC<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitDCorAC(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3880</i>
	 */
	public static native int dAQmxGetAIExcitDCorAC(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitDCorAC(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3881</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIExcitDCorAC(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIExcitDCorAC(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIExcitDCorAC(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitDCorAC(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3881</i>
	 */
	public static native int dAQmxSetAIExcitDCorAC(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitDCorAC(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3882</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIExcitDCorAC(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIExcitDCorAC(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIExcitDCorAC(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitDCorAC(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3882</i>
	 */
	public static native int dAQmxResetAIExcitDCorAC(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ExcitationVoltageOrCurrent<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitVoltageOrCurrent(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3885</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIExcitVoltageOrCurrent(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIExcitVoltageOrCurrent(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIExcitVoltageOrCurrent(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ExcitationVoltageOrCurrent<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitVoltageOrCurrent(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3885</i>
	 */
	public static native int dAQmxGetAIExcitVoltageOrCurrent(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitVoltageOrCurrent(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3886</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIExcitVoltageOrCurrent(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIExcitVoltageOrCurrent(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIExcitVoltageOrCurrent(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitVoltageOrCurrent(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3886</i>
	 */
	public static native int dAQmxSetAIExcitVoltageOrCurrent(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitVoltageOrCurrent(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3887</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIExcitVoltageOrCurrent(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIExcitVoltageOrCurrent(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIExcitVoltageOrCurrent(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitVoltageOrCurrent(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3887</i>
	 */
	public static native int dAQmxResetAIExcitVoltageOrCurrent(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ExcitationIdleOutputBehavior<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitIdleOutputBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3890</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIExcitIdleOutputBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIExcitIdleOutputBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIExcitIdleOutputBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ExcitationIdleOutputBehavior<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitIdleOutputBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3890</i>
	 */
	public static native int dAQmxGetAIExcitIdleOutputBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitIdleOutputBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3891</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIExcitIdleOutputBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIExcitIdleOutputBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIExcitIdleOutputBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitIdleOutputBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3891</i>
	 */
	public static native int dAQmxSetAIExcitIdleOutputBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitIdleOutputBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3892</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIExcitIdleOutputBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIExcitIdleOutputBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIExcitIdleOutputBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitIdleOutputBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3892</i>
	 */
	public static native int dAQmxResetAIExcitIdleOutputBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ACExcit_Freq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIACExcitFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3894</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIACExcitFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIACExcitFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIACExcitFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ACExcit_Freq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIACExcitFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3894</i>
	 */
	public static native int dAQmxGetAIACExcitFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIACExcitFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3895</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIACExcitFreq(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIACExcitFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIACExcitFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIACExcitFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3895</i>
	 */
	public static native int dAQmxSetAIACExcitFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIACExcitFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3896</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIACExcitFreq(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIACExcitFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIACExcitFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIACExcitFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3896</i>
	 */
	public static native int dAQmxResetAIACExcitFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ACExcit_SyncEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIACExcitSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3898</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIACExcitSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIACExcitSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIACExcitSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ACExcit_SyncEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIACExcitSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3898</i>
	 */
	public static native int dAQmxGetAIACExcitSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIACExcitSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3899</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIACExcitSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIACExcitSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIACExcitSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIACExcitSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3899</i>
	 */
	public static native int dAQmxSetAIACExcitSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIACExcitSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3900</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIACExcitSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIACExcitSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIACExcitSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIACExcitSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3900</i>
	 */
	public static native int dAQmxResetAIACExcitSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ACExcitWireMode<br>
	 * Original signature : <code>int32 DAQmxGetAIACExcitWireMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3903</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIACExcitWireMode(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIACExcitWireMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIACExcitWireMode(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ACExcitWireMode<br>
	 * Original signature : <code>int32 DAQmxGetAIACExcitWireMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3903</i>
	 */
	public static native int dAQmxGetAIACExcitWireMode(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIACExcitWireMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3904</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIACExcitWireMode(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIACExcitWireMode(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIACExcitWireMode(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIACExcitWireMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3904</i>
	 */
	public static native int dAQmxSetAIACExcitWireMode(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIACExcitWireMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3905</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIACExcitWireMode(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIACExcitWireMode(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIACExcitWireMode(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIACExcitWireMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3905</i>
	 */
	public static native int dAQmxResetAIACExcitWireMode(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_OpenThrmcplDetectEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIOpenThrmcplDetectEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3907</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIOpenThrmcplDetectEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIOpenThrmcplDetectEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIOpenThrmcplDetectEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_OpenThrmcplDetectEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIOpenThrmcplDetectEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3907</i>
	 */
	public static native int dAQmxGetAIOpenThrmcplDetectEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIOpenThrmcplDetectEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3908</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIOpenThrmcplDetectEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIOpenThrmcplDetectEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIOpenThrmcplDetectEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIOpenThrmcplDetectEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3908</i>
	 */
	public static native int dAQmxSetAIOpenThrmcplDetectEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIOpenThrmcplDetectEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3909</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIOpenThrmcplDetectEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIOpenThrmcplDetectEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIOpenThrmcplDetectEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIOpenThrmcplDetectEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3909</i>
	 */
	public static native int dAQmxResetAIOpenThrmcplDetectEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmcpl_LeadOffsetVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplLeadOffsetVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3911</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIThrmcplLeadOffsetVoltage(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIThrmcplLeadOffsetVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIThrmcplLeadOffsetVoltage(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmcpl_LeadOffsetVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplLeadOffsetVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3911</i>
	 */
	public static native int dAQmxGetAIThrmcplLeadOffsetVoltage(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmcplLeadOffsetVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3912</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIThrmcplLeadOffsetVoltage(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIThrmcplLeadOffsetVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIThrmcplLeadOffsetVoltage(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmcplLeadOffsetVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3912</i>
	 */
	public static native int dAQmxSetAIThrmcplLeadOffsetVoltage(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmcplLeadOffsetVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3913</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIThrmcplLeadOffsetVoltage(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIThrmcplLeadOffsetVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIThrmcplLeadOffsetVoltage(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmcplLeadOffsetVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3913</i>
	 */
	public static native int dAQmxResetAIThrmcplLeadOffsetVoltage(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Atten ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAtten(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3915</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIAtten(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIAtten(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIAtten(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Atten ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAtten(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3915</i>
	 */
	public static native int dAQmxGetAIAtten(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAtten(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3916</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIAtten(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIAtten(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIAtten(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAtten(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3916</i>
	 */
	public static native int dAQmxSetAIAtten(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAtten(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3917</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIAtten(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIAtten(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIAtten(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAtten(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3917</i>
	 */
	public static native int dAQmxResetAIAtten(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ProbeAtten ***<br>
	 * Original signature : <code>int32 DAQmxGetAIProbeAtten(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3919</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIProbeAtten(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIProbeAtten(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIProbeAtten(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ProbeAtten ***<br>
	 * Original signature : <code>int32 DAQmxGetAIProbeAtten(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3919</i>
	 */
	public static native int dAQmxGetAIProbeAtten(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIProbeAtten(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3920</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIProbeAtten(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIProbeAtten(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIProbeAtten(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIProbeAtten(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3920</i>
	 */
	public static native int dAQmxSetAIProbeAtten(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIProbeAtten(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3921</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIProbeAtten(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIProbeAtten(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIProbeAtten(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIProbeAtten(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3921</i>
	 */
	public static native int dAQmxResetAIProbeAtten(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3923</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAILowpassEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAILowpassEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAILowpassEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3923</i>
	 */
	public static native int dAQmxGetAILowpassEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3924</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAILowpassEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAILowpassEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAILowpassEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3924</i>
	 */
	public static native int dAQmxSetAILowpassEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3925</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAILowpassEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAILowpassEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAILowpassEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3925</i>
	 */
	public static native int dAQmxResetAILowpassEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_CutoffFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassCutoffFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3927</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAILowpassCutoffFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAILowpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAILowpassCutoffFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_CutoffFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassCutoffFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3927</i>
	 */
	public static native int dAQmxGetAILowpassCutoffFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassCutoffFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3928</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAILowpassCutoffFreq(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAILowpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAILowpassCutoffFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassCutoffFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3928</i>
	 */
	public static native int dAQmxSetAILowpassCutoffFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassCutoffFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3929</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAILowpassCutoffFreq(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAILowpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAILowpassCutoffFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassCutoffFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3929</i>
	 */
	public static native int dAQmxResetAILowpassCutoffFreq(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SourceSelection<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapClkSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3932</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAILowpassSwitchCapClkSrc(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAILowpassSwitchCapClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAILowpassSwitchCapClkSrc(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SourceSelection<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapClkSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3932</i>
	 */
	public static native int dAQmxGetAILowpassSwitchCapClkSrc(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapClkSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3933</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAILowpassSwitchCapClkSrc(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAILowpassSwitchCapClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAILowpassSwitchCapClkSrc(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapClkSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3933</i>
	 */
	public static native int dAQmxSetAILowpassSwitchCapClkSrc(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapClkSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3934</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAILowpassSwitchCapClkSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAILowpassSwitchCapClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAILowpassSwitchCapClkSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapClkSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3934</i>
	 */
	public static native int dAQmxResetAILowpassSwitchCapClkSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_SwitchCap_ExtClkFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapExtClkFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3936</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAILowpassSwitchCapExtClkFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAILowpassSwitchCapExtClkFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAILowpassSwitchCapExtClkFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_SwitchCap_ExtClkFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapExtClkFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3936</i>
	 */
	public static native int dAQmxGetAILowpassSwitchCapExtClkFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapExtClkFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3937</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAILowpassSwitchCapExtClkFreq(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAILowpassSwitchCapExtClkFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAILowpassSwitchCapExtClkFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapExtClkFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3937</i>
	 */
	public static native int dAQmxSetAILowpassSwitchCapExtClkFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapExtClkFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3938</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAILowpassSwitchCapExtClkFreq(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAILowpassSwitchCapExtClkFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAILowpassSwitchCapExtClkFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapExtClkFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3938</i>
	 */
	public static native int dAQmxResetAILowpassSwitchCapExtClkFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_SwitchCap_ExtClkDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapExtClkDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3940</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAILowpassSwitchCapExtClkDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAILowpassSwitchCapExtClkDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAILowpassSwitchCapExtClkDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_SwitchCap_ExtClkDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapExtClkDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3940</i>
	 */
	public static native int dAQmxGetAILowpassSwitchCapExtClkDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapExtClkDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 3941</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAILowpassSwitchCapExtClkDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAILowpassSwitchCapExtClkDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAILowpassSwitchCapExtClkDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapExtClkDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 3941</i>
	 */
	public static native int dAQmxSetAILowpassSwitchCapExtClkDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapExtClkDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3942</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAILowpassSwitchCapExtClkDiv(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAILowpassSwitchCapExtClkDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAILowpassSwitchCapExtClkDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapExtClkDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3942</i>
	 */
	public static native int dAQmxResetAILowpassSwitchCapExtClkDiv(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_SwitchCap_OutClkDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapOutClkDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3944</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAILowpassSwitchCapOutClkDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAILowpassSwitchCapOutClkDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAILowpassSwitchCapOutClkDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_SwitchCap_OutClkDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapOutClkDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3944</i>
	 */
	public static native int dAQmxGetAILowpassSwitchCapOutClkDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapOutClkDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 3945</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAILowpassSwitchCapOutClkDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAILowpassSwitchCapOutClkDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAILowpassSwitchCapOutClkDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapOutClkDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 3945</i>
	 */
	public static native int dAQmxSetAILowpassSwitchCapOutClkDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapOutClkDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3946</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAILowpassSwitchCapOutClkDiv(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAILowpassSwitchCapOutClkDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAILowpassSwitchCapOutClkDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapOutClkDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3946</i>
	 */
	public static native int dAQmxResetAILowpassSwitchCapOutClkDiv(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3948</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3948</i>
	 */
	public static native int dAQmxGetAIDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3949</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3949</i>
	 */
	public static native int dAQmxSetAIDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3950</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3950</i>
	 */
	public static native int dAQmxResetAIDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set FilterType2<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3953</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDigFltrType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIDigFltrType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDigFltrType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FilterType2<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3953</i>
	 */
	public static native int dAQmxGetAIDigFltrType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3954</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDigFltrType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIDigFltrType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDigFltrType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3954</i>
	 */
	public static native int dAQmxSetAIDigFltrType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3955</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDigFltrType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDigFltrType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDigFltrType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3955</i>
	 */
	public static native int dAQmxResetAIDigFltrType(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set FilterResponse<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrResponse(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3958</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDigFltrResponse(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIDigFltrResponse(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDigFltrResponse(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FilterResponse<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrResponse(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3958</i>
	 */
	public static native int dAQmxGetAIDigFltrResponse(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrResponse(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3959</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDigFltrResponse(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIDigFltrResponse(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDigFltrResponse(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrResponse(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3959</i>
	 */
	public static native int dAQmxSetAIDigFltrResponse(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrResponse(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3960</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDigFltrResponse(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDigFltrResponse(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDigFltrResponse(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrResponse(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3960</i>
	 */
	public static native int dAQmxResetAIDigFltrResponse(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Order ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrOrder(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3962</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDigFltrOrder(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIDigFltrOrder(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDigFltrOrder(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Order ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrOrder(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3962</i>
	 */
	public static native int dAQmxGetAIDigFltrOrder(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrOrder(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 3963</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDigFltrOrder(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIDigFltrOrder(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDigFltrOrder(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrOrder(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 3963</i>
	 */
	public static native int dAQmxSetAIDigFltrOrder(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrOrder(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3964</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDigFltrOrder(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDigFltrOrder(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDigFltrOrder(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrOrder(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3964</i>
	 */
	public static native int dAQmxResetAIDigFltrOrder(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Lowpass_CutoffFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrLowpassCutoffFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3966</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDigFltrLowpassCutoffFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIDigFltrLowpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDigFltrLowpassCutoffFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Lowpass_CutoffFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrLowpassCutoffFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3966</i>
	 */
	public static native int dAQmxGetAIDigFltrLowpassCutoffFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrLowpassCutoffFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3967</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDigFltrLowpassCutoffFreq(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIDigFltrLowpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDigFltrLowpassCutoffFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrLowpassCutoffFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3967</i>
	 */
	public static native int dAQmxSetAIDigFltrLowpassCutoffFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrLowpassCutoffFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3968</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDigFltrLowpassCutoffFreq(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDigFltrLowpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDigFltrLowpassCutoffFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrLowpassCutoffFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3968</i>
	 */
	public static native int dAQmxResetAIDigFltrLowpassCutoffFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Highpass_CutoffFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrHighpassCutoffFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3970</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDigFltrHighpassCutoffFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIDigFltrHighpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDigFltrHighpassCutoffFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Highpass_CutoffFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrHighpassCutoffFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3970</i>
	 */
	public static native int dAQmxGetAIDigFltrHighpassCutoffFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrHighpassCutoffFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3971</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDigFltrHighpassCutoffFreq(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIDigFltrHighpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDigFltrHighpassCutoffFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrHighpassCutoffFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3971</i>
	 */
	public static native int dAQmxSetAIDigFltrHighpassCutoffFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrHighpassCutoffFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3972</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDigFltrHighpassCutoffFreq(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDigFltrHighpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDigFltrHighpassCutoffFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrHighpassCutoffFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3972</i>
	 */
	public static native int dAQmxResetAIDigFltrHighpassCutoffFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Bandpass_CenterFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrBandpassCenterFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3974</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDigFltrBandpassCenterFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIDigFltrBandpassCenterFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDigFltrBandpassCenterFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Bandpass_CenterFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrBandpassCenterFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3974</i>
	 */
	public static native int dAQmxGetAIDigFltrBandpassCenterFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrBandpassCenterFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3975</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDigFltrBandpassCenterFreq(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIDigFltrBandpassCenterFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDigFltrBandpassCenterFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrBandpassCenterFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3975</i>
	 */
	public static native int dAQmxSetAIDigFltrBandpassCenterFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrBandpassCenterFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3976</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDigFltrBandpassCenterFreq(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDigFltrBandpassCenterFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDigFltrBandpassCenterFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrBandpassCenterFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3976</i>
	 */
	public static native int dAQmxResetAIDigFltrBandpassCenterFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Bandpass_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrBandpassWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3978</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDigFltrBandpassWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIDigFltrBandpassWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDigFltrBandpassWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Bandpass_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrBandpassWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3978</i>
	 */
	public static native int dAQmxGetAIDigFltrBandpassWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrBandpassWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3979</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDigFltrBandpassWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIDigFltrBandpassWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDigFltrBandpassWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrBandpassWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3979</i>
	 */
	public static native int dAQmxSetAIDigFltrBandpassWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrBandpassWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3980</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDigFltrBandpassWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDigFltrBandpassWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDigFltrBandpassWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrBandpassWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3980</i>
	 */
	public static native int dAQmxResetAIDigFltrBandpassWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Notch_CenterFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrNotchCenterFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3982</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDigFltrNotchCenterFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIDigFltrNotchCenterFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDigFltrNotchCenterFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Notch_CenterFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrNotchCenterFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3982</i>
	 */
	public static native int dAQmxGetAIDigFltrNotchCenterFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrNotchCenterFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3983</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDigFltrNotchCenterFreq(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIDigFltrNotchCenterFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDigFltrNotchCenterFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrNotchCenterFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3983</i>
	 */
	public static native int dAQmxSetAIDigFltrNotchCenterFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrNotchCenterFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3984</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDigFltrNotchCenterFreq(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDigFltrNotchCenterFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDigFltrNotchCenterFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrNotchCenterFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3984</i>
	 */
	public static native int dAQmxResetAIDigFltrNotchCenterFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Notch_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrNotchWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3986</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDigFltrNotchWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIDigFltrNotchWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDigFltrNotchWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Notch_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrNotchWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3986</i>
	 */
	public static native int dAQmxGetAIDigFltrNotchWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrNotchWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3987</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDigFltrNotchWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIDigFltrNotchWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDigFltrNotchWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrNotchWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3987</i>
	 */
	public static native int dAQmxSetAIDigFltrNotchWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrNotchWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3988</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDigFltrNotchWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDigFltrNotchWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDigFltrNotchWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrNotchWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3988</i>
	 */
	public static native int dAQmxResetAIDigFltrNotchWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Coeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3990</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDigFltrCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIDigFltrCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDigFltrCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Coeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3990</i>
	 */
	public static native int dAQmxGetAIDigFltrCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3991</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDigFltrCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetAIDigFltrCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDigFltrCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3991</i>
	 */
	public static native int dAQmxSetAIDigFltrCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3992</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDigFltrCoeff(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDigFltrCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDigFltrCoeff(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3992</i>
	 */
	public static native int dAQmxResetAIDigFltrCoeff(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_FilterDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFilterDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3994</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIFilterDelay(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIFilterDelay(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_FilterDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFilterDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3994</i>
	 */
	public static native int dAQmxGetAIFilterDelay(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Uses value set DigitalWidthUnits4<br>
	 * Original signature : <code>int32 DAQmxGetAIFilterDelayUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3997</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIFilterDelayUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIFilterDelayUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIFilterDelayUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DigitalWidthUnits4<br>
	 * Original signature : <code>int32 DAQmxGetAIFilterDelayUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3997</i>
	 */
	public static native int dAQmxGetAIFilterDelayUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFilterDelayUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3998</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIFilterDelayUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIFilterDelayUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIFilterDelayUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFilterDelayUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3998</i>
	 */
	public static native int dAQmxSetAIFilterDelayUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFilterDelayUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3999</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIFilterDelayUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIFilterDelayUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIFilterDelayUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFilterDelayUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3999</i>
	 */
	public static native int dAQmxResetAIFilterDelayUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RemoveFilterDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRemoveFilterDelay(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4001</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRemoveFilterDelay(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIRemoveFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRemoveFilterDelay(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RemoveFilterDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRemoveFilterDelay(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4001</i>
	 */
	public static native int dAQmxGetAIRemoveFilterDelay(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRemoveFilterDelay(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4002</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRemoveFilterDelay(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIRemoveFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRemoveFilterDelay(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRemoveFilterDelay(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4002</i>
	 */
	public static native int dAQmxSetAIRemoveFilterDelay(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRemoveFilterDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4003</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRemoveFilterDelay(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRemoveFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRemoveFilterDelay(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRemoveFilterDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4003</i>
	 */
	public static native int dAQmxResetAIRemoveFilterDelay(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_FilterDelayAdjustment ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFilterDelayAdjustment(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4005</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIFilterDelayAdjustment(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIFilterDelayAdjustment(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIFilterDelayAdjustment(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_FilterDelayAdjustment ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFilterDelayAdjustment(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4005</i>
	 */
	public static native int dAQmxGetAIFilterDelayAdjustment(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFilterDelayAdjustment(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4006</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIFilterDelayAdjustment(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIFilterDelayAdjustment(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIFilterDelayAdjustment(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFilterDelayAdjustment(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4006</i>
	 */
	public static native int dAQmxSetAIFilterDelayAdjustment(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFilterDelayAdjustment(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4007</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIFilterDelayAdjustment(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIFilterDelayAdjustment(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIFilterDelayAdjustment(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFilterDelayAdjustment(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4007</i>
	 */
	public static native int dAQmxResetAIFilterDelayAdjustment(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_AveragingWinSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAveragingWinSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4009</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIAveragingWinSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIAveragingWinSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIAveragingWinSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_AveragingWinSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAveragingWinSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4009</i>
	 */
	public static native int dAQmxGetAIAveragingWinSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAveragingWinSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4010</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIAveragingWinSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIAveragingWinSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIAveragingWinSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAveragingWinSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4010</i>
	 */
	public static native int dAQmxSetAIAveragingWinSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAveragingWinSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4011</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIAveragingWinSize(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIAveragingWinSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIAveragingWinSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAveragingWinSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4011</i>
	 */
	public static native int dAQmxResetAIAveragingWinSize(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ResolutionType1<br>
	 * Original signature : <code>int32 DAQmxGetAIResolutionUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4014</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIResolutionUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIResolutionUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIResolutionUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ResolutionType1<br>
	 * Original signature : <code>int32 DAQmxGetAIResolutionUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4014</i>
	 */
	public static native int dAQmxGetAIResolutionUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Resolution ***<br>
	 * Original signature : <code>int32 DAQmxGetAIResolution(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4016</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIResolution(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIResolution(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIResolution(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Resolution ***<br>
	 * Original signature : <code>int32 DAQmxGetAIResolution(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4016</i>
	 */
	public static native int dAQmxGetAIResolution(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RawSampSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRawSampSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4018</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRawSampSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIRawSampSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRawSampSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RawSampSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRawSampSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4018</i>
	 */
	public static native int dAQmxGetAIRawSampSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Uses value set DataJustification1<br>
	 * Original signature : <code>int32 DAQmxGetAIRawSampJustification(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4021</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRawSampJustification(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIRawSampJustification(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRawSampJustification(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DataJustification1<br>
	 * Original signature : <code>int32 DAQmxGetAIRawSampJustification(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4021</i>
	 */
	public static native int dAQmxGetAIRawSampJustification(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Uses value set ADCTimingMode<br>
	 * Original signature : <code>int32 DAQmxGetAIADCTimingMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4024</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIADCTimingMode(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIADCTimingMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIADCTimingMode(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ADCTimingMode<br>
	 * Original signature : <code>int32 DAQmxGetAIADCTimingMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4024</i>
	 */
	public static native int dAQmxGetAIADCTimingMode(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIADCTimingMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4025</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIADCTimingMode(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIADCTimingMode(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIADCTimingMode(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIADCTimingMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4025</i>
	 */
	public static native int dAQmxSetAIADCTimingMode(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIADCTimingMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4026</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIADCTimingMode(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIADCTimingMode(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIADCTimingMode(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIADCTimingMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4026</i>
	 */
	public static native int dAQmxResetAIADCTimingMode(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ADCCustomTimingMode ***<br>
	 * Original signature : <code>int32 DAQmxGetAIADCCustomTimingMode(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4028</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIADCCustomTimingMode(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIADCCustomTimingMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIADCCustomTimingMode(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ADCCustomTimingMode ***<br>
	 * Original signature : <code>int32 DAQmxGetAIADCCustomTimingMode(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4028</i>
	 */
	public static native int dAQmxGetAIADCCustomTimingMode(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIADCCustomTimingMode(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4029</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIADCCustomTimingMode(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIADCCustomTimingMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIADCCustomTimingMode(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIADCCustomTimingMode(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4029</i>
	 */
	public static native int dAQmxSetAIADCCustomTimingMode(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIADCCustomTimingMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4030</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIADCCustomTimingMode(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIADCCustomTimingMode(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIADCCustomTimingMode(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIADCCustomTimingMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4030</i>
	 */
	public static native int dAQmxResetAIADCCustomTimingMode(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Dither_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDitherEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4032</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDitherEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIDitherEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDitherEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Dither_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDitherEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4032</i>
	 */
	public static native int dAQmxGetAIDitherEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDitherEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4033</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDitherEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIDitherEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDitherEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDitherEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4033</i>
	 */
	public static native int dAQmxSetAIDitherEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDitherEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4034</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDitherEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDitherEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDitherEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDitherEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4034</i>
	 */
	public static native int dAQmxResetAIDitherEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_HasValidCalInfo ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalHasValidCalInfo(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4036</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalHasValidCalInfo(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIChanCalHasValidCalInfo(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalHasValidCalInfo(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_HasValidCalInfo ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalHasValidCalInfo(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4036</i>
	 */
	public static native int dAQmxGetAIChanCalHasValidCalInfo(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_EnableCal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalEnableCal(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4038</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalEnableCal(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIChanCalEnableCal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalEnableCal(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_EnableCal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalEnableCal(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4038</i>
	 */
	public static native int dAQmxGetAIChanCalEnableCal(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalEnableCal(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4039</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIChanCalEnableCal(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIChanCalEnableCal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIChanCalEnableCal(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalEnableCal(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4039</i>
	 */
	public static native int dAQmxSetAIChanCalEnableCal(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalEnableCal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4040</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIChanCalEnableCal(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIChanCalEnableCal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIChanCalEnableCal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalEnableCal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4040</i>
	 */
	public static native int dAQmxResetAIChanCalEnableCal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_ApplyCalIfExp ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalApplyCalIfExp(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4042</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalApplyCalIfExp(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIChanCalApplyCalIfExp(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalApplyCalIfExp(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_ApplyCalIfExp ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalApplyCalIfExp(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4042</i>
	 */
	public static native int dAQmxGetAIChanCalApplyCalIfExp(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalApplyCalIfExp(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4043</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIChanCalApplyCalIfExp(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIChanCalApplyCalIfExp(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIChanCalApplyCalIfExp(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalApplyCalIfExp(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4043</i>
	 */
	public static native int dAQmxSetAIChanCalApplyCalIfExp(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalApplyCalIfExp(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4044</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIChanCalApplyCalIfExp(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIChanCalApplyCalIfExp(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIChanCalApplyCalIfExp(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalApplyCalIfExp(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4044</i>
	 */
	public static native int dAQmxResetAIChanCalApplyCalIfExp(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ScaleType3<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalScaleType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4047</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalScaleType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIChanCalScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalScaleType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ScaleType3<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalScaleType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4047</i>
	 */
	public static native int dAQmxGetAIChanCalScaleType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalScaleType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4048</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIChanCalScaleType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIChanCalScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIChanCalScaleType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalScaleType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4048</i>
	 */
	public static native int dAQmxSetAIChanCalScaleType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalScaleType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4049</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIChanCalScaleType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIChanCalScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIChanCalScaleType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalScaleType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4049</i>
	 */
	public static native int dAQmxResetAIChanCalScaleType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Table_PreScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalTablePreScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4051</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalTablePreScaledVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIChanCalTablePreScaledVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalTablePreScaledVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Table_PreScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalTablePreScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4051</i>
	 */
	public static native int dAQmxGetAIChanCalTablePreScaledVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalTablePreScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4052</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIChanCalTablePreScaledVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetAIChanCalTablePreScaledVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIChanCalTablePreScaledVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalTablePreScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4052</i>
	 */
	public static native int dAQmxSetAIChanCalTablePreScaledVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalTablePreScaledVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4053</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIChanCalTablePreScaledVals(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIChanCalTablePreScaledVals(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIChanCalTablePreScaledVals(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalTablePreScaledVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4053</i>
	 */
	public static native int dAQmxResetAIChanCalTablePreScaledVals(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Table_ScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalTableScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4055</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalTableScaledVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIChanCalTableScaledVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalTableScaledVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Table_ScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalTableScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4055</i>
	 */
	public static native int dAQmxGetAIChanCalTableScaledVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalTableScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4056</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIChanCalTableScaledVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetAIChanCalTableScaledVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIChanCalTableScaledVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalTableScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4056</i>
	 */
	public static native int dAQmxSetAIChanCalTableScaledVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalTableScaledVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4057</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIChanCalTableScaledVals(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIChanCalTableScaledVals(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIChanCalTableScaledVals(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalTableScaledVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4057</i>
	 */
	public static native int dAQmxResetAIChanCalTableScaledVals(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Poly_ForwardCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalPolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4059</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalPolyForwardCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIChanCalPolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalPolyForwardCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Poly_ForwardCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalPolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4059</i>
	 */
	public static native int dAQmxGetAIChanCalPolyForwardCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalPolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4060</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIChanCalPolyForwardCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetAIChanCalPolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIChanCalPolyForwardCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalPolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4060</i>
	 */
	public static native int dAQmxSetAIChanCalPolyForwardCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalPolyForwardCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4061</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIChanCalPolyForwardCoeff(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIChanCalPolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIChanCalPolyForwardCoeff(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalPolyForwardCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4061</i>
	 */
	public static native int dAQmxResetAIChanCalPolyForwardCoeff(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Poly_ReverseCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalPolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4063</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalPolyReverseCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIChanCalPolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalPolyReverseCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Poly_ReverseCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalPolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4063</i>
	 */
	public static native int dAQmxGetAIChanCalPolyReverseCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalPolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4064</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIChanCalPolyReverseCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetAIChanCalPolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIChanCalPolyReverseCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalPolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4064</i>
	 */
	public static native int dAQmxSetAIChanCalPolyReverseCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalPolyReverseCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4065</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIChanCalPolyReverseCoeff(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIChanCalPolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIChanCalPolyReverseCoeff(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalPolyReverseCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4065</i>
	 */
	public static native int dAQmxResetAIChanCalPolyReverseCoeff(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_OperatorName ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalOperatorName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4067</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalOperatorName(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIChanCalOperatorName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalOperatorName(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_OperatorName ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalOperatorName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4067</i>
	 */
	public static native int dAQmxGetAIChanCalOperatorName(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalOperatorName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4068</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIChanCalOperatorName(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetAIChanCalOperatorName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIChanCalOperatorName(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalOperatorName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4068</i>
	 */
	public static native int dAQmxSetAIChanCalOperatorName(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalOperatorName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4069</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIChanCalOperatorName(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIChanCalOperatorName(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIChanCalOperatorName(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalOperatorName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4069</i>
	 */
	public static native int dAQmxResetAIChanCalOperatorName(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Desc ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalDesc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4071</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalDesc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIChanCalDesc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalDesc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Desc ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalDesc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4071</i>
	 */
	public static native int dAQmxGetAIChanCalDesc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalDesc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4072</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIChanCalDesc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetAIChanCalDesc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIChanCalDesc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalDesc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4072</i>
	 */
	public static native int dAQmxSetAIChanCalDesc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalDesc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4073</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIChanCalDesc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIChanCalDesc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIChanCalDesc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalDesc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4073</i>
	 */
	public static native int dAQmxResetAIChanCalDesc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Verif_RefVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalVerifRefVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4075</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalVerifRefVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIChanCalVerifRefVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalVerifRefVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Verif_RefVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalVerifRefVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4075</i>
	 */
	public static native int dAQmxGetAIChanCalVerifRefVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalVerifRefVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4076</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIChanCalVerifRefVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetAIChanCalVerifRefVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIChanCalVerifRefVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalVerifRefVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4076</i>
	 */
	public static native int dAQmxSetAIChanCalVerifRefVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalVerifRefVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4077</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIChanCalVerifRefVals(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIChanCalVerifRefVals(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIChanCalVerifRefVals(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalVerifRefVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4077</i>
	 */
	public static native int dAQmxResetAIChanCalVerifRefVals(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Verif_AcqVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalVerifAcqVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4079</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIChanCalVerifAcqVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIChanCalVerifAcqVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIChanCalVerifAcqVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Verif_AcqVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalVerifAcqVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4079</i>
	 */
	public static native int dAQmxGetAIChanCalVerifAcqVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalVerifAcqVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4080</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIChanCalVerifAcqVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetAIChanCalVerifAcqVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIChanCalVerifAcqVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalVerifAcqVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4080</i>
	 */
	public static native int dAQmxSetAIChanCalVerifAcqVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalVerifAcqVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4081</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIChanCalVerifAcqVals(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIChanCalVerifAcqVals(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIChanCalVerifAcqVals(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalVerifAcqVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4081</i>
	 */
	public static native int dAQmxResetAIChanCalVerifAcqVals(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Rng_High ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRngHigh(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4083</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRngHigh(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIRngHigh(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRngHigh(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Rng_High ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRngHigh(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4083</i>
	 */
	public static native int dAQmxGetAIRngHigh(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRngHigh(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4084</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRngHigh(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIRngHigh(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRngHigh(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRngHigh(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4084</i>
	 */
	public static native int dAQmxSetAIRngHigh(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRngHigh(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4085</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRngHigh(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRngHigh(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRngHigh(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRngHigh(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4085</i>
	 */
	public static native int dAQmxResetAIRngHigh(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Rng_Low ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRngLow(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4087</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRngLow(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIRngLow(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRngLow(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Rng_Low ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRngLow(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4087</i>
	 */
	public static native int dAQmxGetAIRngLow(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRngLow(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4088</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRngLow(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIRngLow(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRngLow(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRngLow(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4088</i>
	 */
	public static native int dAQmxSetAIRngLow(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRngLow(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4089</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRngLow(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRngLow(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRngLow(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRngLow(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4089</i>
	 */
	public static native int dAQmxResetAIRngLow(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DCOffset ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDCOffset(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4091</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDCOffset(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIDCOffset(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDCOffset(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DCOffset ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDCOffset(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4091</i>
	 */
	public static native int dAQmxGetAIDCOffset(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDCOffset(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4092</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDCOffset(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIDCOffset(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDCOffset(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDCOffset(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4092</i>
	 */
	public static native int dAQmxSetAIDCOffset(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDCOffset(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4093</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDCOffset(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDCOffset(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDCOffset(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDCOffset(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4093</i>
	 */
	public static native int dAQmxResetAIDCOffset(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Gain ***<br>
	 * Original signature : <code>int32 DAQmxGetAIGain(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4095</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIGain(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIGain(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIGain(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Gain ***<br>
	 * Original signature : <code>int32 DAQmxGetAIGain(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4095</i>
	 */
	public static native int dAQmxGetAIGain(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIGain(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4096</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIGain(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIGain(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIGain(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIGain(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4096</i>
	 */
	public static native int dAQmxSetAIGain(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIGain(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4097</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIGain(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIGain(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIGain(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIGain(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4097</i>
	 */
	public static native int dAQmxResetAIGain(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_SampAndHold_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAISampAndHoldEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4099</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAISampAndHoldEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAISampAndHoldEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAISampAndHoldEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_SampAndHold_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAISampAndHoldEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4099</i>
	 */
	public static native int dAQmxGetAISampAndHoldEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISampAndHoldEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4100</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAISampAndHoldEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAISampAndHoldEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAISampAndHoldEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISampAndHoldEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4100</i>
	 */
	public static native int dAQmxSetAISampAndHoldEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAISampAndHoldEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4101</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAISampAndHoldEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAISampAndHoldEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAISampAndHoldEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAISampAndHoldEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4101</i>
	 */
	public static native int dAQmxResetAISampAndHoldEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AutoZeroType1<br>
	 * Original signature : <code>int32 DAQmxGetAIAutoZeroMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4104</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIAutoZeroMode(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIAutoZeroMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIAutoZeroMode(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AutoZeroType1<br>
	 * Original signature : <code>int32 DAQmxGetAIAutoZeroMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4104</i>
	 */
	public static native int dAQmxGetAIAutoZeroMode(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAutoZeroMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4105</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIAutoZeroMode(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIAutoZeroMode(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIAutoZeroMode(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAutoZeroMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4105</i>
	 */
	public static native int dAQmxSetAIAutoZeroMode(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAutoZeroMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4106</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIAutoZeroMode(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIAutoZeroMode(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIAutoZeroMode(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAutoZeroMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4106</i>
	 */
	public static native int dAQmxResetAIAutoZeroMode(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetAIDataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4109</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDataXferMech(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDataXferMech(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetAIDataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4109</i>
	 */
	public static native int dAQmxGetAIDataXferMech(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4110</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDataXferMech(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDataXferMech(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4110</i>
	 */
	public static native int dAQmxSetAIDataXferMech(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4111</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDataXferMech(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDataXferMech(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4111</i>
	 */
	public static native int dAQmxResetAIDataXferMech(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetAIDataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4114</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDataXferReqCond(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDataXferReqCond(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetAIDataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4114</i>
	 */
	public static native int dAQmxGetAIDataXferReqCond(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4115</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDataXferReqCond(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDataXferReqCond(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4115</i>
	 */
	public static native int dAQmxSetAIDataXferReqCond(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4116</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDataXferReqCond(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDataXferReqCond(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4116</i>
	 */
	public static native int dAQmxResetAIDataXferReqCond(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DataXferCustomThreshold ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDataXferCustomThreshold(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4118</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDataXferCustomThreshold(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIDataXferCustomThreshold(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDataXferCustomThreshold(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DataXferCustomThreshold ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDataXferCustomThreshold(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4118</i>
	 */
	public static native int dAQmxGetAIDataXferCustomThreshold(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDataXferCustomThreshold(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4119</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIDataXferCustomThreshold(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIDataXferCustomThreshold(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIDataXferCustomThreshold(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDataXferCustomThreshold(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4119</i>
	 */
	public static native int dAQmxSetAIDataXferCustomThreshold(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDataXferCustomThreshold(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4120</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIDataXferCustomThreshold(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIDataXferCustomThreshold(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIDataXferCustomThreshold(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDataXferCustomThreshold(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4120</i>
	 */
	public static native int dAQmxResetAIDataXferCustomThreshold(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAIUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4122</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAIUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4122</i>
	 */
	public static native int dAQmxGetAIUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4123</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4123</i>
	 */
	public static native int dAQmxSetAIUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4124</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIUsbXferReqSize(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIUsbXferReqSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4124</i>
	 */
	public static native int dAQmxResetAIUsbXferReqSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetAIUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4126</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetAIUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4126</i>
	 */
	public static native int dAQmxGetAIUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4127</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4127</i>
	 */
	public static native int dAQmxSetAIUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4128</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIUsbXferReqCount(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIUsbXferReqCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4128</i>
	 */
	public static native int dAQmxResetAIUsbXferReqCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4130</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIMemMapEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4130</i>
	 */
	public static native int dAQmxGetAIMemMapEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4131</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIMemMapEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4131</i>
	 */
	public static native int dAQmxSetAIMemMapEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4132</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIMemMapEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIMemMapEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4132</i>
	 */
	public static native int dAQmxResetAIMemMapEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set RawDataCompressionType<br>
	 * Original signature : <code>int32 DAQmxGetAIRawDataCompressionType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4135</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIRawDataCompressionType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIRawDataCompressionType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIRawDataCompressionType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set RawDataCompressionType<br>
	 * Original signature : <code>int32 DAQmxGetAIRawDataCompressionType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4135</i>
	 */
	public static native int dAQmxGetAIRawDataCompressionType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRawDataCompressionType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4136</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIRawDataCompressionType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIRawDataCompressionType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIRawDataCompressionType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRawDataCompressionType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4136</i>
	 */
	public static native int dAQmxSetAIRawDataCompressionType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRawDataCompressionType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4137</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIRawDataCompressionType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIRawDataCompressionType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIRawDataCompressionType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRawDataCompressionType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4137</i>
	 */
	public static native int dAQmxResetAIRawDataCompressionType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_LossyLSBRemoval_CompressedSampSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAILossyLSBRemovalCompressedSampSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4139</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAILossyLSBRemovalCompressedSampSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAILossyLSBRemovalCompressedSampSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAILossyLSBRemovalCompressedSampSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_LossyLSBRemoval_CompressedSampSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAILossyLSBRemovalCompressedSampSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4139</i>
	 */
	public static native int dAQmxGetAILossyLSBRemovalCompressedSampSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILossyLSBRemovalCompressedSampSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4140</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAILossyLSBRemovalCompressedSampSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAILossyLSBRemovalCompressedSampSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAILossyLSBRemovalCompressedSampSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILossyLSBRemovalCompressedSampSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4140</i>
	 */
	public static native int dAQmxSetAILossyLSBRemovalCompressedSampSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILossyLSBRemovalCompressedSampSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4141</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAILossyLSBRemovalCompressedSampSize(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAILossyLSBRemovalCompressedSampSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAILossyLSBRemovalCompressedSampSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILossyLSBRemovalCompressedSampSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4141</i>
	 */
	public static native int dAQmxResetAILossyLSBRemovalCompressedSampSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DevScalingCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDevScalingCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4143</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDevScalingCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIDevScalingCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDevScalingCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_DevScalingCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDevScalingCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4143</i>
	 */
	public static native int dAQmxGetAIDevScalingCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_EnhancedAliasRejectionEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIEnhancedAliasRejectionEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4145</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIEnhancedAliasRejectionEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIEnhancedAliasRejectionEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIEnhancedAliasRejectionEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_EnhancedAliasRejectionEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIEnhancedAliasRejectionEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4145</i>
	 */
	public static native int dAQmxGetAIEnhancedAliasRejectionEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEnhancedAliasRejectionEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4146</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIEnhancedAliasRejectionEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIEnhancedAliasRejectionEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIEnhancedAliasRejectionEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEnhancedAliasRejectionEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4146</i>
	 */
	public static native int dAQmxSetAIEnhancedAliasRejectionEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEnhancedAliasRejectionEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4147</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIEnhancedAliasRejectionEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIEnhancedAliasRejectionEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIEnhancedAliasRejectionEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEnhancedAliasRejectionEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4147</i>
	 */
	public static native int dAQmxResetAIEnhancedAliasRejectionEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_OpenChanDetectEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIOpenChanDetectEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4149</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIOpenChanDetectEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIOpenChanDetectEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIOpenChanDetectEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_OpenChanDetectEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIOpenChanDetectEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4149</i>
	 */
	public static native int dAQmxGetAIOpenChanDetectEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIOpenChanDetectEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4150</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIOpenChanDetectEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIOpenChanDetectEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIOpenChanDetectEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIOpenChanDetectEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4150</i>
	 */
	public static native int dAQmxSetAIOpenChanDetectEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIOpenChanDetectEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4151</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIOpenChanDetectEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIOpenChanDetectEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIOpenChanDetectEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIOpenChanDetectEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4151</i>
	 */
	public static native int dAQmxResetAIOpenChanDetectEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_Max ***<br>
	 * Original signature : <code>int32 DAQmxGetAOMax(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4153</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOMax(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOMax(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOMax(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_Max ***<br>
	 * Original signature : <code>int32 DAQmxGetAOMax(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4153</i>
	 */
	public static native int dAQmxGetAOMax(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOMax(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4154</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOMax(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAOMax(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOMax(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOMax(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4154</i>
	 */
	public static native int dAQmxSetAOMax(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOMax(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4155</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOMax(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOMax(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOMax(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOMax(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4155</i>
	 */
	public static native int dAQmxResetAOMax(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_Min ***<br>
	 * Original signature : <code>int32 DAQmxGetAOMin(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4157</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOMin(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOMin(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOMin(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_Min ***<br>
	 * Original signature : <code>int32 DAQmxGetAOMin(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4157</i>
	 */
	public static native int dAQmxGetAOMin(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOMin(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4158</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOMin(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAOMin(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOMin(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOMin(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4158</i>
	 */
	public static native int dAQmxSetAOMin(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOMin(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4159</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOMin(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOMin(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOMin(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOMin(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4159</i>
	 */
	public static native int dAQmxResetAOMin(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_CustomScaleName ***<br>
	 * Original signature : <code>int32 DAQmxGetAOCustomScaleName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4161</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOCustomScaleName(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAOCustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOCustomScaleName(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AO_CustomScaleName ***<br>
	 * Original signature : <code>int32 DAQmxGetAOCustomScaleName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4161</i>
	 */
	public static native int dAQmxGetAOCustomScaleName(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAOCustomScaleName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4162</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOCustomScaleName(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetAOCustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOCustomScaleName(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOCustomScaleName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4162</i>
	 */
	public static native int dAQmxSetAOCustomScaleName(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOCustomScaleName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4163</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOCustomScaleName(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOCustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOCustomScaleName(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOCustomScaleName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4163</i>
	 */
	public static native int dAQmxResetAOCustomScaleName(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AOOutputChannelType<br>
	 * Original signature : <code>int32 DAQmxGetAOOutputType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4166</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOOutputType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAOOutputType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOOutputType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AOOutputChannelType<br>
	 * Original signature : <code>int32 DAQmxGetAOOutputType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4166</i>
	 */
	public static native int dAQmxGetAOOutputType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Uses value set VoltageUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAOVoltageUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4169</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOVoltageUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAOVoltageUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOVoltageUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set VoltageUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAOVoltageUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4169</i>
	 */
	public static native int dAQmxGetAOVoltageUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOVoltageUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4170</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOVoltageUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAOVoltageUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOVoltageUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOVoltageUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4170</i>
	 */
	public static native int dAQmxSetAOVoltageUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOVoltageUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4171</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOVoltageUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOVoltageUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOVoltageUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOVoltageUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4171</i>
	 */
	public static native int dAQmxResetAOVoltageUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_Voltage_CurrentLimit ***<br>
	 * Original signature : <code>int32 DAQmxGetAOVoltageCurrentLimit(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4173</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOVoltageCurrentLimit(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOVoltageCurrentLimit(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOVoltageCurrentLimit(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_Voltage_CurrentLimit ***<br>
	 * Original signature : <code>int32 DAQmxGetAOVoltageCurrentLimit(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4173</i>
	 */
	public static native int dAQmxGetAOVoltageCurrentLimit(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOVoltageCurrentLimit(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4174</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOVoltageCurrentLimit(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAOVoltageCurrentLimit(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOVoltageCurrentLimit(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOVoltageCurrentLimit(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4174</i>
	 */
	public static native int dAQmxSetAOVoltageCurrentLimit(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOVoltageCurrentLimit(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4175</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOVoltageCurrentLimit(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOVoltageCurrentLimit(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOVoltageCurrentLimit(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOVoltageCurrentLimit(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4175</i>
	 */
	public static native int dAQmxResetAOVoltageCurrentLimit(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CurrentUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAOCurrentUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4178</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOCurrentUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAOCurrentUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOCurrentUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CurrentUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAOCurrentUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4178</i>
	 */
	public static native int dAQmxGetAOCurrentUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOCurrentUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4179</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOCurrentUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAOCurrentUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOCurrentUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOCurrentUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4179</i>
	 */
	public static native int dAQmxSetAOCurrentUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOCurrentUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4180</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOCurrentUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOCurrentUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOCurrentUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOCurrentUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4180</i>
	 */
	public static native int dAQmxResetAOCurrentUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set FuncGenType<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4183</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOFuncGenType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAOFuncGenType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOFuncGenType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FuncGenType<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4183</i>
	 */
	public static native int dAQmxGetAOFuncGenType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4184</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOFuncGenType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAOFuncGenType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOFuncGenType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4184</i>
	 */
	public static native int dAQmxSetAOFuncGenType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4185</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOFuncGenType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOFuncGenType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOFuncGenType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4185</i>
	 */
	public static native int dAQmxResetAOFuncGenType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Freq ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4187</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOFuncGenFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOFuncGenFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOFuncGenFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Freq ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4187</i>
	 */
	public static native int dAQmxGetAOFuncGenFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4188</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOFuncGenFreq(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAOFuncGenFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOFuncGenFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4188</i>
	 */
	public static native int dAQmxSetAOFuncGenFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4189</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOFuncGenFreq(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOFuncGenFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOFuncGenFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4189</i>
	 */
	public static native int dAQmxResetAOFuncGenFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Amplitude ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenAmplitude(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4191</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOFuncGenAmplitude(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOFuncGenAmplitude(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOFuncGenAmplitude(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Amplitude ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenAmplitude(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4191</i>
	 */
	public static native int dAQmxGetAOFuncGenAmplitude(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenAmplitude(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4192</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOFuncGenAmplitude(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAOFuncGenAmplitude(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOFuncGenAmplitude(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenAmplitude(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4192</i>
	 */
	public static native int dAQmxSetAOFuncGenAmplitude(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenAmplitude(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4193</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOFuncGenAmplitude(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOFuncGenAmplitude(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOFuncGenAmplitude(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenAmplitude(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4193</i>
	 */
	public static native int dAQmxResetAOFuncGenAmplitude(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenOffset(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4195</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOFuncGenOffset(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOFuncGenOffset(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOFuncGenOffset(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenOffset(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4195</i>
	 */
	public static native int dAQmxGetAOFuncGenOffset(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenOffset(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4196</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOFuncGenOffset(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAOFuncGenOffset(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOFuncGenOffset(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenOffset(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4196</i>
	 */
	public static native int dAQmxSetAOFuncGenOffset(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenOffset(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4197</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOFuncGenOffset(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOFuncGenOffset(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOFuncGenOffset(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenOffset(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4197</i>
	 */
	public static native int dAQmxResetAOFuncGenOffset(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Square_DutyCycle ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenSquareDutyCycle(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4199</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOFuncGenSquareDutyCycle(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOFuncGenSquareDutyCycle(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOFuncGenSquareDutyCycle(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Square_DutyCycle ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenSquareDutyCycle(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4199</i>
	 */
	public static native int dAQmxGetAOFuncGenSquareDutyCycle(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenSquareDutyCycle(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4200</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOFuncGenSquareDutyCycle(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAOFuncGenSquareDutyCycle(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOFuncGenSquareDutyCycle(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenSquareDutyCycle(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4200</i>
	 */
	public static native int dAQmxSetAOFuncGenSquareDutyCycle(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenSquareDutyCycle(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4201</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOFuncGenSquareDutyCycle(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOFuncGenSquareDutyCycle(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOFuncGenSquareDutyCycle(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenSquareDutyCycle(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4201</i>
	 */
	public static native int dAQmxResetAOFuncGenSquareDutyCycle(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ModulationType<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenModulationType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4204</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOFuncGenModulationType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAOFuncGenModulationType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOFuncGenModulationType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ModulationType<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenModulationType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4204</i>
	 */
	public static native int dAQmxGetAOFuncGenModulationType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenModulationType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4205</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOFuncGenModulationType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAOFuncGenModulationType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOFuncGenModulationType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenModulationType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4205</i>
	 */
	public static native int dAQmxSetAOFuncGenModulationType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenModulationType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4206</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOFuncGenModulationType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOFuncGenModulationType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOFuncGenModulationType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenModulationType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4206</i>
	 */
	public static native int dAQmxResetAOFuncGenModulationType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_FMDeviation ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenFMDeviation(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4208</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOFuncGenFMDeviation(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOFuncGenFMDeviation(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOFuncGenFMDeviation(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_FMDeviation ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenFMDeviation(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4208</i>
	 */
	public static native int dAQmxGetAOFuncGenFMDeviation(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenFMDeviation(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4209</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOFuncGenFMDeviation(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAOFuncGenFMDeviation(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOFuncGenFMDeviation(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenFMDeviation(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4209</i>
	 */
	public static native int dAQmxSetAOFuncGenFMDeviation(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenFMDeviation(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4210</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOFuncGenFMDeviation(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOFuncGenFMDeviation(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOFuncGenFMDeviation(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenFMDeviation(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4210</i>
	 */
	public static native int dAQmxResetAOFuncGenFMDeviation(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_OutputImpedance ***<br>
	 * Original signature : <code>int32 DAQmxGetAOOutputImpedance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4212</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOOutputImpedance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOOutputImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOOutputImpedance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_OutputImpedance ***<br>
	 * Original signature : <code>int32 DAQmxGetAOOutputImpedance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4212</i>
	 */
	public static native int dAQmxGetAOOutputImpedance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOOutputImpedance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4213</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOOutputImpedance(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAOOutputImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOOutputImpedance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOOutputImpedance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4213</i>
	 */
	public static native int dAQmxSetAOOutputImpedance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOOutputImpedance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4214</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOOutputImpedance(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOOutputImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOOutputImpedance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOOutputImpedance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4214</i>
	 */
	public static native int dAQmxResetAOOutputImpedance(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_LoadImpedance ***<br>
	 * Original signature : <code>int32 DAQmxGetAOLoadImpedance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4216</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOLoadImpedance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOLoadImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOLoadImpedance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_LoadImpedance ***<br>
	 * Original signature : <code>int32 DAQmxGetAOLoadImpedance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4216</i>
	 */
	public static native int dAQmxGetAOLoadImpedance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOLoadImpedance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4217</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOLoadImpedance(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAOLoadImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOLoadImpedance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOLoadImpedance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4217</i>
	 */
	public static native int dAQmxSetAOLoadImpedance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOLoadImpedance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4218</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOLoadImpedance(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOLoadImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOLoadImpedance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOLoadImpedance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4218</i>
	 */
	public static native int dAQmxResetAOLoadImpedance(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AOIdleOutputBehavior<br>
	 * Original signature : <code>int32 DAQmxGetAOIdleOutputBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4221</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOIdleOutputBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAOIdleOutputBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOIdleOutputBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AOIdleOutputBehavior<br>
	 * Original signature : <code>int32 DAQmxGetAOIdleOutputBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4221</i>
	 */
	public static native int dAQmxGetAOIdleOutputBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOIdleOutputBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4222</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOIdleOutputBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAOIdleOutputBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOIdleOutputBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOIdleOutputBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4222</i>
	 */
	public static native int dAQmxSetAOIdleOutputBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOIdleOutputBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4223</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOIdleOutputBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOIdleOutputBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOIdleOutputBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOIdleOutputBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4223</i>
	 */
	public static native int dAQmxResetAOIdleOutputBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set OutputTermCfg<br>
	 * Original signature : <code>int32 DAQmxGetAOTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4226</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAOTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set OutputTermCfg<br>
	 * Original signature : <code>int32 DAQmxGetAOTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4226</i>
	 */
	public static native int dAQmxGetAOTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4227</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAOTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4227</i>
	 */
	public static native int dAQmxSetAOTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4228</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4228</i>
	 */
	public static native int dAQmxResetAOTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ResolutionType1<br>
	 * Original signature : <code>int32 DAQmxGetAOResolutionUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4231</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOResolutionUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAOResolutionUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOResolutionUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ResolutionType1<br>
	 * Original signature : <code>int32 DAQmxGetAOResolutionUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4231</i>
	 */
	public static native int dAQmxGetAOResolutionUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOResolutionUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4232</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOResolutionUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAOResolutionUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOResolutionUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOResolutionUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4232</i>
	 */
	public static native int dAQmxSetAOResolutionUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOResolutionUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4233</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOResolutionUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOResolutionUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOResolutionUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOResolutionUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4233</i>
	 */
	public static native int dAQmxResetAOResolutionUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_Resolution ***<br>
	 * Original signature : <code>int32 DAQmxGetAOResolution(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4235</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOResolution(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOResolution(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOResolution(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_Resolution ***<br>
	 * Original signature : <code>int32 DAQmxGetAOResolution(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4235</i>
	 */
	public static native int dAQmxGetAOResolution(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Rng_High ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRngHigh(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4237</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAODACRngHigh(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAODACRngHigh(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAODACRngHigh(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Rng_High ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRngHigh(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4237</i>
	 */
	public static native int dAQmxGetAODACRngHigh(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRngHigh(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4238</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAODACRngHigh(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAODACRngHigh(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAODACRngHigh(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRngHigh(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4238</i>
	 */
	public static native int dAQmxSetAODACRngHigh(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRngHigh(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4239</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAODACRngHigh(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAODACRngHigh(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAODACRngHigh(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRngHigh(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4239</i>
	 */
	public static native int dAQmxResetAODACRngHigh(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Rng_Low ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRngLow(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4241</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAODACRngLow(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAODACRngLow(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAODACRngLow(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Rng_Low ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRngLow(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4241</i>
	 */
	public static native int dAQmxGetAODACRngLow(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRngLow(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4242</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAODACRngLow(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAODACRngLow(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAODACRngLow(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRngLow(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4242</i>
	 */
	public static native int dAQmxSetAODACRngLow(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRngLow(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4243</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAODACRngLow(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAODACRngLow(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAODACRngLow(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRngLow(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4243</i>
	 */
	public static native int dAQmxResetAODACRngLow(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_ConnToGnd ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefConnToGnd(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4245</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAODACRefConnToGnd(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAODACRefConnToGnd(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAODACRefConnToGnd(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_ConnToGnd ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefConnToGnd(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4245</i>
	 */
	public static native int dAQmxGetAODACRefConnToGnd(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefConnToGnd(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4246</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAODACRefConnToGnd(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAODACRefConnToGnd(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAODACRefConnToGnd(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefConnToGnd(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4246</i>
	 */
	public static native int dAQmxSetAODACRefConnToGnd(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefConnToGnd(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4247</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAODACRefConnToGnd(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAODACRefConnToGnd(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAODACRefConnToGnd(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefConnToGnd(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4247</i>
	 */
	public static native int dAQmxResetAODACRefConnToGnd(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_AllowConnToGnd ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefAllowConnToGnd(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4249</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAODACRefAllowConnToGnd(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAODACRefAllowConnToGnd(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAODACRefAllowConnToGnd(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_AllowConnToGnd ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefAllowConnToGnd(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4249</i>
	 */
	public static native int dAQmxGetAODACRefAllowConnToGnd(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefAllowConnToGnd(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4250</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAODACRefAllowConnToGnd(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAODACRefAllowConnToGnd(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAODACRefAllowConnToGnd(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefAllowConnToGnd(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4250</i>
	 */
	public static native int dAQmxSetAODACRefAllowConnToGnd(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefAllowConnToGnd(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4251</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAODACRefAllowConnToGnd(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAODACRefAllowConnToGnd(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAODACRefAllowConnToGnd(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefAllowConnToGnd(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4251</i>
	 */
	public static native int dAQmxResetAODACRefAllowConnToGnd(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SourceSelection<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4254</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAODACRefSrc(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAODACRefSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAODACRefSrc(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SourceSelection<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4254</i>
	 */
	public static native int dAQmxGetAODACRefSrc(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4255</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAODACRefSrc(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAODACRefSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAODACRefSrc(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4255</i>
	 */
	public static native int dAQmxSetAODACRefSrc(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4256</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAODACRefSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAODACRefSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAODACRefSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4256</i>
	 */
	public static native int dAQmxResetAODACRefSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_ExtSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefExtSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4258</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAODACRefExtSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAODACRefExtSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAODACRefExtSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_ExtSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefExtSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4258</i>
	 */
	public static native int dAQmxGetAODACRefExtSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefExtSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4259</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAODACRefExtSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetAODACRefExtSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAODACRefExtSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefExtSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4259</i>
	 */
	public static native int dAQmxSetAODACRefExtSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefExtSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4260</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAODACRefExtSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAODACRefExtSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAODACRefExtSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefExtSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4260</i>
	 */
	public static native int dAQmxResetAODACRefExtSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_Val ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4262</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAODACRefVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAODACRefVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAODACRefVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_Val ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4262</i>
	 */
	public static native int dAQmxGetAODACRefVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4263</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAODACRefVal(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAODACRefVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAODACRefVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4263</i>
	 */
	public static native int dAQmxSetAODACRefVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4264</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAODACRefVal(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAODACRefVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAODACRefVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4264</i>
	 */
	public static native int dAQmxResetAODACRefVal(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SourceSelection<br>
	 * Original signature : <code>int32 DAQmxGetAODACOffsetSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4267</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAODACOffsetSrc(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAODACOffsetSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAODACOffsetSrc(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SourceSelection<br>
	 * Original signature : <code>int32 DAQmxGetAODACOffsetSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4267</i>
	 */
	public static native int dAQmxGetAODACOffsetSrc(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACOffsetSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4268</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAODACOffsetSrc(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAODACOffsetSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAODACOffsetSrc(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACOffsetSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4268</i>
	 */
	public static native int dAQmxSetAODACOffsetSrc(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACOffsetSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4269</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAODACOffsetSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAODACOffsetSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAODACOffsetSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACOffsetSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4269</i>
	 */
	public static native int dAQmxResetAODACOffsetSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Offset_ExtSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACOffsetExtSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4271</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAODACOffsetExtSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAODACOffsetExtSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAODACOffsetExtSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Offset_ExtSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACOffsetExtSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4271</i>
	 */
	public static native int dAQmxGetAODACOffsetExtSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACOffsetExtSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4272</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAODACOffsetExtSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetAODACOffsetExtSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAODACOffsetExtSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACOffsetExtSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4272</i>
	 */
	public static native int dAQmxSetAODACOffsetExtSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACOffsetExtSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4273</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAODACOffsetExtSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAODACOffsetExtSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAODACOffsetExtSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACOffsetExtSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4273</i>
	 */
	public static native int dAQmxResetAODACOffsetExtSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Offset_Val ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACOffsetVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4275</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAODACOffsetVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAODACOffsetVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAODACOffsetVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Offset_Val ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACOffsetVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4275</i>
	 */
	public static native int dAQmxGetAODACOffsetVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACOffsetVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4276</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAODACOffsetVal(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAODACOffsetVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAODACOffsetVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACOffsetVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4276</i>
	 */
	public static native int dAQmxSetAODACOffsetVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACOffsetVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4277</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAODACOffsetVal(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAODACOffsetVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAODACOffsetVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACOffsetVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4277</i>
	 */
	public static native int dAQmxResetAODACOffsetVal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_ReglitchEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOReglitchEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4279</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOReglitchEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAOReglitchEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOReglitchEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_ReglitchEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOReglitchEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4279</i>
	 */
	public static native int dAQmxGetAOReglitchEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOReglitchEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4280</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOReglitchEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAOReglitchEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOReglitchEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOReglitchEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4280</i>
	 */
	public static native int dAQmxSetAOReglitchEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOReglitchEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4281</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOReglitchEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOReglitchEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOReglitchEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOReglitchEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4281</i>
	 */
	public static native int dAQmxResetAOReglitchEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FilterDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFilterDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4283</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOFilterDelay(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOFilterDelay(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FilterDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFilterDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4283</i>
	 */
	public static native int dAQmxGetAOFilterDelay(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFilterDelay(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4284</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOFilterDelay(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAOFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOFilterDelay(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFilterDelay(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4284</i>
	 */
	public static native int dAQmxSetAOFilterDelay(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFilterDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4285</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOFilterDelay(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOFilterDelay(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFilterDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4285</i>
	 */
	public static native int dAQmxResetAOFilterDelay(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DigitalWidthUnits4<br>
	 * Original signature : <code>int32 DAQmxGetAOFilterDelayUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4288</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOFilterDelayUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAOFilterDelayUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOFilterDelayUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DigitalWidthUnits4<br>
	 * Original signature : <code>int32 DAQmxGetAOFilterDelayUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4288</i>
	 */
	public static native int dAQmxGetAOFilterDelayUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFilterDelayUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4289</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOFilterDelayUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAOFilterDelayUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOFilterDelayUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFilterDelayUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4289</i>
	 */
	public static native int dAQmxSetAOFilterDelayUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFilterDelayUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4290</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOFilterDelayUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOFilterDelayUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOFilterDelayUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFilterDelayUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4290</i>
	 */
	public static native int dAQmxResetAOFilterDelayUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FilterDelayAdjustment ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFilterDelayAdjustment(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4292</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOFilterDelayAdjustment(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOFilterDelayAdjustment(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOFilterDelayAdjustment(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FilterDelayAdjustment ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFilterDelayAdjustment(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4292</i>
	 */
	public static native int dAQmxGetAOFilterDelayAdjustment(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFilterDelayAdjustment(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4293</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOFilterDelayAdjustment(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAOFilterDelayAdjustment(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOFilterDelayAdjustment(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFilterDelayAdjustment(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4293</i>
	 */
	public static native int dAQmxSetAOFilterDelayAdjustment(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFilterDelayAdjustment(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4294</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOFilterDelayAdjustment(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOFilterDelayAdjustment(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOFilterDelayAdjustment(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFilterDelayAdjustment(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4294</i>
	 */
	public static native int dAQmxResetAOFilterDelayAdjustment(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_Gain ***<br>
	 * Original signature : <code>int32 DAQmxGetAOGain(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4296</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOGain(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOGain(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOGain(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_Gain ***<br>
	 * Original signature : <code>int32 DAQmxGetAOGain(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4296</i>
	 */
	public static native int dAQmxGetAOGain(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOGain(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4297</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOGain(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAOGain(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOGain(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOGain(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4297</i>
	 */
	public static native int dAQmxSetAOGain(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOGain(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4298</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOGain(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOGain(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOGain(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOGain(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4298</i>
	 */
	public static native int dAQmxResetAOGain(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_UseOnlyOnBrdMem ***<br>
	 * Original signature : <code>int32 DAQmxGetAOUseOnlyOnBrdMem(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4300</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_UseOnlyOnBrdMem ***<br>
	 * Original signature : <code>int32 DAQmxGetAOUseOnlyOnBrdMem(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4300</i>
	 */
	public static native int dAQmxGetAOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOUseOnlyOnBrdMem(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4301</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOUseOnlyOnBrdMem(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4301</i>
	 */
	public static native int dAQmxSetAOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOUseOnlyOnBrdMem(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4302</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOUseOnlyOnBrdMem(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4302</i>
	 */
	public static native int dAQmxResetAOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetAODataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4305</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAODataXferMech(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAODataXferMech(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetAODataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4305</i>
	 */
	public static native int dAQmxGetAODataXferMech(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4306</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAODataXferMech(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAODataXferMech(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4306</i>
	 */
	public static native int dAQmxSetAODataXferMech(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4307</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAODataXferMech(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAODataXferMech(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4307</i>
	 */
	public static native int dAQmxResetAODataXferMech(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set OutputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetAODataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4310</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAODataXferReqCond(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAODataXferReqCond(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set OutputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetAODataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4310</i>
	 */
	public static native int dAQmxGetAODataXferReqCond(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4311</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAODataXferReqCond(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAODataXferReqCond(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4311</i>
	 */
	public static native int dAQmxSetAODataXferReqCond(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4312</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAODataXferReqCond(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAODataXferReqCond(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4312</i>
	 */
	public static native int dAQmxResetAODataXferReqCond(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAOUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4314</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAOUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4314</i>
	 */
	public static native int dAQmxGetAOUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4315</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4315</i>
	 */
	public static native int dAQmxSetAOUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4316</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOUsbXferReqSize(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOUsbXferReqSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4316</i>
	 */
	public static native int dAQmxResetAOUsbXferReqSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetAOUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4318</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetAOUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4318</i>
	 */
	public static native int dAQmxGetAOUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4319</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4319</i>
	 */
	public static native int dAQmxSetAOUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4320</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOUsbXferReqCount(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOUsbXferReqCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4320</i>
	 */
	public static native int dAQmxResetAOUsbXferReqCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4322</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOMemMapEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4322</i>
	 */
	public static native int dAQmxGetAOMemMapEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4323</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOMemMapEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4323</i>
	 */
	public static native int dAQmxSetAOMemMapEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4324</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOMemMapEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOMemMapEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4324</i>
	 */
	public static native int dAQmxResetAOMemMapEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DevScalingCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAODevScalingCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4326</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAODevScalingCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAODevScalingCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAODevScalingCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AO_DevScalingCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAODevScalingCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4326</i>
	 */
	public static native int dAQmxGetAODevScalingCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AO_EnhancedImageRejectionEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOEnhancedImageRejectionEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4328</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOEnhancedImageRejectionEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAOEnhancedImageRejectionEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOEnhancedImageRejectionEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_EnhancedImageRejectionEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOEnhancedImageRejectionEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4328</i>
	 */
	public static native int dAQmxGetAOEnhancedImageRejectionEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOEnhancedImageRejectionEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4329</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOEnhancedImageRejectionEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAOEnhancedImageRejectionEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOEnhancedImageRejectionEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOEnhancedImageRejectionEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4329</i>
	 */
	public static native int dAQmxSetAOEnhancedImageRejectionEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOEnhancedImageRejectionEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4330</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOEnhancedImageRejectionEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAOEnhancedImageRejectionEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOEnhancedImageRejectionEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOEnhancedImageRejectionEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4330</i>
	 */
	public static native int dAQmxResetAOEnhancedImageRejectionEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_InvertLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDIInvertLines(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4332</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDIInvertLines(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDIInvertLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDIInvertLines(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_InvertLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDIInvertLines(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4332</i>
	 */
	public static native int dAQmxGetDIInvertLines(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIInvertLines(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4333</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDIInvertLines(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDIInvertLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDIInvertLines(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIInvertLines(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4333</i>
	 */
	public static native int dAQmxSetDIInvertLines(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIInvertLines(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4334</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDIInvertLines(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDIInvertLines(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDIInvertLines(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIInvertLines(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4334</i>
	 */
	public static native int dAQmxResetDIInvertLines(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_NumLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDINumLines(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4336</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDINumLines(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDINumLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDINumLines(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_NumLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDINumLines(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4336</i>
	 */
	public static native int dAQmxGetDINumLines(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4338</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDIDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDIDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDIDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4338</i>
	 */
	public static native int dAQmxGetDIDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4339</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDIDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDIDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDIDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4339</i>
	 */
	public static native int dAQmxSetDIDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4340</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDIDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDIDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDIDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4340</i>
	 */
	public static native int dAQmxResetDIDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4342</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDIDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDIDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDIDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4342</i>
	 */
	public static native int dAQmxGetDIDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4343</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDIDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetDIDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDIDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4343</i>
	 */
	public static native int dAQmxSetDIDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4344</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDIDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDIDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDIDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4344</i>
	 */
	public static native int dAQmxResetDIDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_EnableBusMode ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrEnableBusMode(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4346</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDIDigFltrEnableBusMode(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDIDigFltrEnableBusMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDIDigFltrEnableBusMode(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_EnableBusMode ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrEnableBusMode(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4346</i>
	 */
	public static native int dAQmxGetDIDigFltrEnableBusMode(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrEnableBusMode(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4347</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDIDigFltrEnableBusMode(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDIDigFltrEnableBusMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDIDigFltrEnableBusMode(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrEnableBusMode(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4347</i>
	 */
	public static native int dAQmxSetDIDigFltrEnableBusMode(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrEnableBusMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4348</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDIDigFltrEnableBusMode(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDIDigFltrEnableBusMode(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDIDigFltrEnableBusMode(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrEnableBusMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4348</i>
	 */
	public static native int dAQmxResetDIDigFltrEnableBusMode(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4350</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDIDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDIDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDIDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4350</i>
	 */
	public static native int dAQmxGetDIDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4351</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDIDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetDIDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDIDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4351</i>
	 */
	public static native int dAQmxSetDIDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4352</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDIDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDIDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDIDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4352</i>
	 */
	public static native int dAQmxResetDIDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4354</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDIDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDIDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDIDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4354</i>
	 */
	public static native int dAQmxGetDIDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4355</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDIDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetDIDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDIDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4355</i>
	 */
	public static native int dAQmxSetDIDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4356</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDIDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDIDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDIDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4356</i>
	 */
	public static native int dAQmxResetDIDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4358</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDIDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDIDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDIDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4358</i>
	 */
	public static native int dAQmxGetDIDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4359</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDIDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDIDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDIDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4359</i>
	 */
	public static native int dAQmxSetDIDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4360</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDIDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDIDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDIDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4360</i>
	 */
	public static native int dAQmxResetDIDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_Tristate ***<br>
	 * Original signature : <code>int32 DAQmxGetDITristate(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4362</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDITristate(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDITristate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDITristate(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_Tristate ***<br>
	 * Original signature : <code>int32 DAQmxGetDITristate(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4362</i>
	 */
	public static native int dAQmxGetDITristate(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDITristate(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4363</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDITristate(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDITristate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDITristate(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDITristate(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4363</i>
	 */
	public static native int dAQmxSetDITristate(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDITristate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4364</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDITristate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDITristate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDITristate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDITristate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4364</i>
	 */
	public static native int dAQmxResetDITristate(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicFamily<br>
	 * Original signature : <code>int32 DAQmxGetDILogicFamily(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4367</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDILogicFamily(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDILogicFamily(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDILogicFamily(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicFamily<br>
	 * Original signature : <code>int32 DAQmxGetDILogicFamily(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4367</i>
	 */
	public static native int dAQmxGetDILogicFamily(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDILogicFamily(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4368</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDILogicFamily(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetDILogicFamily(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDILogicFamily(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDILogicFamily(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4368</i>
	 */
	public static native int dAQmxSetDILogicFamily(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDILogicFamily(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4369</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDILogicFamily(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDILogicFamily(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDILogicFamily(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDILogicFamily(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4369</i>
	 */
	public static native int dAQmxResetDILogicFamily(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetDIDataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4372</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDIDataXferMech(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDIDataXferMech(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetDIDataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4372</i>
	 */
	public static native int dAQmxGetDIDataXferMech(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4373</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDIDataXferMech(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetDIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDIDataXferMech(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4373</i>
	 */
	public static native int dAQmxSetDIDataXferMech(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4374</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDIDataXferMech(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDIDataXferMech(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4374</i>
	 */
	public static native int dAQmxResetDIDataXferMech(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetDIDataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4377</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDIDataXferReqCond(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDIDataXferReqCond(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetDIDataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4377</i>
	 */
	public static native int dAQmxGetDIDataXferReqCond(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4378</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDIDataXferReqCond(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetDIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDIDataXferReqCond(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4378</i>
	 */
	public static native int dAQmxSetDIDataXferReqCond(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4379</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDIDataXferReqCond(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDIDataXferReqCond(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4379</i>
	 */
	public static native int dAQmxResetDIDataXferReqCond(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDIUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4381</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDIUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDIUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDIUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4381</i>
	 */
	public static native int dAQmxGetDIUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4382</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDIUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDIUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4382</i>
	 */
	public static native int dAQmxSetDIUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4383</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDIUsbXferReqSize(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDIUsbXferReqSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4383</i>
	 */
	public static native int dAQmxResetDIUsbXferReqSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetDIUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4385</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDIUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDIUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetDIUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4385</i>
	 */
	public static native int dAQmxGetDIUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4386</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDIUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDIUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4386</i>
	 */
	public static native int dAQmxSetDIUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4387</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDIUsbXferReqCount(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDIUsbXferReqCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4387</i>
	 */
	public static native int dAQmxResetDIUsbXferReqCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetDIMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4389</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDIMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDIMemMapEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetDIMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4389</i>
	 */
	public static native int dAQmxGetDIMemMapEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4390</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDIMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDIMemMapEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4390</i>
	 */
	public static native int dAQmxSetDIMemMapEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4391</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDIMemMapEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDIMemMapEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4391</i>
	 */
	public static native int dAQmxResetDIMemMapEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SampleClockActiveOrInactiveEdgeSelection<br>
	 * Original signature : <code>int32 DAQmxGetDIAcquireOn(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4394</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDIAcquireOn(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDIAcquireOn(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDIAcquireOn(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SampleClockActiveOrInactiveEdgeSelection<br>
	 * Original signature : <code>int32 DAQmxGetDIAcquireOn(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4394</i>
	 */
	public static native int dAQmxGetDIAcquireOn(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIAcquireOn(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4395</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDIAcquireOn(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetDIAcquireOn(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDIAcquireOn(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIAcquireOn(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4395</i>
	 */
	public static native int dAQmxSetDIAcquireOn(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIAcquireOn(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4396</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDIAcquireOn(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDIAcquireOn(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDIAcquireOn(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIAcquireOn(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4396</i>
	 */
	public static native int dAQmxResetDIAcquireOn(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DigitalDriveType<br>
	 * Original signature : <code>int32 DAQmxGetDOOutputDriveType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4399</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOOutputDriveType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDOOutputDriveType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOOutputDriveType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DigitalDriveType<br>
	 * Original signature : <code>int32 DAQmxGetDOOutputDriveType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4399</i>
	 */
	public static native int dAQmxGetDOOutputDriveType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOutputDriveType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4400</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOOutputDriveType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetDOOutputDriveType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOOutputDriveType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOutputDriveType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4400</i>
	 */
	public static native int dAQmxSetDOOutputDriveType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOutputDriveType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4401</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOOutputDriveType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOOutputDriveType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOOutputDriveType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOutputDriveType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4401</i>
	 */
	public static native int dAQmxResetDOOutputDriveType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_InvertLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDOInvertLines(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4403</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOInvertLines(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDOInvertLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOInvertLines(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_InvertLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDOInvertLines(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4403</i>
	 */
	public static native int dAQmxGetDOInvertLines(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOInvertLines(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4404</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOInvertLines(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDOInvertLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOInvertLines(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOInvertLines(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4404</i>
	 */
	public static native int dAQmxSetDOInvertLines(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOInvertLines(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4405</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOInvertLines(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOInvertLines(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOInvertLines(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOInvertLines(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4405</i>
	 */
	public static native int dAQmxResetDOInvertLines(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_NumLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDONumLines(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4407</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDONumLines(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDONumLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDONumLines(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_NumLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDONumLines(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4407</i>
	 */
	public static native int dAQmxGetDONumLines(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_Tristate ***<br>
	 * Original signature : <code>int32 DAQmxGetDOTristate(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4409</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOTristate(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDOTristate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOTristate(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_Tristate ***<br>
	 * Original signature : <code>int32 DAQmxGetDOTristate(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4409</i>
	 */
	public static native int dAQmxGetDOTristate(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOTristate(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4410</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOTristate(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDOTristate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOTristate(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOTristate(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4410</i>
	 */
	public static native int dAQmxSetDOTristate(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOTristate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4411</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOTristate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOTristate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOTristate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOTristate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4411</i>
	 */
	public static native int dAQmxResetDOTristate(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetDOLineStatesStartState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4414</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOLineStatesStartState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDOLineStatesStartState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOLineStatesStartState(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetDOLineStatesStartState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4414</i>
	 */
	public static native int dAQmxGetDOLineStatesStartState(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLineStatesStartState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4415</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOLineStatesStartState(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetDOLineStatesStartState(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOLineStatesStartState(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLineStatesStartState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4415</i>
	 */
	public static native int dAQmxSetDOLineStatesStartState(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLineStatesStartState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4416</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOLineStatesStartState(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOLineStatesStartState(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOLineStatesStartState(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLineStatesStartState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4416</i>
	 */
	public static native int dAQmxResetDOLineStatesStartState(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetDOLineStatesPausedState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4419</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOLineStatesPausedState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDOLineStatesPausedState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOLineStatesPausedState(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetDOLineStatesPausedState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4419</i>
	 */
	public static native int dAQmxGetDOLineStatesPausedState(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLineStatesPausedState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4420</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOLineStatesPausedState(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetDOLineStatesPausedState(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOLineStatesPausedState(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLineStatesPausedState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4420</i>
	 */
	public static native int dAQmxSetDOLineStatesPausedState(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLineStatesPausedState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4421</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOLineStatesPausedState(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOLineStatesPausedState(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOLineStatesPausedState(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLineStatesPausedState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4421</i>
	 */
	public static native int dAQmxResetDOLineStatesPausedState(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetDOLineStatesDoneState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4424</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOLineStatesDoneState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDOLineStatesDoneState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOLineStatesDoneState(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetDOLineStatesDoneState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4424</i>
	 */
	public static native int dAQmxGetDOLineStatesDoneState(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLineStatesDoneState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4425</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOLineStatesDoneState(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetDOLineStatesDoneState(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOLineStatesDoneState(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLineStatesDoneState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4425</i>
	 */
	public static native int dAQmxSetDOLineStatesDoneState(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLineStatesDoneState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4426</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOLineStatesDoneState(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOLineStatesDoneState(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOLineStatesDoneState(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLineStatesDoneState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4426</i>
	 */
	public static native int dAQmxResetDOLineStatesDoneState(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicFamily<br>
	 * Original signature : <code>int32 DAQmxGetDOLogicFamily(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4429</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOLogicFamily(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDOLogicFamily(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOLogicFamily(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicFamily<br>
	 * Original signature : <code>int32 DAQmxGetDOLogicFamily(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4429</i>
	 */
	public static native int dAQmxGetDOLogicFamily(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLogicFamily(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4430</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOLogicFamily(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetDOLogicFamily(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOLogicFamily(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLogicFamily(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4430</i>
	 */
	public static native int dAQmxSetDOLogicFamily(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLogicFamily(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4431</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOLogicFamily(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOLogicFamily(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOLogicFamily(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLogicFamily(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4431</i>
	 */
	public static native int dAQmxResetDOLogicFamily(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_Overcurrent_Limit ***<br>
	 * Original signature : <code>int32 DAQmxGetDOOvercurrentLimit(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4433</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOOvercurrentLimit(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDOOvercurrentLimit(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOOvercurrentLimit(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_Overcurrent_Limit ***<br>
	 * Original signature : <code>int32 DAQmxGetDOOvercurrentLimit(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4433</i>
	 */
	public static native int dAQmxGetDOOvercurrentLimit(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOvercurrentLimit(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4434</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOOvercurrentLimit(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetDOOvercurrentLimit(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOOvercurrentLimit(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOvercurrentLimit(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4434</i>
	 */
	public static native int dAQmxSetDOOvercurrentLimit(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOvercurrentLimit(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4435</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOOvercurrentLimit(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOOvercurrentLimit(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOOvercurrentLimit(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOvercurrentLimit(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4435</i>
	 */
	public static native int dAQmxResetDOOvercurrentLimit(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_Overcurrent_AutoReenable ***<br>
	 * Original signature : <code>int32 DAQmxGetDOOvercurrentAutoReenable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4437</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOOvercurrentAutoReenable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDOOvercurrentAutoReenable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOOvercurrentAutoReenable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_Overcurrent_AutoReenable ***<br>
	 * Original signature : <code>int32 DAQmxGetDOOvercurrentAutoReenable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4437</i>
	 */
	public static native int dAQmxGetDOOvercurrentAutoReenable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOvercurrentAutoReenable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4438</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOOvercurrentAutoReenable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDOOvercurrentAutoReenable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOOvercurrentAutoReenable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOvercurrentAutoReenable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4438</i>
	 */
	public static native int dAQmxSetDOOvercurrentAutoReenable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOvercurrentAutoReenable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4439</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOOvercurrentAutoReenable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOOvercurrentAutoReenable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOOvercurrentAutoReenable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOvercurrentAutoReenable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4439</i>
	 */
	public static native int dAQmxResetDOOvercurrentAutoReenable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_Overcurrent_ReenablePeriod ***<br>
	 * Original signature : <code>int32 DAQmxGetDOOvercurrentReenablePeriod(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4441</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOOvercurrentReenablePeriod(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDOOvercurrentReenablePeriod(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOOvercurrentReenablePeriod(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_Overcurrent_ReenablePeriod ***<br>
	 * Original signature : <code>int32 DAQmxGetDOOvercurrentReenablePeriod(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4441</i>
	 */
	public static native int dAQmxGetDOOvercurrentReenablePeriod(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOvercurrentReenablePeriod(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4442</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOOvercurrentReenablePeriod(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetDOOvercurrentReenablePeriod(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOOvercurrentReenablePeriod(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOvercurrentReenablePeriod(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4442</i>
	 */
	public static native int dAQmxSetDOOvercurrentReenablePeriod(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOvercurrentReenablePeriod(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4443</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOOvercurrentReenablePeriod(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOOvercurrentReenablePeriod(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOOvercurrentReenablePeriod(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOvercurrentReenablePeriod(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4443</i>
	 */
	public static native int dAQmxResetDOOvercurrentReenablePeriod(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_UseOnlyOnBrdMem ***<br>
	 * Original signature : <code>int32 DAQmxGetDOUseOnlyOnBrdMem(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4445</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_UseOnlyOnBrdMem ***<br>
	 * Original signature : <code>int32 DAQmxGetDOUseOnlyOnBrdMem(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4445</i>
	 */
	public static native int dAQmxGetDOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOUseOnlyOnBrdMem(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4446</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOUseOnlyOnBrdMem(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4446</i>
	 */
	public static native int dAQmxSetDOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOUseOnlyOnBrdMem(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4447</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOUseOnlyOnBrdMem(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4447</i>
	 */
	public static native int dAQmxResetDOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetDODataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4450</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDODataXferMech(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDODataXferMech(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetDODataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4450</i>
	 */
	public static native int dAQmxGetDODataXferMech(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDODataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4451</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDODataXferMech(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetDODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDODataXferMech(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDODataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4451</i>
	 */
	public static native int dAQmxSetDODataXferMech(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDODataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4452</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDODataXferMech(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDODataXferMech(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDODataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4452</i>
	 */
	public static native int dAQmxResetDODataXferMech(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set OutputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetDODataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4455</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDODataXferReqCond(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDODataXferReqCond(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set OutputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetDODataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4455</i>
	 */
	public static native int dAQmxGetDODataXferReqCond(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDODataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4456</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDODataXferReqCond(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetDODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDODataXferReqCond(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDODataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4456</i>
	 */
	public static native int dAQmxSetDODataXferReqCond(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDODataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4457</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDODataXferReqCond(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDODataXferReqCond(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDODataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4457</i>
	 */
	public static native int dAQmxResetDODataXferReqCond(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDOUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4459</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDOUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4459</i>
	 */
	public static native int dAQmxGetDOUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4460</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4460</i>
	 */
	public static native int dAQmxSetDOUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4461</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOUsbXferReqSize(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOUsbXferReqSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4461</i>
	 */
	public static native int dAQmxResetDOUsbXferReqSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetDOUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4463</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetDOUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4463</i>
	 */
	public static native int dAQmxGetDOUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4464</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4464</i>
	 */
	public static native int dAQmxSetDOUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4465</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOUsbXferReqCount(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOUsbXferReqCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4465</i>
	 */
	public static native int dAQmxResetDOUsbXferReqCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetDOMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4467</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOMemMapEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetDOMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4467</i>
	 */
	public static native int dAQmxGetDOMemMapEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4468</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetDOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOMemMapEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4468</i>
	 */
	public static native int dAQmxSetDOMemMapEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4469</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOMemMapEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOMemMapEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4469</i>
	 */
	public static native int dAQmxResetDOMemMapEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SampleClockActiveOrInactiveEdgeSelection<br>
	 * Original signature : <code>int32 DAQmxGetDOGenerateOn(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4472</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDOGenerateOn(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDOGenerateOn(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDOGenerateOn(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SampleClockActiveOrInactiveEdgeSelection<br>
	 * Original signature : <code>int32 DAQmxGetDOGenerateOn(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4472</i>
	 */
	public static native int dAQmxGetDOGenerateOn(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOGenerateOn(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4473</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDOGenerateOn(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetDOGenerateOn(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDOGenerateOn(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOGenerateOn(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4473</i>
	 */
	public static native int dAQmxSetDOGenerateOn(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOGenerateOn(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4474</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDOGenerateOn(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDOGenerateOn(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDOGenerateOn(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOGenerateOn(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4474</i>
	 */
	public static native int dAQmxResetDOGenerateOn(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Max ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMax(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4476</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIMax(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIMax(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIMax(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Max ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMax(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4476</i>
	 */
	public static native int dAQmxGetCIMax(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMax(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4477</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIMax(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIMax(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIMax(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMax(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4477</i>
	 */
	public static native int dAQmxSetCIMax(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMax(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4478</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIMax(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIMax(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIMax(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMax(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4478</i>
	 */
	public static native int dAQmxResetCIMax(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Min ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMin(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4480</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIMin(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIMin(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIMin(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Min ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMin(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4480</i>
	 */
	public static native int dAQmxGetCIMin(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMin(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4481</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIMin(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIMin(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIMin(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMin(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4481</i>
	 */
	public static native int dAQmxSetCIMin(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMin(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4482</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIMin(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIMin(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIMin(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMin(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4482</i>
	 */
	public static native int dAQmxResetCIMin(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CustomScaleName ***<br>
	 * Original signature : <code>int32 DAQmxGetCICustomScaleName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4484</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICustomScaleName(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCICustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICustomScaleName(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CustomScaleName ***<br>
	 * Original signature : <code>int32 DAQmxGetCICustomScaleName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4484</i>
	 */
	public static native int dAQmxGetCICustomScaleName(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICustomScaleName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4485</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICustomScaleName(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCICustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICustomScaleName(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICustomScaleName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4485</i>
	 */
	public static native int dAQmxSetCICustomScaleName(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICustomScaleName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4486</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICustomScaleName(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICustomScaleName(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICustomScaleName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4486</i>
	 */
	public static native int dAQmxResetCICustomScaleName(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetCIMeasType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4489</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIMeasType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIMeasType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIMeasType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetCIMeasType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4489</i>
	 */
	public static native int dAQmxGetCIMeasType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Uses value set FrequencyUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4492</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FrequencyUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4492</i>
	 */
	public static native int dAQmxGetCIFreqUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4493</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4493</i>
	 */
	public static native int dAQmxSetCIFreqUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4494</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4494</i>
	 */
	public static native int dAQmxResetCIFreqUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4496</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIFreqTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4496</i>
	 */
	public static native int dAQmxGetCIFreqTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4497</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIFreqTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4497</i>
	 */
	public static native int dAQmxSetCIFreqTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4498</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4498</i>
	 */
	public static native int dAQmxResetCIFreqTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4501</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIFreqTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4501</i>
	 */
	public static native int dAQmxGetCIFreqTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4502</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIFreqTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4502</i>
	 */
	public static native int dAQmxSetCIFreqTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4503</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4503</i>
	 */
	public static native int dAQmxResetCIFreqTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4506</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIFreqLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4506</i>
	 */
	public static native int dAQmxGetCIFreqLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4507</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIFreqLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4507</i>
	 */
	public static native int dAQmxSetCIFreqLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4508</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4508</i>
	 */
	public static native int dAQmxResetCIFreqLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4510</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIFreqDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4510</i>
	 */
	public static native int dAQmxGetCIFreqDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4511</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIFreqDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4511</i>
	 */
	public static native int dAQmxSetCIFreqDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4512</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4512</i>
	 */
	public static native int dAQmxResetCIFreqDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4514</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4514</i>
	 */
	public static native int dAQmxGetCIFreqDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4515</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4515</i>
	 */
	public static native int dAQmxSetCIFreqDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4516</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4516</i>
	 */
	public static native int dAQmxResetCIFreqDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4518</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4518</i>
	 */
	public static native int dAQmxGetCIFreqDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4519</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4519</i>
	 */
	public static native int dAQmxSetCIFreqDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4520</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4520</i>
	 */
	public static native int dAQmxResetCIFreqDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4522</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIFreqDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4522</i>
	 */
	public static native int dAQmxGetCIFreqDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4523</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIFreqDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4523</i>
	 */
	public static native int dAQmxSetCIFreqDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4524</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4524</i>
	 */
	public static native int dAQmxResetCIFreqDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4526</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIFreqDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4526</i>
	 */
	public static native int dAQmxGetCIFreqDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4527</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIFreqDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4527</i>
	 */
	public static native int dAQmxSetCIFreqDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4528</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4528</i>
	 */
	public static native int dAQmxResetCIFreqDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4531</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqStartingEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIFreqStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqStartingEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4531</i>
	 */
	public static native int dAQmxGetCIFreqStartingEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4532</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqStartingEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIFreqStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqStartingEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4532</i>
	 */
	public static native int dAQmxSetCIFreqStartingEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4533</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqStartingEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqStartingEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4533</i>
	 */
	public static native int dAQmxResetCIFreqStartingEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CounterFrequencyMethod<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqMeasMeth(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4536</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqMeasMeth(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIFreqMeasMeth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqMeasMeth(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CounterFrequencyMethod<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqMeasMeth(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4536</i>
	 */
	public static native int dAQmxGetCIFreqMeasMeth(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqMeasMeth(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4537</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqMeasMeth(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIFreqMeasMeth(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqMeasMeth(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqMeasMeth(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4537</i>
	 */
	public static native int dAQmxSetCIFreqMeasMeth(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqMeasMeth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4538</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqMeasMeth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqMeasMeth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqMeasMeth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqMeasMeth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4538</i>
	 */
	public static native int dAQmxResetCIFreqMeasMeth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_EnableAveraging ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqEnableAveraging(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4540</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqEnableAveraging(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIFreqEnableAveraging(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqEnableAveraging(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_EnableAveraging ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqEnableAveraging(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4540</i>
	 */
	public static native int dAQmxGetCIFreqEnableAveraging(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqEnableAveraging(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4541</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqEnableAveraging(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIFreqEnableAveraging(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqEnableAveraging(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqEnableAveraging(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4541</i>
	 */
	public static native int dAQmxSetCIFreqEnableAveraging(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqEnableAveraging(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4542</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqEnableAveraging(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqEnableAveraging(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqEnableAveraging(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqEnableAveraging(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4542</i>
	 */
	public static native int dAQmxResetCIFreqEnableAveraging(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_MeasTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqMeasTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4544</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqMeasTime(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIFreqMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqMeasTime(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_MeasTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqMeasTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4544</i>
	 */
	public static native int dAQmxGetCIFreqMeasTime(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqMeasTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4545</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqMeasTime(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIFreqMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqMeasTime(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqMeasTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4545</i>
	 */
	public static native int dAQmxSetCIFreqMeasTime(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqMeasTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4546</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqMeasTime(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqMeasTime(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqMeasTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4546</i>
	 */
	public static native int dAQmxResetCIFreqMeasTime(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_Div ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4548</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIFreqDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIFreqDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIFreqDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_Div ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4548</i>
	 */
	public static native int dAQmxGetCIFreqDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4549</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIFreqDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIFreqDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIFreqDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4549</i>
	 */
	public static native int dAQmxSetCIFreqDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4550</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIFreqDiv(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIFreqDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIFreqDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4550</i>
	 */
	public static native int dAQmxResetCIFreqDiv(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4553</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPeriodUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4553</i>
	 */
	public static native int dAQmxGetCIPeriodUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4554</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPeriodUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4554</i>
	 */
	public static native int dAQmxSetCIPeriodUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4555</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4555</i>
	 */
	public static native int dAQmxResetCIPeriodUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4557</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIPeriodTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4557</i>
	 */
	public static native int dAQmxGetCIPeriodTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4558</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIPeriodTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4558</i>
	 */
	public static native int dAQmxSetCIPeriodTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4559</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4559</i>
	 */
	public static native int dAQmxResetCIPeriodTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4562</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPeriodTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4562</i>
	 */
	public static native int dAQmxGetCIPeriodTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4563</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPeriodTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4563</i>
	 */
	public static native int dAQmxSetCIPeriodTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4564</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4564</i>
	 */
	public static native int dAQmxResetCIPeriodTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4567</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPeriodLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4567</i>
	 */
	public static native int dAQmxGetCIPeriodLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4568</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPeriodLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4568</i>
	 */
	public static native int dAQmxSetCIPeriodLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4569</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4569</i>
	 */
	public static native int dAQmxResetCIPeriodLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4571</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIPeriodDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4571</i>
	 */
	public static native int dAQmxGetCIPeriodDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4572</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIPeriodDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4572</i>
	 */
	public static native int dAQmxSetCIPeriodDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4573</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4573</i>
	 */
	public static native int dAQmxResetCIPeriodDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4575</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4575</i>
	 */
	public static native int dAQmxGetCIPeriodDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4576</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4576</i>
	 */
	public static native int dAQmxSetCIPeriodDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4577</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4577</i>
	 */
	public static native int dAQmxResetCIPeriodDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4579</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4579</i>
	 */
	public static native int dAQmxGetCIPeriodDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4580</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4580</i>
	 */
	public static native int dAQmxSetCIPeriodDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4581</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4581</i>
	 */
	public static native int dAQmxResetCIPeriodDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4583</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4583</i>
	 */
	public static native int dAQmxGetCIPeriodDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4584</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4584</i>
	 */
	public static native int dAQmxSetCIPeriodDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4585</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4585</i>
	 */
	public static native int dAQmxResetCIPeriodDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4587</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIPeriodDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4587</i>
	 */
	public static native int dAQmxGetCIPeriodDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4588</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIPeriodDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4588</i>
	 */
	public static native int dAQmxSetCIPeriodDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4589</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4589</i>
	 */
	public static native int dAQmxResetCIPeriodDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4592</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodStartingEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPeriodStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodStartingEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4592</i>
	 */
	public static native int dAQmxGetCIPeriodStartingEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4593</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodStartingEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPeriodStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodStartingEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4593</i>
	 */
	public static native int dAQmxSetCIPeriodStartingEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4594</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodStartingEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodStartingEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4594</i>
	 */
	public static native int dAQmxResetCIPeriodStartingEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CounterFrequencyMethod<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodMeasMeth(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4597</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodMeasMeth(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPeriodMeasMeth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodMeasMeth(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CounterFrequencyMethod<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodMeasMeth(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4597</i>
	 */
	public static native int dAQmxGetCIPeriodMeasMeth(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodMeasMeth(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4598</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodMeasMeth(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPeriodMeasMeth(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodMeasMeth(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodMeasMeth(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4598</i>
	 */
	public static native int dAQmxSetCIPeriodMeasMeth(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodMeasMeth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4599</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodMeasMeth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodMeasMeth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodMeasMeth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodMeasMeth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4599</i>
	 */
	public static native int dAQmxResetCIPeriodMeasMeth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_EnableAveraging ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodEnableAveraging(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4601</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodEnableAveraging(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIPeriodEnableAveraging(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodEnableAveraging(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_EnableAveraging ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodEnableAveraging(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4601</i>
	 */
	public static native int dAQmxGetCIPeriodEnableAveraging(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodEnableAveraging(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4602</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodEnableAveraging(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIPeriodEnableAveraging(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodEnableAveraging(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodEnableAveraging(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4602</i>
	 */
	public static native int dAQmxSetCIPeriodEnableAveraging(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodEnableAveraging(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4603</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodEnableAveraging(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodEnableAveraging(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodEnableAveraging(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodEnableAveraging(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4603</i>
	 */
	public static native int dAQmxResetCIPeriodEnableAveraging(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_MeasTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodMeasTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4605</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodMeasTime(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIPeriodMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodMeasTime(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_MeasTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodMeasTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4605</i>
	 */
	public static native int dAQmxGetCIPeriodMeasTime(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodMeasTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4606</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodMeasTime(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIPeriodMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodMeasTime(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodMeasTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4606</i>
	 */
	public static native int dAQmxSetCIPeriodMeasTime(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodMeasTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4607</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodMeasTime(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodMeasTime(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodMeasTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4607</i>
	 */
	public static native int dAQmxResetCIPeriodMeasTime(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_Div ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4609</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPeriodDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIPeriodDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPeriodDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_Div ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4609</i>
	 */
	public static native int dAQmxGetCIPeriodDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4610</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPeriodDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIPeriodDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPeriodDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4610</i>
	 */
	public static native int dAQmxSetCIPeriodDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4611</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPeriodDiv(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPeriodDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPeriodDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4611</i>
	 */
	public static native int dAQmxResetCIPeriodDiv(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4613</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCICountEdgesTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4613</i>
	 */
	public static native int dAQmxGetCICountEdgesTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4614</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCICountEdgesTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4614</i>
	 */
	public static native int dAQmxSetCICountEdgesTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4615</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4615</i>
	 */
	public static native int dAQmxResetCICountEdgesTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4618</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCICountEdgesTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4618</i>
	 */
	public static native int dAQmxGetCICountEdgesTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4619</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCICountEdgesTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4619</i>
	 */
	public static native int dAQmxSetCICountEdgesTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4620</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4620</i>
	 */
	public static native int dAQmxResetCICountEdgesTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4623</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCICountEdgesLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4623</i>
	 */
	public static native int dAQmxGetCICountEdgesLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4624</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCICountEdgesLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4624</i>
	 */
	public static native int dAQmxSetCICountEdgesLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4625</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4625</i>
	 */
	public static native int dAQmxResetCICountEdgesLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4627</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICountEdgesDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4627</i>
	 */
	public static native int dAQmxGetCICountEdgesDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4628</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICountEdgesDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4628</i>
	 */
	public static native int dAQmxSetCICountEdgesDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4629</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4629</i>
	 */
	public static native int dAQmxResetCICountEdgesDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4631</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCICountEdgesDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4631</i>
	 */
	public static native int dAQmxGetCICountEdgesDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4632</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCICountEdgesDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4632</i>
	 */
	public static native int dAQmxSetCICountEdgesDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4633</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4633</i>
	 */
	public static native int dAQmxResetCICountEdgesDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4635</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCICountEdgesDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4635</i>
	 */
	public static native int dAQmxGetCICountEdgesDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4636</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCICountEdgesDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4636</i>
	 */
	public static native int dAQmxSetCICountEdgesDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4637</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4637</i>
	 */
	public static native int dAQmxResetCICountEdgesDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4639</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCICountEdgesDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4639</i>
	 */
	public static native int dAQmxGetCICountEdgesDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4640</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCICountEdgesDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4640</i>
	 */
	public static native int dAQmxSetCICountEdgesDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4641</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4641</i>
	 */
	public static native int dAQmxResetCICountEdgesDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4643</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICountEdgesDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4643</i>
	 */
	public static native int dAQmxGetCICountEdgesDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4644</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICountEdgesDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4644</i>
	 */
	public static native int dAQmxSetCICountEdgesDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4645</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4645</i>
	 */
	public static native int dAQmxResetCICountEdgesDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CountDirection1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDir(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4648</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesDir(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCICountEdgesDir(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesDir(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CountDirection1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDir(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4648</i>
	 */
	public static native int dAQmxGetCICountEdgesDir(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDir(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4649</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesDir(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCICountEdgesDir(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesDir(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDir(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4649</i>
	 */
	public static native int dAQmxSetCICountEdgesDir(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDir(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4650</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesDir(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesDir(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesDir(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDir(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4650</i>
	 */
	public static native int dAQmxResetCICountEdgesDir(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DirTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDirTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4652</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesDirTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCICountEdgesDirTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesDirTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DirTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDirTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4652</i>
	 */
	public static native int dAQmxGetCICountEdgesDirTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDirTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4653</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesDirTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCICountEdgesDirTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesDirTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDirTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4653</i>
	 */
	public static native int dAQmxSetCICountEdgesDirTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDirTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4654</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesDirTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesDirTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesDirTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDirTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4654</i>
	 */
	public static native int dAQmxResetCICountEdgesDirTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4657</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountDirTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCICountEdgesCountDirTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountDirTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4657</i>
	 */
	public static native int dAQmxGetCICountEdgesCountDirTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4658</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountDirTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCICountEdgesCountDirTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountDirTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4658</i>
	 */
	public static native int dAQmxSetCICountEdgesCountDirTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4659</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountDirTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountDirTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountDirTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4659</i>
	 */
	public static native int dAQmxResetCICountEdgesCountDirTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4662</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountDirLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCICountEdgesCountDirLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountDirLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4662</i>
	 */
	public static native int dAQmxGetCICountEdgesCountDirLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4663</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountDirLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCICountEdgesCountDirLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountDirLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4663</i>
	 */
	public static native int dAQmxSetCICountEdgesCountDirLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4664</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountDirLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountDirLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountDirLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4664</i>
	 */
	public static native int dAQmxResetCICountEdgesCountDirLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4666</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountDirDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICountEdgesCountDirDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountDirDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4666</i>
	 */
	public static native int dAQmxGetCICountEdgesCountDirDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4667</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountDirDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICountEdgesCountDirDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountDirDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4667</i>
	 */
	public static native int dAQmxSetCICountEdgesCountDirDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4668</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountDirDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountDirDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountDirDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4668</i>
	 */
	public static native int dAQmxResetCICountEdgesCountDirDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4670</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4670</i>
	 */
	public static native int dAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4671</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4671</i>
	 */
	public static native int dAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4672</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4672</i>
	 */
	public static native int dAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4674</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4674</i>
	 */
	public static native int dAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4675</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4675</i>
	 */
	public static native int dAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4676</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4676</i>
	 */
	public static native int dAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4678</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountDirDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCICountEdgesCountDirDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountDirDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4678</i>
	 */
	public static native int dAQmxGetCICountEdgesCountDirDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4679</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountDirDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCICountEdgesCountDirDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountDirDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4679</i>
	 */
	public static native int dAQmxSetCICountEdgesCountDirDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4680</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountDirDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountDirDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountDirDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4680</i>
	 */
	public static native int dAQmxResetCICountEdgesCountDirDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4682</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountDirDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICountEdgesCountDirDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountDirDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4682</i>
	 */
	public static native int dAQmxGetCICountEdgesCountDirDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4683</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountDirDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICountEdgesCountDirDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountDirDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4683</i>
	 */
	public static native int dAQmxSetCICountEdgesCountDirDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4684</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountDirDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountDirDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountDirDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4684</i>
	 */
	public static native int dAQmxResetCICountEdgesCountDirDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_InitialCnt ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesInitialCnt(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4686</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesInitialCnt(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICountEdgesInitialCnt(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesInitialCnt(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_InitialCnt ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesInitialCnt(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4686</i>
	 */
	public static native int dAQmxGetCICountEdgesInitialCnt(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesInitialCnt(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4687</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesInitialCnt(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICountEdgesInitialCnt(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesInitialCnt(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesInitialCnt(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4687</i>
	 */
	public static native int dAQmxSetCICountEdgesInitialCnt(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesInitialCnt(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4688</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesInitialCnt(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesInitialCnt(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesInitialCnt(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesInitialCnt(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4688</i>
	 */
	public static native int dAQmxResetCICountEdgesInitialCnt(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4691</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesActiveEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCICountEdgesActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesActiveEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4691</i>
	 */
	public static native int dAQmxGetCICountEdgesActiveEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4692</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesActiveEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCICountEdgesActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesActiveEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4692</i>
	 */
	public static native int dAQmxSetCICountEdgesActiveEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4693</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesActiveEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesActiveEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4693</i>
	 */
	public static native int dAQmxResetCICountEdgesActiveEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4695</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountResetEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICountEdgesCountResetEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountResetEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4695</i>
	 */
	public static native int dAQmxGetCICountEdgesCountResetEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4696</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountResetEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICountEdgesCountResetEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountResetEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4696</i>
	 */
	public static native int dAQmxSetCICountEdgesCountResetEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4697</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountResetEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountResetEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountResetEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4697</i>
	 */
	public static native int dAQmxResetCICountEdgesCountResetEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_ResetCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetResetCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4699</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountResetResetCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICountEdgesCountResetResetCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountResetResetCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_ResetCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetResetCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4699</i>
	 */
	public static native int dAQmxGetCICountEdgesCountResetResetCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetResetCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4700</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountResetResetCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICountEdgesCountResetResetCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountResetResetCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetResetCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4700</i>
	 */
	public static native int dAQmxSetCICountEdgesCountResetResetCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetResetCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4701</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountResetResetCount(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountResetResetCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountResetResetCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetResetCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4701</i>
	 */
	public static native int dAQmxResetCICountEdgesCountResetResetCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4703</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountResetTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCICountEdgesCountResetTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountResetTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4703</i>
	 */
	public static native int dAQmxGetCICountEdgesCountResetTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4704</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountResetTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCICountEdgesCountResetTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountResetTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4704</i>
	 */
	public static native int dAQmxSetCICountEdgesCountResetTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4705</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountResetTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountResetTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountResetTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4705</i>
	 */
	public static native int dAQmxResetCICountEdgesCountResetTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4708</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountResetTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCICountEdgesCountResetTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountResetTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4708</i>
	 */
	public static native int dAQmxGetCICountEdgesCountResetTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4709</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountResetTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCICountEdgesCountResetTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountResetTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4709</i>
	 */
	public static native int dAQmxSetCICountEdgesCountResetTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4710</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountResetTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountResetTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountResetTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4710</i>
	 */
	public static native int dAQmxResetCICountEdgesCountResetTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4713</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountResetLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCICountEdgesCountResetLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountResetLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4713</i>
	 */
	public static native int dAQmxGetCICountEdgesCountResetLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4714</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountResetLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCICountEdgesCountResetLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountResetLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4714</i>
	 */
	public static native int dAQmxSetCICountEdgesCountResetLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4715</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountResetLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountResetLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountResetLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4715</i>
	 */
	public static native int dAQmxResetCICountEdgesCountResetLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4717</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountResetDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICountEdgesCountResetDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountResetDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4717</i>
	 */
	public static native int dAQmxGetCICountEdgesCountResetDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4718</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountResetDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICountEdgesCountResetDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountResetDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4718</i>
	 */
	public static native int dAQmxSetCICountEdgesCountResetDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4719</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountResetDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountResetDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountResetDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4719</i>
	 */
	public static native int dAQmxResetCICountEdgesCountResetDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4721</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4721</i>
	 */
	public static native int dAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4722</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4722</i>
	 */
	public static native int dAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4723</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4723</i>
	 */
	public static native int dAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4725</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4725</i>
	 */
	public static native int dAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4726</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4726</i>
	 */
	public static native int dAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4727</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4727</i>
	 */
	public static native int dAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4729</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountResetDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCICountEdgesCountResetDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountResetDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4729</i>
	 */
	public static native int dAQmxGetCICountEdgesCountResetDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4730</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountResetDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCICountEdgesCountResetDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountResetDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4730</i>
	 */
	public static native int dAQmxSetCICountEdgesCountResetDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4731</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountResetDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountResetDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountResetDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4731</i>
	 */
	public static native int dAQmxResetCICountEdgesCountResetDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4733</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountResetDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICountEdgesCountResetDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountResetDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4733</i>
	 */
	public static native int dAQmxGetCICountEdgesCountResetDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4734</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountResetDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICountEdgesCountResetDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountResetDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4734</i>
	 */
	public static native int dAQmxSetCICountEdgesCountResetDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4735</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountResetDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountResetDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountResetDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4735</i>
	 */
	public static native int dAQmxResetCICountEdgesCountResetDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4738</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesCountResetActiveEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCICountEdgesCountResetActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesCountResetActiveEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4738</i>
	 */
	public static native int dAQmxGetCICountEdgesCountResetActiveEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4739</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesCountResetActiveEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCICountEdgesCountResetActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesCountResetActiveEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4739</i>
	 */
	public static native int dAQmxSetCICountEdgesCountResetActiveEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4740</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesCountResetActiveEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesCountResetActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesCountResetActiveEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4740</i>
	 */
	public static native int dAQmxResetCICountEdgesCountResetActiveEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4742</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesGateEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICountEdgesGateEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesGateEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4742</i>
	 */
	public static native int dAQmxGetCICountEdgesGateEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4743</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesGateEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICountEdgesGateEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesGateEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4743</i>
	 */
	public static native int dAQmxSetCICountEdgesGateEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4744</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesGateEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesGateEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesGateEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4744</i>
	 */
	public static native int dAQmxResetCICountEdgesGateEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4746</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesGateTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCICountEdgesGateTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesGateTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4746</i>
	 */
	public static native int dAQmxGetCICountEdgesGateTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4747</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesGateTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCICountEdgesGateTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesGateTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4747</i>
	 */
	public static native int dAQmxSetCICountEdgesGateTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4748</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesGateTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesGateTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesGateTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4748</i>
	 */
	public static native int dAQmxResetCICountEdgesGateTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4751</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesGateTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCICountEdgesGateTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesGateTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4751</i>
	 */
	public static native int dAQmxGetCICountEdgesGateTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4752</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesGateTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCICountEdgesGateTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesGateTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4752</i>
	 */
	public static native int dAQmxSetCICountEdgesGateTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4753</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesGateTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesGateTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesGateTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4753</i>
	 */
	public static native int dAQmxResetCICountEdgesGateTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4756</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesGateLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCICountEdgesGateLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesGateLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4756</i>
	 */
	public static native int dAQmxGetCICountEdgesGateLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4757</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesGateLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCICountEdgesGateLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesGateLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4757</i>
	 */
	public static native int dAQmxSetCICountEdgesGateLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4758</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesGateLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesGateLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesGateLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4758</i>
	 */
	public static native int dAQmxResetCICountEdgesGateLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4760</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesGateDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICountEdgesGateDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesGateDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4760</i>
	 */
	public static native int dAQmxGetCICountEdgesGateDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4761</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesGateDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICountEdgesGateDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesGateDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4761</i>
	 */
	public static native int dAQmxSetCICountEdgesGateDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4762</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesGateDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesGateDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesGateDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4762</i>
	 */
	public static native int dAQmxResetCICountEdgesGateDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrMinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4764</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesGateDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCICountEdgesGateDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesGateDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrMinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4764</i>
	 */
	public static native int dAQmxGetCICountEdgesGateDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4765</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesGateDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCICountEdgesGateDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesGateDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4765</i>
	 */
	public static native int dAQmxSetCICountEdgesGateDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4766</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesGateDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesGateDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesGateDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4766</i>
	 */
	public static native int dAQmxResetCICountEdgesGateDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrTimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4768</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesGateDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCICountEdgesGateDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesGateDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrTimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4768</i>
	 */
	public static native int dAQmxGetCICountEdgesGateDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4769</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesGateDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCICountEdgesGateDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesGateDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4769</i>
	 */
	public static native int dAQmxSetCICountEdgesGateDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4770</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesGateDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesGateDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesGateDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4770</i>
	 */
	public static native int dAQmxResetCICountEdgesGateDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrTimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4772</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesGateDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCICountEdgesGateDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesGateDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrTimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4772</i>
	 */
	public static native int dAQmxGetCICountEdgesGateDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4773</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesGateDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCICountEdgesGateDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesGateDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4773</i>
	 */
	public static native int dAQmxSetCICountEdgesGateDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4774</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesGateDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesGateDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesGateDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4774</i>
	 */
	public static native int dAQmxResetCICountEdgesGateDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateWhen(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4777</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICountEdgesGateWhen(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCICountEdgesGateWhen(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICountEdgesGateWhen(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateWhen(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4777</i>
	 */
	public static native int dAQmxGetCICountEdgesGateWhen(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateWhen(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4778</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICountEdgesGateWhen(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCICountEdgesGateWhen(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICountEdgesGateWhen(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateWhen(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4778</i>
	 */
	public static native int dAQmxSetCICountEdgesGateWhen(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateWhen(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4779</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICountEdgesGateWhen(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICountEdgesGateWhen(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICountEdgesGateWhen(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateWhen(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4779</i>
	 */
	public static native int dAQmxResetCICountEdgesGateWhen(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4781</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIDutyCycleTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIDutyCycleTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIDutyCycleTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4781</i>
	 */
	public static native int dAQmxGetCIDutyCycleTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4782</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIDutyCycleTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIDutyCycleTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIDutyCycleTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4782</i>
	 */
	public static native int dAQmxSetCIDutyCycleTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4783</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIDutyCycleTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIDutyCycleTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIDutyCycleTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4783</i>
	 */
	public static native int dAQmxResetCIDutyCycleTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4786</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIDutyCycleTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIDutyCycleTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIDutyCycleTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4786</i>
	 */
	public static native int dAQmxGetCIDutyCycleTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4787</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIDutyCycleTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIDutyCycleTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIDutyCycleTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4787</i>
	 */
	public static native int dAQmxSetCIDutyCycleTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4788</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIDutyCycleTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIDutyCycleTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIDutyCycleTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4788</i>
	 */
	public static native int dAQmxResetCIDutyCycleTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4791</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIDutyCycleLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIDutyCycleLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIDutyCycleLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4791</i>
	 */
	public static native int dAQmxGetCIDutyCycleLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4792</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIDutyCycleLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIDutyCycleLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIDutyCycleLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4792</i>
	 */
	public static native int dAQmxSetCIDutyCycleLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4793</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIDutyCycleLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIDutyCycleLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIDutyCycleLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4793</i>
	 */
	public static native int dAQmxResetCIDutyCycleLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4795</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIDutyCycleDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIDutyCycleDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIDutyCycleDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4795</i>
	 */
	public static native int dAQmxGetCIDutyCycleDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4796</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIDutyCycleDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIDutyCycleDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIDutyCycleDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4796</i>
	 */
	public static native int dAQmxSetCIDutyCycleDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4797</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIDutyCycleDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIDutyCycleDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIDutyCycleDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4797</i>
	 */
	public static native int dAQmxResetCIDutyCycleDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4799</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIDutyCycleDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIDutyCycleDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIDutyCycleDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4799</i>
	 */
	public static native int dAQmxGetCIDutyCycleDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4800</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIDutyCycleDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIDutyCycleDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIDutyCycleDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4800</i>
	 */
	public static native int dAQmxSetCIDutyCycleDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4801</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIDutyCycleDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIDutyCycleDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIDutyCycleDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4801</i>
	 */
	public static native int dAQmxResetCIDutyCycleDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4803</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIDutyCycleDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIDutyCycleDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIDutyCycleDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4803</i>
	 */
	public static native int dAQmxGetCIDutyCycleDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4804</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIDutyCycleDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIDutyCycleDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIDutyCycleDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4804</i>
	 */
	public static native int dAQmxSetCIDutyCycleDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4805</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIDutyCycleDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIDutyCycleDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIDutyCycleDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4805</i>
	 */
	public static native int dAQmxResetCIDutyCycleDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4807</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIDutyCycleDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIDutyCycleDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIDutyCycleDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4807</i>
	 */
	public static native int dAQmxGetCIDutyCycleDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4808</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIDutyCycleDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIDutyCycleDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIDutyCycleDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4808</i>
	 */
	public static native int dAQmxSetCIDutyCycleDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4809</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIDutyCycleDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIDutyCycleDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIDutyCycleDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4809</i>
	 */
	public static native int dAQmxResetCIDutyCycleDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4812</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIDutyCycleStartingEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIDutyCycleStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIDutyCycleStartingEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4812</i>
	 */
	public static native int dAQmxGetCIDutyCycleStartingEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4813</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIDutyCycleStartingEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIDutyCycleStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIDutyCycleStartingEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4813</i>
	 */
	public static native int dAQmxSetCIDutyCycleStartingEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4814</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIDutyCycleStartingEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIDutyCycleStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIDutyCycleStartingEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4814</i>
	 */
	public static native int dAQmxResetCIDutyCycleStartingEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AngleUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCIAngEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4817</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIAngEncoderUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIAngEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIAngEncoderUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AngleUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCIAngEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4817</i>
	 */
	public static native int dAQmxGetCIAngEncoderUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIAngEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4818</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIAngEncoderUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIAngEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIAngEncoderUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIAngEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4818</i>
	 */
	public static native int dAQmxSetCIAngEncoderUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIAngEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4819</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIAngEncoderUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIAngEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIAngEncoderUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIAngEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4819</i>
	 */
	public static native int dAQmxResetCIAngEncoderUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_AngEncoder_PulsesPerRev ***<br>
	 * Original signature : <code>int32 DAQmxGetCIAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4821</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIAngEncoderPulsesPerRev(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIAngEncoderPulsesPerRev(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIAngEncoderPulsesPerRev(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_AngEncoder_PulsesPerRev ***<br>
	 * Original signature : <code>int32 DAQmxGetCIAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4821</i>
	 */
	public static native int dAQmxGetCIAngEncoderPulsesPerRev(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4822</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIAngEncoderPulsesPerRev(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIAngEncoderPulsesPerRev(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIAngEncoderPulsesPerRev(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4822</i>
	 */
	public static native int dAQmxSetCIAngEncoderPulsesPerRev(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIAngEncoderPulsesPerRev(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4823</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIAngEncoderPulsesPerRev(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIAngEncoderPulsesPerRev(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIAngEncoderPulsesPerRev(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIAngEncoderPulsesPerRev(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4823</i>
	 */
	public static native int dAQmxResetCIAngEncoderPulsesPerRev(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_AngEncoder_InitialAngle ***<br>
	 * Original signature : <code>int32 DAQmxGetCIAngEncoderInitialAngle(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4825</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIAngEncoderInitialAngle(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIAngEncoderInitialAngle(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIAngEncoderInitialAngle(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_AngEncoder_InitialAngle ***<br>
	 * Original signature : <code>int32 DAQmxGetCIAngEncoderInitialAngle(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4825</i>
	 */
	public static native int dAQmxGetCIAngEncoderInitialAngle(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIAngEncoderInitialAngle(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4826</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIAngEncoderInitialAngle(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIAngEncoderInitialAngle(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIAngEncoderInitialAngle(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIAngEncoderInitialAngle(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4826</i>
	 */
	public static native int dAQmxSetCIAngEncoderInitialAngle(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIAngEncoderInitialAngle(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4827</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIAngEncoderInitialAngle(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIAngEncoderInitialAngle(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIAngEncoderInitialAngle(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIAngEncoderInitialAngle(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4827</i>
	 */
	public static native int dAQmxResetCIAngEncoderInitialAngle(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LengthUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCILinEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4830</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCILinEncoderUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCILinEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCILinEncoderUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LengthUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCILinEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4830</i>
	 */
	public static native int dAQmxGetCILinEncoderUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCILinEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4831</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCILinEncoderUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCILinEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCILinEncoderUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCILinEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4831</i>
	 */
	public static native int dAQmxSetCILinEncoderUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCILinEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4832</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCILinEncoderUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCILinEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCILinEncoderUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCILinEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4832</i>
	 */
	public static native int dAQmxResetCILinEncoderUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_LinEncoder_DistPerPulse ***<br>
	 * Original signature : <code>int32 DAQmxGetCILinEncoderDistPerPulse(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4834</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCILinEncoderDistPerPulse(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCILinEncoderDistPerPulse(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCILinEncoderDistPerPulse(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_LinEncoder_DistPerPulse ***<br>
	 * Original signature : <code>int32 DAQmxGetCILinEncoderDistPerPulse(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4834</i>
	 */
	public static native int dAQmxGetCILinEncoderDistPerPulse(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCILinEncoderDistPerPulse(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4835</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCILinEncoderDistPerPulse(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCILinEncoderDistPerPulse(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCILinEncoderDistPerPulse(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCILinEncoderDistPerPulse(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4835</i>
	 */
	public static native int dAQmxSetCILinEncoderDistPerPulse(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCILinEncoderDistPerPulse(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4836</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCILinEncoderDistPerPulse(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCILinEncoderDistPerPulse(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCILinEncoderDistPerPulse(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCILinEncoderDistPerPulse(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4836</i>
	 */
	public static native int dAQmxResetCILinEncoderDistPerPulse(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_LinEncoder_InitialPos ***<br>
	 * Original signature : <code>int32 DAQmxGetCILinEncoderInitialPos(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4838</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCILinEncoderInitialPos(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCILinEncoderInitialPos(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCILinEncoderInitialPos(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_LinEncoder_InitialPos ***<br>
	 * Original signature : <code>int32 DAQmxGetCILinEncoderInitialPos(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4838</i>
	 */
	public static native int dAQmxGetCILinEncoderInitialPos(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCILinEncoderInitialPos(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4839</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCILinEncoderInitialPos(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCILinEncoderInitialPos(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCILinEncoderInitialPos(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCILinEncoderInitialPos(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4839</i>
	 */
	public static native int dAQmxSetCILinEncoderInitialPos(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCILinEncoderInitialPos(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4840</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCILinEncoderInitialPos(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCILinEncoderInitialPos(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCILinEncoderInitialPos(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCILinEncoderInitialPos(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4840</i>
	 */
	public static native int dAQmxResetCILinEncoderInitialPos(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set EncoderType2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderDecodingType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4843</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderDecodingType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIEncoderDecodingType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderDecodingType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set EncoderType2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderDecodingType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4843</i>
	 */
	public static native int dAQmxGetCIEncoderDecodingType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderDecodingType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4844</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderDecodingType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIEncoderDecodingType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderDecodingType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderDecodingType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4844</i>
	 */
	public static native int dAQmxSetCIEncoderDecodingType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderDecodingType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4845</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderDecodingType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderDecodingType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderDecodingType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderDecodingType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4845</i>
	 */
	public static native int dAQmxResetCIEncoderDecodingType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4847</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderAInputTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIEncoderAInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderAInputTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4847</i>
	 */
	public static native int dAQmxGetCIEncoderAInputTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4848</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderAInputTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIEncoderAInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderAInputTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4848</i>
	 */
	public static native int dAQmxSetCIEncoderAInputTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4849</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderAInputTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderAInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderAInputTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4849</i>
	 */
	public static native int dAQmxResetCIEncoderAInputTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4852</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderAInputTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIEncoderAInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderAInputTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4852</i>
	 */
	public static native int dAQmxGetCIEncoderAInputTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4853</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderAInputTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIEncoderAInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderAInputTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4853</i>
	 */
	public static native int dAQmxSetCIEncoderAInputTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4854</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderAInputTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderAInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderAInputTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4854</i>
	 */
	public static native int dAQmxResetCIEncoderAInputTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4857</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderAInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4857</i>
	 */
	public static native int dAQmxGetCIEncoderAInputLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4858</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderAInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4858</i>
	 */
	public static native int dAQmxSetCIEncoderAInputLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4859</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderAInputLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4859</i>
	 */
	public static native int dAQmxResetCIEncoderAInputLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4861</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderAInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIEncoderAInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderAInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4861</i>
	 */
	public static native int dAQmxGetCIEncoderAInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4862</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderAInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIEncoderAInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderAInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4862</i>
	 */
	public static native int dAQmxSetCIEncoderAInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4863</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderAInputDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderAInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderAInputDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4863</i>
	 */
	public static native int dAQmxResetCIEncoderAInputDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4865</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4865</i>
	 */
	public static native int dAQmxGetCIEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4866</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4866</i>
	 */
	public static native int dAQmxSetCIEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4867</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4867</i>
	 */
	public static native int dAQmxResetCIEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4869</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4869</i>
	 */
	public static native int dAQmxGetCIEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4870</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4870</i>
	 */
	public static native int dAQmxSetCIEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4871</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4871</i>
	 */
	public static native int dAQmxResetCIEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4873</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4873</i>
	 */
	public static native int dAQmxGetCIEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4874</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4874</i>
	 */
	public static native int dAQmxSetCIEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4875</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4875</i>
	 */
	public static native int dAQmxResetCIEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4877</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderAInputDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIEncoderAInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderAInputDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4877</i>
	 */
	public static native int dAQmxGetCIEncoderAInputDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4878</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderAInputDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIEncoderAInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderAInputDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4878</i>
	 */
	public static native int dAQmxSetCIEncoderAInputDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4879</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderAInputDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderAInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderAInputDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4879</i>
	 */
	public static native int dAQmxResetCIEncoderAInputDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4881</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderBInputTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIEncoderBInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderBInputTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4881</i>
	 */
	public static native int dAQmxGetCIEncoderBInputTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4882</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderBInputTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIEncoderBInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderBInputTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4882</i>
	 */
	public static native int dAQmxSetCIEncoderBInputTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4883</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderBInputTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderBInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderBInputTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4883</i>
	 */
	public static native int dAQmxResetCIEncoderBInputTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4886</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderBInputTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIEncoderBInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderBInputTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4886</i>
	 */
	public static native int dAQmxGetCIEncoderBInputTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4887</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderBInputTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIEncoderBInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderBInputTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4887</i>
	 */
	public static native int dAQmxSetCIEncoderBInputTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4888</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderBInputTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderBInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderBInputTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4888</i>
	 */
	public static native int dAQmxResetCIEncoderBInputTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4891</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderBInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4891</i>
	 */
	public static native int dAQmxGetCIEncoderBInputLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4892</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderBInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4892</i>
	 */
	public static native int dAQmxSetCIEncoderBInputLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4893</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderBInputLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4893</i>
	 */
	public static native int dAQmxResetCIEncoderBInputLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4895</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderBInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIEncoderBInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderBInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4895</i>
	 */
	public static native int dAQmxGetCIEncoderBInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4896</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderBInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIEncoderBInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderBInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4896</i>
	 */
	public static native int dAQmxSetCIEncoderBInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4897</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderBInputDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderBInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderBInputDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4897</i>
	 */
	public static native int dAQmxResetCIEncoderBInputDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4899</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4899</i>
	 */
	public static native int dAQmxGetCIEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4900</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4900</i>
	 */
	public static native int dAQmxSetCIEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4901</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4901</i>
	 */
	public static native int dAQmxResetCIEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4903</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4903</i>
	 */
	public static native int dAQmxGetCIEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4904</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4904</i>
	 */
	public static native int dAQmxSetCIEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4905</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4905</i>
	 */
	public static native int dAQmxResetCIEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4907</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4907</i>
	 */
	public static native int dAQmxGetCIEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4908</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4908</i>
	 */
	public static native int dAQmxSetCIEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4909</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4909</i>
	 */
	public static native int dAQmxResetCIEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4911</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderBInputDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIEncoderBInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderBInputDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4911</i>
	 */
	public static native int dAQmxGetCIEncoderBInputDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4912</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderBInputDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIEncoderBInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderBInputDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4912</i>
	 */
	public static native int dAQmxSetCIEncoderBInputDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4913</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderBInputDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderBInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderBInputDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4913</i>
	 */
	public static native int dAQmxResetCIEncoderBInputDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4915</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderZInputTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIEncoderZInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderZInputTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4915</i>
	 */
	public static native int dAQmxGetCIEncoderZInputTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4916</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderZInputTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIEncoderZInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderZInputTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4916</i>
	 */
	public static native int dAQmxSetCIEncoderZInputTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4917</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderZInputTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderZInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderZInputTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4917</i>
	 */
	public static native int dAQmxResetCIEncoderZInputTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4920</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderZInputTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIEncoderZInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderZInputTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4920</i>
	 */
	public static native int dAQmxGetCIEncoderZInputTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4921</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderZInputTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIEncoderZInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderZInputTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4921</i>
	 */
	public static native int dAQmxSetCIEncoderZInputTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4922</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderZInputTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderZInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderZInputTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4922</i>
	 */
	public static native int dAQmxResetCIEncoderZInputTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4925</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderZInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIEncoderZInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderZInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4925</i>
	 */
	public static native int dAQmxGetCIEncoderZInputLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4926</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderZInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIEncoderZInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderZInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4926</i>
	 */
	public static native int dAQmxSetCIEncoderZInputLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4927</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderZInputLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderZInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderZInputLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4927</i>
	 */
	public static native int dAQmxResetCIEncoderZInputLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4929</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderZInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIEncoderZInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderZInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4929</i>
	 */
	public static native int dAQmxGetCIEncoderZInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4930</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderZInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIEncoderZInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderZInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4930</i>
	 */
	public static native int dAQmxSetCIEncoderZInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4931</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderZInputDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderZInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderZInputDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4931</i>
	 */
	public static native int dAQmxResetCIEncoderZInputDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4933</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderZInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIEncoderZInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderZInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4933</i>
	 */
	public static native int dAQmxGetCIEncoderZInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4934</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderZInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIEncoderZInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderZInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4934</i>
	 */
	public static native int dAQmxSetCIEncoderZInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4935</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderZInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderZInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderZInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4935</i>
	 */
	public static native int dAQmxResetCIEncoderZInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4937</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderZInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIEncoderZInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderZInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4937</i>
	 */
	public static native int dAQmxGetCIEncoderZInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4938</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderZInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIEncoderZInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderZInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4938</i>
	 */
	public static native int dAQmxSetCIEncoderZInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4939</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderZInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderZInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderZInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4939</i>
	 */
	public static native int dAQmxResetCIEncoderZInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4941</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderZInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIEncoderZInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderZInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4941</i>
	 */
	public static native int dAQmxGetCIEncoderZInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4942</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderZInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIEncoderZInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderZInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4942</i>
	 */
	public static native int dAQmxSetCIEncoderZInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4943</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderZInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderZInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderZInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4943</i>
	 */
	public static native int dAQmxResetCIEncoderZInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4945</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderZInputDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIEncoderZInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderZInputDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4945</i>
	 */
	public static native int dAQmxGetCIEncoderZInputDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4946</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderZInputDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIEncoderZInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderZInputDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4946</i>
	 */
	public static native int dAQmxSetCIEncoderZInputDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4947</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderZInputDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderZInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderZInputDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4947</i>
	 */
	public static native int dAQmxResetCIEncoderZInputDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZIndexEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZIndexEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4949</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderZIndexEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIEncoderZIndexEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderZIndexEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZIndexEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZIndexEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4949</i>
	 */
	public static native int dAQmxGetCIEncoderZIndexEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZIndexEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4950</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderZIndexEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIEncoderZIndexEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderZIndexEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZIndexEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4950</i>
	 */
	public static native int dAQmxSetCIEncoderZIndexEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZIndexEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4951</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderZIndexEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderZIndexEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderZIndexEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZIndexEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4951</i>
	 */
	public static native int dAQmxResetCIEncoderZIndexEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZIndexVal ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZIndexVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4953</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderZIndexVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIEncoderZIndexVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderZIndexVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZIndexVal ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZIndexVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4953</i>
	 */
	public static native int dAQmxGetCIEncoderZIndexVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZIndexVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4954</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderZIndexVal(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIEncoderZIndexVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderZIndexVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZIndexVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4954</i>
	 */
	public static native int dAQmxSetCIEncoderZIndexVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZIndexVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4955</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderZIndexVal(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderZIndexVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderZIndexVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZIndexVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4955</i>
	 */
	public static native int dAQmxResetCIEncoderZIndexVal(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set EncoderZIndexPhase1<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZIndexPhase(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4958</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIEncoderZIndexPhase(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIEncoderZIndexPhase(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIEncoderZIndexPhase(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set EncoderZIndexPhase1<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZIndexPhase(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4958</i>
	 */
	public static native int dAQmxGetCIEncoderZIndexPhase(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZIndexPhase(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4959</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIEncoderZIndexPhase(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIEncoderZIndexPhase(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIEncoderZIndexPhase(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZIndexPhase(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4959</i>
	 */
	public static native int dAQmxSetCIEncoderZIndexPhase(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZIndexPhase(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4960</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIEncoderZIndexPhase(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIEncoderZIndexPhase(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIEncoderZIndexPhase(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZIndexPhase(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4960</i>
	 */
	public static native int dAQmxResetCIEncoderZIndexPhase(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4963</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseWidthUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseWidthUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseWidthUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4963</i>
	 */
	public static native int dAQmxGetCIPulseWidthUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4964</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseWidthUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseWidthUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseWidthUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4964</i>
	 */
	public static native int dAQmxSetCIPulseWidthUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4965</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseWidthUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseWidthUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseWidthUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4965</i>
	 */
	public static native int dAQmxResetCIPulseWidthUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4967</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseWidthTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIPulseWidthTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseWidthTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4967</i>
	 */
	public static native int dAQmxGetCIPulseWidthTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4968</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseWidthTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIPulseWidthTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseWidthTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4968</i>
	 */
	public static native int dAQmxSetCIPulseWidthTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4969</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseWidthTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseWidthTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseWidthTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4969</i>
	 */
	public static native int dAQmxResetCIPulseWidthTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4972</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseWidthTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseWidthTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseWidthTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4972</i>
	 */
	public static native int dAQmxGetCIPulseWidthTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4973</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseWidthTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseWidthTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseWidthTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4973</i>
	 */
	public static native int dAQmxSetCIPulseWidthTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4974</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseWidthTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseWidthTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseWidthTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4974</i>
	 */
	public static native int dAQmxResetCIPulseWidthTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4977</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseWidthLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseWidthLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseWidthLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4977</i>
	 */
	public static native int dAQmxGetCIPulseWidthLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4978</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseWidthLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseWidthLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseWidthLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4978</i>
	 */
	public static native int dAQmxSetCIPulseWidthLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4979</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseWidthLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseWidthLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseWidthLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4979</i>
	 */
	public static native int dAQmxResetCIPulseWidthLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4981</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseWidthDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIPulseWidthDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseWidthDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4981</i>
	 */
	public static native int dAQmxGetCIPulseWidthDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4982</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseWidthDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIPulseWidthDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseWidthDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4982</i>
	 */
	public static native int dAQmxSetCIPulseWidthDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4983</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseWidthDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseWidthDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseWidthDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4983</i>
	 */
	public static native int dAQmxResetCIPulseWidthDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4985</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseWidthDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIPulseWidthDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseWidthDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4985</i>
	 */
	public static native int dAQmxGetCIPulseWidthDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4986</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseWidthDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIPulseWidthDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseWidthDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4986</i>
	 */
	public static native int dAQmxSetCIPulseWidthDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4987</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseWidthDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseWidthDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseWidthDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4987</i>
	 */
	public static native int dAQmxResetCIPulseWidthDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4989</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseWidthDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIPulseWidthDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseWidthDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4989</i>
	 */
	public static native int dAQmxGetCIPulseWidthDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4990</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseWidthDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIPulseWidthDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseWidthDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4990</i>
	 */
	public static native int dAQmxSetCIPulseWidthDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4991</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseWidthDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseWidthDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseWidthDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4991</i>
	 */
	public static native int dAQmxResetCIPulseWidthDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4993</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseWidthDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIPulseWidthDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseWidthDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4993</i>
	 */
	public static native int dAQmxGetCIPulseWidthDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4994</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseWidthDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIPulseWidthDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseWidthDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4994</i>
	 */
	public static native int dAQmxSetCIPulseWidthDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4995</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseWidthDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseWidthDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseWidthDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4995</i>
	 */
	public static native int dAQmxResetCIPulseWidthDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4997</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseWidthDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIPulseWidthDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseWidthDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4997</i>
	 */
	public static native int dAQmxGetCIPulseWidthDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4998</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseWidthDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIPulseWidthDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseWidthDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4998</i>
	 */
	public static native int dAQmxSetCIPulseWidthDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4999</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseWidthDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseWidthDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseWidthDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4999</i>
	 */
	public static native int dAQmxResetCIPulseWidthDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5002</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseWidthStartingEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseWidthStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseWidthStartingEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5002</i>
	 */
	public static native int dAQmxGetCIPulseWidthStartingEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5003</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseWidthStartingEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseWidthStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseWidthStartingEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5003</i>
	 */
	public static native int dAQmxSetCIPulseWidthStartingEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5004</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseWidthStartingEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseWidthStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseWidthStartingEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5004</i>
	 */
	public static native int dAQmxResetCIPulseWidthStartingEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits<br>
	 * Original signature : <code>int32 DAQmxGetCITimestampUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5007</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITimestampUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCITimestampUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITimestampUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits<br>
	 * Original signature : <code>int32 DAQmxGetCITimestampUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5007</i>
	 */
	public static native int dAQmxGetCITimestampUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITimestampUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5008</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITimestampUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCITimestampUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITimestampUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITimestampUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5008</i>
	 */
	public static native int dAQmxSetCITimestampUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITimestampUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5009</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITimestampUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITimestampUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITimestampUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITimestampUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5009</i>
	 */
	public static native int dAQmxResetCITimestampUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Timestamp_InitialSeconds ***<br>
	 * Original signature : <code>int32 DAQmxGetCITimestampInitialSeconds(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5011</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITimestampInitialSeconds(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCITimestampInitialSeconds(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITimestampInitialSeconds(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Timestamp_InitialSeconds ***<br>
	 * Original signature : <code>int32 DAQmxGetCITimestampInitialSeconds(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5011</i>
	 */
	public static native int dAQmxGetCITimestampInitialSeconds(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITimestampInitialSeconds(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5012</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITimestampInitialSeconds(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCITimestampInitialSeconds(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITimestampInitialSeconds(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITimestampInitialSeconds(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5012</i>
	 */
	public static native int dAQmxSetCITimestampInitialSeconds(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITimestampInitialSeconds(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5013</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITimestampInitialSeconds(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITimestampInitialSeconds(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITimestampInitialSeconds(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITimestampInitialSeconds(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5013</i>
	 */
	public static native int dAQmxResetCITimestampInitialSeconds(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set GpsSignalType1<br>
	 * Original signature : <code>int32 DAQmxGetCIGPSSyncMethod(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5016</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIGPSSyncMethod(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIGPSSyncMethod(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIGPSSyncMethod(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set GpsSignalType1<br>
	 * Original signature : <code>int32 DAQmxGetCIGPSSyncMethod(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5016</i>
	 */
	public static native int dAQmxGetCIGPSSyncMethod(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIGPSSyncMethod(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5017</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIGPSSyncMethod(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIGPSSyncMethod(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIGPSSyncMethod(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIGPSSyncMethod(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5017</i>
	 */
	public static native int dAQmxSetCIGPSSyncMethod(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIGPSSyncMethod(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5018</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIGPSSyncMethod(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIGPSSyncMethod(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIGPSSyncMethod(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIGPSSyncMethod(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5018</i>
	 */
	public static native int dAQmxResetCIGPSSyncMethod(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_GPS_SyncSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIGPSSyncSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5020</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIGPSSyncSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIGPSSyncSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIGPSSyncSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_GPS_SyncSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIGPSSyncSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5020</i>
	 */
	public static native int dAQmxGetCIGPSSyncSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIGPSSyncSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5021</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIGPSSyncSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIGPSSyncSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIGPSSyncSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIGPSSyncSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5021</i>
	 */
	public static native int dAQmxSetCIGPSSyncSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIGPSSyncSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5022</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIGPSSyncSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIGPSSyncSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIGPSSyncSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIGPSSyncSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5022</i>
	 */
	public static native int dAQmxResetCIGPSSyncSrc(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AngularVelocityUnits<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityAngEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5025</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityAngEncoderUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIVelocityAngEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityAngEncoderUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AngularVelocityUnits<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityAngEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5025</i>
	 */
	public static native int dAQmxGetCIVelocityAngEncoderUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityAngEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5026</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityAngEncoderUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIVelocityAngEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityAngEncoderUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityAngEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5026</i>
	 */
	public static native int dAQmxSetCIVelocityAngEncoderUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityAngEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5027</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityAngEncoderUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityAngEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityAngEncoderUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityAngEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5027</i>
	 */
	public static native int dAQmxResetCIVelocityAngEncoderUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_AngEncoder_PulsesPerRev ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5029</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityAngEncoderPulsesPerRev(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIVelocityAngEncoderPulsesPerRev(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityAngEncoderPulsesPerRev(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_AngEncoder_PulsesPerRev ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5029</i>
	 */
	public static native int dAQmxGetCIVelocityAngEncoderPulsesPerRev(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5030</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityAngEncoderPulsesPerRev(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIVelocityAngEncoderPulsesPerRev(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityAngEncoderPulsesPerRev(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5030</i>
	 */
	public static native int dAQmxSetCIVelocityAngEncoderPulsesPerRev(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityAngEncoderPulsesPerRev(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5031</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityAngEncoderPulsesPerRev(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityAngEncoderPulsesPerRev(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityAngEncoderPulsesPerRev(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityAngEncoderPulsesPerRev(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5031</i>
	 */
	public static native int dAQmxResetCIVelocityAngEncoderPulsesPerRev(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set VelocityUnits<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityLinEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5034</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityLinEncoderUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIVelocityLinEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityLinEncoderUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set VelocityUnits<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityLinEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5034</i>
	 */
	public static native int dAQmxGetCIVelocityLinEncoderUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityLinEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5035</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityLinEncoderUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIVelocityLinEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityLinEncoderUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityLinEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5035</i>
	 */
	public static native int dAQmxSetCIVelocityLinEncoderUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityLinEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5036</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityLinEncoderUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityLinEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityLinEncoderUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityLinEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5036</i>
	 */
	public static native int dAQmxResetCIVelocityLinEncoderUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_LinEncoder_DistPerPulse ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityLinEncoderDistPerPulse(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5038</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityLinEncoderDistPerPulse(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIVelocityLinEncoderDistPerPulse(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityLinEncoderDistPerPulse(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_LinEncoder_DistPerPulse ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityLinEncoderDistPerPulse(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5038</i>
	 */
	public static native int dAQmxGetCIVelocityLinEncoderDistPerPulse(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityLinEncoderDistPerPulse(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5039</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityLinEncoderDistPerPulse(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIVelocityLinEncoderDistPerPulse(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityLinEncoderDistPerPulse(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityLinEncoderDistPerPulse(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5039</i>
	 */
	public static native int dAQmxSetCIVelocityLinEncoderDistPerPulse(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityLinEncoderDistPerPulse(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5040</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityLinEncoderDistPerPulse(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityLinEncoderDistPerPulse(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityLinEncoderDistPerPulse(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityLinEncoderDistPerPulse(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5040</i>
	 */
	public static native int dAQmxResetCIVelocityLinEncoderDistPerPulse(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set EncoderType2<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderDecodingType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5043</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderDecodingType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIVelocityEncoderDecodingType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderDecodingType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set EncoderType2<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderDecodingType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5043</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderDecodingType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderDecodingType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5044</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderDecodingType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIVelocityEncoderDecodingType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderDecodingType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderDecodingType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5044</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderDecodingType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderDecodingType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5045</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderDecodingType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderDecodingType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderDecodingType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderDecodingType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5045</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderDecodingType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5047</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderAInputTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIVelocityEncoderAInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderAInputTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5047</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderAInputTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5048</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderAInputTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIVelocityEncoderAInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderAInputTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5048</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderAInputTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5049</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderAInputTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderAInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderAInputTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5049</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderAInputTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5052</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderAInputTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIVelocityEncoderAInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderAInputTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5052</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderAInputTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5053</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderAInputTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIVelocityEncoderAInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderAInputTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5053</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderAInputTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5054</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderAInputTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderAInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderAInputTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5054</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderAInputTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5057</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIVelocityEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderAInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5057</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderAInputLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5058</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIVelocityEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderAInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5058</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderAInputLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5059</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderAInputLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5059</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderAInputLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5061</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderAInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIVelocityEncoderAInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderAInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5061</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderAInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5062</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderAInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIVelocityEncoderAInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderAInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5062</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderAInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5063</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderAInputDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderAInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderAInputDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5063</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderAInputDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5065</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIVelocityEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5065</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5066</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIVelocityEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5066</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5067</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5067</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5069</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIVelocityEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5069</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5070</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIVelocityEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5070</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5071</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5071</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5073</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIVelocityEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5073</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5074</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIVelocityEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5074</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5075</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5075</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5077</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderBInputTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIVelocityEncoderBInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderBInputTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5077</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderBInputTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5078</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderBInputTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIVelocityEncoderBInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderBInputTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5078</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderBInputTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5079</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderBInputTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderBInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderBInputTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5079</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderBInputTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5082</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderBInputTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIVelocityEncoderBInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderBInputTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5082</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderBInputTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5083</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderBInputTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIVelocityEncoderBInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderBInputTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5083</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderBInputTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5084</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderBInputTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderBInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderBInputTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5084</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderBInputTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5087</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIVelocityEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderBInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5087</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderBInputLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5088</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIVelocityEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderBInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5088</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderBInputLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5089</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderBInputLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5089</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderBInputLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5091</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderBInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIVelocityEncoderBInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderBInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5091</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderBInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5092</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderBInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIVelocityEncoderBInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderBInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5092</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderBInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5093</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderBInputDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderBInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderBInputDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5093</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderBInputDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5095</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIVelocityEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5095</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5096</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIVelocityEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5096</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5097</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5097</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5099</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIVelocityEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5099</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5100</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIVelocityEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5100</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5101</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5101</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5103</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIVelocityEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5103</i>
	 */
	public static native int dAQmxGetCIVelocityEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5104</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIVelocityEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5104</i>
	 */
	public static native int dAQmxSetCIVelocityEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5105</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5105</i>
	 */
	public static native int dAQmxResetCIVelocityEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_MeasTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityMeasTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5107</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityMeasTime(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIVelocityMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityMeasTime(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_MeasTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityMeasTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5107</i>
	 */
	public static native int dAQmxGetCIVelocityMeasTime(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityMeasTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5108</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityMeasTime(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIVelocityMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityMeasTime(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityMeasTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5108</i>
	 */
	public static native int dAQmxSetCIVelocityMeasTime(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityMeasTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5109</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityMeasTime(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityMeasTime(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityMeasTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5109</i>
	 */
	public static native int dAQmxResetCIVelocityMeasTime(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Div ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5111</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIVelocityDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIVelocityDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIVelocityDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Div ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5111</i>
	 */
	public static native int dAQmxGetCIVelocityDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5112</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIVelocityDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIVelocityDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIVelocityDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5112</i>
	 */
	public static native int dAQmxSetCIVelocityDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5113</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIVelocityDiv(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIVelocityDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIVelocityDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5113</i>
	 */
	public static native int dAQmxResetCIVelocityDiv(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5116</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCITwoEdgeSepUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5116</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5117</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCITwoEdgeSepUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5117</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5118</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5118</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_FirstTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5120</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepFirstTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCITwoEdgeSepFirstTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepFirstTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_FirstTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5120</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepFirstTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5121</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepFirstTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCITwoEdgeSepFirstTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepFirstTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5121</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepFirstTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5122</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepFirstTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepFirstTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepFirstTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5122</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepFirstTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5125</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepFirstTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCITwoEdgeSepFirstTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepFirstTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5125</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepFirstTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5126</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepFirstTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCITwoEdgeSepFirstTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepFirstTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5126</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepFirstTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5127</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepFirstTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepFirstTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepFirstTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5127</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepFirstTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5130</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepFirstLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCITwoEdgeSepFirstLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepFirstLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5130</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepFirstLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5131</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepFirstLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCITwoEdgeSepFirstLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepFirstLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5131</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepFirstLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5132</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepFirstLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepFirstLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepFirstLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5132</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepFirstLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5134</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepFirstDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCITwoEdgeSepFirstDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepFirstDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5134</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepFirstDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5135</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepFirstDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCITwoEdgeSepFirstDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepFirstDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5135</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepFirstDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5136</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepFirstDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepFirstDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepFirstDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5136</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepFirstDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5138</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5138</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5139</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5139</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5140</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5140</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5142</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5142</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5143</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5143</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5144</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5144</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5146</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5146</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5147</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5147</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5148</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5148</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5150</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepFirstDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCITwoEdgeSepFirstDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepFirstDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5150</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepFirstDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5151</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepFirstDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCITwoEdgeSepFirstDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepFirstDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5151</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepFirstDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5152</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepFirstDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepFirstDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepFirstDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5152</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepFirstDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5155</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepFirstEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCITwoEdgeSepFirstEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepFirstEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5155</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepFirstEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5156</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepFirstEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCITwoEdgeSepFirstEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepFirstEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5156</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepFirstEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5157</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepFirstEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepFirstEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepFirstEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5157</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepFirstEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_SecondTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5159</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepSecondTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCITwoEdgeSepSecondTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepSecondTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_SecondTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5159</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepSecondTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5160</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepSecondTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCITwoEdgeSepSecondTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepSecondTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5160</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepSecondTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5161</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepSecondTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepSecondTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepSecondTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5161</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepSecondTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5164</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepSecondTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCITwoEdgeSepSecondTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepSecondTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5164</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepSecondTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5165</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepSecondTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCITwoEdgeSepSecondTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepSecondTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5165</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepSecondTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5166</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepSecondTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepSecondTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepSecondTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5166</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepSecondTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5169</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepSecondLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCITwoEdgeSepSecondLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepSecondLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5169</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepSecondLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5170</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepSecondLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCITwoEdgeSepSecondLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepSecondLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5170</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepSecondLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5171</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepSecondLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepSecondLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepSecondLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5171</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepSecondLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5173</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepSecondDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCITwoEdgeSepSecondDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepSecondDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5173</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepSecondDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5174</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepSecondDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCITwoEdgeSepSecondDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepSecondDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5174</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepSecondDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5175</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepSecondDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepSecondDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepSecondDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5175</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepSecondDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5177</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5177</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5178</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5178</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5179</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5179</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5181</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5181</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5182</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5182</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5183</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5183</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5185</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5185</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5186</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5186</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5187</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5187</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5189</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepSecondDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCITwoEdgeSepSecondDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepSecondDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5189</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepSecondDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5190</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepSecondDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCITwoEdgeSepSecondDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepSecondDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5190</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepSecondDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5191</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepSecondDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepSecondDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepSecondDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5191</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepSecondDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5194</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITwoEdgeSepSecondEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCITwoEdgeSepSecondEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITwoEdgeSepSecondEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5194</i>
	 */
	public static native int dAQmxGetCITwoEdgeSepSecondEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5195</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCITwoEdgeSepSecondEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCITwoEdgeSepSecondEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCITwoEdgeSepSecondEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5195</i>
	 */
	public static native int dAQmxSetCITwoEdgeSepSecondEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5196</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCITwoEdgeSepSecondEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCITwoEdgeSepSecondEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCITwoEdgeSepSecondEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5196</i>
	 */
	public static native int dAQmxResetCITwoEdgeSepSecondEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5199</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCISemiPeriodUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCISemiPeriodUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCISemiPeriodUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5199</i>
	 */
	public static native int dAQmxGetCISemiPeriodUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5200</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCISemiPeriodUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCISemiPeriodUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCISemiPeriodUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5200</i>
	 */
	public static native int dAQmxSetCISemiPeriodUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5201</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCISemiPeriodUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCISemiPeriodUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCISemiPeriodUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5201</i>
	 */
	public static native int dAQmxResetCISemiPeriodUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5203</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCISemiPeriodTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCISemiPeriodTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCISemiPeriodTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5203</i>
	 */
	public static native int dAQmxGetCISemiPeriodTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5204</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCISemiPeriodTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCISemiPeriodTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCISemiPeriodTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5204</i>
	 */
	public static native int dAQmxSetCISemiPeriodTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5205</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCISemiPeriodTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCISemiPeriodTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCISemiPeriodTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5205</i>
	 */
	public static native int dAQmxResetCISemiPeriodTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5208</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCISemiPeriodTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCISemiPeriodTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCISemiPeriodTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5208</i>
	 */
	public static native int dAQmxGetCISemiPeriodTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5209</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCISemiPeriodTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCISemiPeriodTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCISemiPeriodTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5209</i>
	 */
	public static native int dAQmxSetCISemiPeriodTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5210</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCISemiPeriodTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCISemiPeriodTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCISemiPeriodTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5210</i>
	 */
	public static native int dAQmxResetCISemiPeriodTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5213</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCISemiPeriodLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCISemiPeriodLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCISemiPeriodLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5213</i>
	 */
	public static native int dAQmxGetCISemiPeriodLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5214</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCISemiPeriodLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCISemiPeriodLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCISemiPeriodLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5214</i>
	 */
	public static native int dAQmxSetCISemiPeriodLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5215</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCISemiPeriodLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCISemiPeriodLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCISemiPeriodLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5215</i>
	 */
	public static native int dAQmxResetCISemiPeriodLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5217</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCISemiPeriodDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCISemiPeriodDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCISemiPeriodDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5217</i>
	 */
	public static native int dAQmxGetCISemiPeriodDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5218</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCISemiPeriodDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCISemiPeriodDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCISemiPeriodDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5218</i>
	 */
	public static native int dAQmxSetCISemiPeriodDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5219</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCISemiPeriodDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCISemiPeriodDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCISemiPeriodDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5219</i>
	 */
	public static native int dAQmxResetCISemiPeriodDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5221</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCISemiPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCISemiPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCISemiPeriodDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5221</i>
	 */
	public static native int dAQmxGetCISemiPeriodDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5222</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCISemiPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCISemiPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCISemiPeriodDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5222</i>
	 */
	public static native int dAQmxSetCISemiPeriodDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5223</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCISemiPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCISemiPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCISemiPeriodDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5223</i>
	 */
	public static native int dAQmxResetCISemiPeriodDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5225</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCISemiPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCISemiPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCISemiPeriodDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5225</i>
	 */
	public static native int dAQmxGetCISemiPeriodDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5226</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCISemiPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCISemiPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCISemiPeriodDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5226</i>
	 */
	public static native int dAQmxSetCISemiPeriodDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5227</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCISemiPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCISemiPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCISemiPeriodDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5227</i>
	 */
	public static native int dAQmxResetCISemiPeriodDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5229</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCISemiPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCISemiPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCISemiPeriodDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5229</i>
	 */
	public static native int dAQmxGetCISemiPeriodDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5230</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCISemiPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCISemiPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCISemiPeriodDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5230</i>
	 */
	public static native int dAQmxSetCISemiPeriodDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5231</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCISemiPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCISemiPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCISemiPeriodDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5231</i>
	 */
	public static native int dAQmxResetCISemiPeriodDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5233</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCISemiPeriodDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCISemiPeriodDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCISemiPeriodDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5233</i>
	 */
	public static native int dAQmxGetCISemiPeriodDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5234</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCISemiPeriodDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCISemiPeriodDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCISemiPeriodDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5234</i>
	 */
	public static native int dAQmxSetCISemiPeriodDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5235</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCISemiPeriodDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCISemiPeriodDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCISemiPeriodDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5235</i>
	 */
	public static native int dAQmxResetCISemiPeriodDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5238</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCISemiPeriodStartingEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCISemiPeriodStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCISemiPeriodStartingEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5238</i>
	 */
	public static native int dAQmxGetCISemiPeriodStartingEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5239</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCISemiPeriodStartingEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCISemiPeriodStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCISemiPeriodStartingEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5239</i>
	 */
	public static native int dAQmxSetCISemiPeriodStartingEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5240</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCISemiPeriodStartingEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCISemiPeriodStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCISemiPeriodStartingEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5240</i>
	 */
	public static native int dAQmxResetCISemiPeriodStartingEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set FrequencyUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5243</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseFreqUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseFreqUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FrequencyUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5243</i>
	 */
	public static native int dAQmxGetCIPulseFreqUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5244</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseFreqUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseFreqUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5244</i>
	 */
	public static native int dAQmxSetCIPulseFreqUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5245</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseFreqUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseFreqUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5245</i>
	 */
	public static native int dAQmxResetCIPulseFreqUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5247</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseFreqTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIPulseFreqTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseFreqTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5247</i>
	 */
	public static native int dAQmxGetCIPulseFreqTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5248</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseFreqTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIPulseFreqTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseFreqTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5248</i>
	 */
	public static native int dAQmxSetCIPulseFreqTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5249</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseFreqTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseFreqTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseFreqTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5249</i>
	 */
	public static native int dAQmxResetCIPulseFreqTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5252</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseFreqTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseFreqTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseFreqTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5252</i>
	 */
	public static native int dAQmxGetCIPulseFreqTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5253</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseFreqTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseFreqTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseFreqTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5253</i>
	 */
	public static native int dAQmxSetCIPulseFreqTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5254</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseFreqTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseFreqTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseFreqTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5254</i>
	 */
	public static native int dAQmxResetCIPulseFreqTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5257</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseFreqLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseFreqLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseFreqLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5257</i>
	 */
	public static native int dAQmxGetCIPulseFreqLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5258</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseFreqLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseFreqLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseFreqLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5258</i>
	 */
	public static native int dAQmxSetCIPulseFreqLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5259</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseFreqLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseFreqLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseFreqLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5259</i>
	 */
	public static native int dAQmxResetCIPulseFreqLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5261</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseFreqDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIPulseFreqDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseFreqDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5261</i>
	 */
	public static native int dAQmxGetCIPulseFreqDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5262</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseFreqDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIPulseFreqDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseFreqDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5262</i>
	 */
	public static native int dAQmxSetCIPulseFreqDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5263</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseFreqDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseFreqDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseFreqDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5263</i>
	 */
	public static native int dAQmxResetCIPulseFreqDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5265</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIPulseFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseFreqDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5265</i>
	 */
	public static native int dAQmxGetCIPulseFreqDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5266</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIPulseFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseFreqDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5266</i>
	 */
	public static native int dAQmxSetCIPulseFreqDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5267</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseFreqDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5267</i>
	 */
	public static native int dAQmxResetCIPulseFreqDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5269</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIPulseFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseFreqDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5269</i>
	 */
	public static native int dAQmxGetCIPulseFreqDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5270</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIPulseFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseFreqDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5270</i>
	 */
	public static native int dAQmxSetCIPulseFreqDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5271</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseFreqDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5271</i>
	 */
	public static native int dAQmxResetCIPulseFreqDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5273</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseFreqDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIPulseFreqDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseFreqDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5273</i>
	 */
	public static native int dAQmxGetCIPulseFreqDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5274</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseFreqDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIPulseFreqDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseFreqDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5274</i>
	 */
	public static native int dAQmxSetCIPulseFreqDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5275</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseFreqDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseFreqDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseFreqDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5275</i>
	 */
	public static native int dAQmxResetCIPulseFreqDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5277</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseFreqDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIPulseFreqDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseFreqDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5277</i>
	 */
	public static native int dAQmxGetCIPulseFreqDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5278</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseFreqDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIPulseFreqDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseFreqDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5278</i>
	 */
	public static native int dAQmxSetCIPulseFreqDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5279</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseFreqDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseFreqDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseFreqDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5279</i>
	 */
	public static native int dAQmxResetCIPulseFreqDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqStartEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5282</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseFreqStartEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseFreqStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseFreqStartEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqStartEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5282</i>
	 */
	public static native int dAQmxGetCIPulseFreqStartEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqStartEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5283</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseFreqStartEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseFreqStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseFreqStartEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqStartEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5283</i>
	 */
	public static native int dAQmxSetCIPulseFreqStartEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqStartEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5284</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseFreqStartEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseFreqStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseFreqStartEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqStartEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5284</i>
	 */
	public static native int dAQmxResetCIPulseFreqStartEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5287</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTimeUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseTimeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTimeUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5287</i>
	 */
	public static native int dAQmxGetCIPulseTimeUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5288</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTimeUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseTimeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTimeUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5288</i>
	 */
	public static native int dAQmxSetCIPulseTimeUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5289</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTimeUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTimeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTimeUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5289</i>
	 */
	public static native int dAQmxResetCIPulseTimeUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5291</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTimeTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIPulseTimeTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTimeTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5291</i>
	 */
	public static native int dAQmxGetCIPulseTimeTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5292</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTimeTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIPulseTimeTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTimeTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5292</i>
	 */
	public static native int dAQmxSetCIPulseTimeTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5293</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTimeTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTimeTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTimeTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5293</i>
	 */
	public static native int dAQmxResetCIPulseTimeTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5296</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTimeTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseTimeTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTimeTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5296</i>
	 */
	public static native int dAQmxGetCIPulseTimeTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5297</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTimeTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseTimeTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTimeTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5297</i>
	 */
	public static native int dAQmxSetCIPulseTimeTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5298</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTimeTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTimeTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTimeTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5298</i>
	 */
	public static native int dAQmxResetCIPulseTimeTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5301</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTimeLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseTimeLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTimeLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5301</i>
	 */
	public static native int dAQmxGetCIPulseTimeLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5302</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTimeLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseTimeLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTimeLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5302</i>
	 */
	public static native int dAQmxSetCIPulseTimeLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5303</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTimeLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTimeLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTimeLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5303</i>
	 */
	public static native int dAQmxResetCIPulseTimeLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5305</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTimeDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIPulseTimeDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTimeDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5305</i>
	 */
	public static native int dAQmxGetCIPulseTimeDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5306</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTimeDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIPulseTimeDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTimeDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5306</i>
	 */
	public static native int dAQmxSetCIPulseTimeDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5307</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTimeDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTimeDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTimeDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5307</i>
	 */
	public static native int dAQmxResetCIPulseTimeDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5309</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTimeDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIPulseTimeDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTimeDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5309</i>
	 */
	public static native int dAQmxGetCIPulseTimeDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5310</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTimeDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIPulseTimeDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTimeDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5310</i>
	 */
	public static native int dAQmxSetCIPulseTimeDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5311</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTimeDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTimeDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTimeDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5311</i>
	 */
	public static native int dAQmxResetCIPulseTimeDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5313</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTimeDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIPulseTimeDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTimeDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5313</i>
	 */
	public static native int dAQmxGetCIPulseTimeDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5314</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTimeDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIPulseTimeDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTimeDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5314</i>
	 */
	public static native int dAQmxSetCIPulseTimeDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5315</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTimeDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTimeDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTimeDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5315</i>
	 */
	public static native int dAQmxResetCIPulseTimeDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5317</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTimeDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIPulseTimeDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTimeDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5317</i>
	 */
	public static native int dAQmxGetCIPulseTimeDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5318</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTimeDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIPulseTimeDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTimeDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5318</i>
	 */
	public static native int dAQmxSetCIPulseTimeDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5319</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTimeDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTimeDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTimeDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5319</i>
	 */
	public static native int dAQmxResetCIPulseTimeDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5321</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTimeDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIPulseTimeDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTimeDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5321</i>
	 */
	public static native int dAQmxGetCIPulseTimeDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5322</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTimeDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIPulseTimeDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTimeDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5322</i>
	 */
	public static native int dAQmxSetCIPulseTimeDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5323</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTimeDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTimeDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTimeDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5323</i>
	 */
	public static native int dAQmxResetCIPulseTimeDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeStartEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5326</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTimeStartEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseTimeStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTimeStartEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeStartEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5326</i>
	 */
	public static native int dAQmxGetCIPulseTimeStartEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeStartEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5327</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTimeStartEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseTimeStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTimeStartEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeStartEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5327</i>
	 */
	public static native int dAQmxSetCIPulseTimeStartEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeStartEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5328</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTimeStartEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTimeStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTimeStartEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeStartEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5328</i>
	 */
	public static native int dAQmxResetCIPulseTimeStartEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5330</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTicksTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIPulseTicksTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTicksTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5330</i>
	 */
	public static native int dAQmxGetCIPulseTicksTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5331</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTicksTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIPulseTicksTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTicksTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5331</i>
	 */
	public static native int dAQmxSetCIPulseTicksTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5332</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTicksTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTicksTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTicksTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5332</i>
	 */
	public static native int dAQmxResetCIPulseTicksTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5335</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTicksTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseTicksTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTicksTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5335</i>
	 */
	public static native int dAQmxGetCIPulseTicksTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5336</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTicksTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseTicksTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTicksTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5336</i>
	 */
	public static native int dAQmxSetCIPulseTicksTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5337</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTicksTermCfg(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTicksTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTicksTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5337</i>
	 */
	public static native int dAQmxResetCIPulseTicksTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5340</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTicksLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseTicksLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTicksLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5340</i>
	 */
	public static native int dAQmxGetCIPulseTicksLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5341</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTicksLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseTicksLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTicksLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5341</i>
	 */
	public static native int dAQmxSetCIPulseTicksLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5342</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTicksLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTicksLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTicksLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5342</i>
	 */
	public static native int dAQmxResetCIPulseTicksLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5344</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTicksDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIPulseTicksDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTicksDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5344</i>
	 */
	public static native int dAQmxGetCIPulseTicksDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5345</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTicksDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIPulseTicksDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTicksDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5345</i>
	 */
	public static native int dAQmxSetCIPulseTicksDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5346</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTicksDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTicksDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTicksDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5346</i>
	 */
	public static native int dAQmxResetCIPulseTicksDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5348</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTicksDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIPulseTicksDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTicksDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5348</i>
	 */
	public static native int dAQmxGetCIPulseTicksDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5349</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTicksDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIPulseTicksDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTicksDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5349</i>
	 */
	public static native int dAQmxSetCIPulseTicksDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5350</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTicksDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTicksDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTicksDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5350</i>
	 */
	public static native int dAQmxResetCIPulseTicksDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5352</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTicksDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCIPulseTicksDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTicksDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5352</i>
	 */
	public static native int dAQmxGetCIPulseTicksDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5353</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTicksDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCIPulseTicksDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTicksDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5353</i>
	 */
	public static native int dAQmxSetCIPulseTicksDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5354</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTicksDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTicksDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTicksDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5354</i>
	 */
	public static native int dAQmxResetCIPulseTicksDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5356</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTicksDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIPulseTicksDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTicksDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5356</i>
	 */
	public static native int dAQmxGetCIPulseTicksDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5357</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTicksDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIPulseTicksDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTicksDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5357</i>
	 */
	public static native int dAQmxSetCIPulseTicksDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5358</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTicksDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTicksDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTicksDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5358</i>
	 */
	public static native int dAQmxResetCIPulseTicksDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5360</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTicksDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIPulseTicksDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTicksDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5360</i>
	 */
	public static native int dAQmxGetCIPulseTicksDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5361</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTicksDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIPulseTicksDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTicksDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5361</i>
	 */
	public static native int dAQmxSetCIPulseTicksDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5362</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTicksDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTicksDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTicksDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5362</i>
	 */
	public static native int dAQmxResetCIPulseTicksDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksStartEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5365</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPulseTicksStartEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIPulseTicksStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPulseTicksStartEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksStartEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5365</i>
	 */
	public static native int dAQmxGetCIPulseTicksStartEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksStartEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5366</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPulseTicksStartEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIPulseTicksStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPulseTicksStartEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksStartEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5366</i>
	 */
	public static native int dAQmxSetCIPulseTicksStartEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksStartEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5367</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPulseTicksStartEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPulseTicksStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPulseTicksStartEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksStartEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5367</i>
	 */
	public static native int dAQmxResetCIPulseTicksStartEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5369</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICtrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCICtrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICtrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5369</i>
	 */
	public static native int dAQmxGetCICtrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5370</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICtrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCICtrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICtrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5370</i>
	 */
	public static native int dAQmxSetCICtrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5371</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICtrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICtrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICtrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5371</i>
	 */
	public static native int dAQmxResetCICtrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5373</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICtrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCICtrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICtrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5373</i>
	 */
	public static native int dAQmxGetCICtrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5374</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICtrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCICtrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICtrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5374</i>
	 */
	public static native int dAQmxSetCICtrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5375</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICtrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICtrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICtrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5375</i>
	 */
	public static native int dAQmxResetCICtrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5378</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICtrTimebaseActiveEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCICtrTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICtrTimebaseActiveEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5378</i>
	 */
	public static native int dAQmxGetCICtrTimebaseActiveEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5379</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICtrTimebaseActiveEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCICtrTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICtrTimebaseActiveEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5379</i>
	 */
	public static native int dAQmxSetCICtrTimebaseActiveEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5380</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICtrTimebaseActiveEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICtrTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICtrTimebaseActiveEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5380</i>
	 */
	public static native int dAQmxResetCICtrTimebaseActiveEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5382</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICtrTimebaseDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICtrTimebaseDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICtrTimebaseDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5382</i>
	 */
	public static native int dAQmxGetCICtrTimebaseDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5383</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICtrTimebaseDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICtrTimebaseDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICtrTimebaseDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5383</i>
	 */
	public static native int dAQmxSetCICtrTimebaseDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5384</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICtrTimebaseDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICtrTimebaseDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICtrTimebaseDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5384</i>
	 */
	public static native int dAQmxResetCICtrTimebaseDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5386</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCICtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5386</i>
	 */
	public static native int dAQmxGetCICtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5387</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCICtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5387</i>
	 */
	public static native int dAQmxSetCICtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5388</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5388</i>
	 */
	public static native int dAQmxResetCICtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5390</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCICtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5390</i>
	 */
	public static native int dAQmxGetCICtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5391</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCICtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5391</i>
	 */
	public static native int dAQmxSetCICtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5392</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5392</i>
	 */
	public static native int dAQmxResetCICtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5394</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCICtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5394</i>
	 */
	public static native int dAQmxGetCICtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5395</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCICtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5395</i>
	 */
	public static native int dAQmxSetCICtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5396</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5396</i>
	 */
	public static native int dAQmxResetCICtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5398</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICtrTimebaseDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICtrTimebaseDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICtrTimebaseDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5398</i>
	 */
	public static native int dAQmxGetCICtrTimebaseDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5399</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICtrTimebaseDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICtrTimebaseDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICtrTimebaseDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5399</i>
	 */
	public static native int dAQmxSetCICtrTimebaseDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5400</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICtrTimebaseDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICtrTimebaseDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICtrTimebaseDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5400</i>
	 */
	public static native int dAQmxResetCICtrTimebaseDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_ThreshVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetCIThreshVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5402</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIThreshVoltage(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIThreshVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIThreshVoltage(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_ThreshVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetCIThreshVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5402</i>
	 */
	public static native int dAQmxGetCIThreshVoltage(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIThreshVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5403</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIThreshVoltage(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIThreshVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIThreshVoltage(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIThreshVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5403</i>
	 */
	public static native int dAQmxSetCIThreshVoltage(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIThreshVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5404</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIThreshVoltage(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIThreshVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIThreshVoltage(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIThreshVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5404</i>
	 */
	public static native int dAQmxResetCIThreshVoltage(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Count ***<br>
	 * Original signature : <code>int32 DAQmxGetCICount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5406</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Count ***<br>
	 * Original signature : <code>int32 DAQmxGetCICount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5406</i>
	 */
	public static native int dAQmxGetCICount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCIOutputState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5409</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIOutputState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIOutputState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIOutputState(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCIOutputState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5409</i>
	 */
	public static native int dAQmxGetCIOutputState(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TCReached ***<br>
	 * Original signature : <code>int32 DAQmxGetCITCReached(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5411</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCITCReached(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCITCReached(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCITCReached(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TCReached ***<br>
	 * Original signature : <code>int32 DAQmxGetCITCReached(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5411</i>
	 */
	public static native int dAQmxGetCITCReached(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebaseMasterTimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5413</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCICtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCICtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCICtrTimebaseMasterTimebaseDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebaseMasterTimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5413</i>
	 */
	public static native int dAQmxGetCICtrTimebaseMasterTimebaseDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5414</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCICtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCICtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCICtrTimebaseMasterTimebaseDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5414</i>
	 */
	public static native int dAQmxSetCICtrTimebaseMasterTimebaseDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseMasterTimebaseDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5415</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCICtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCICtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCICtrTimebaseMasterTimebaseDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseMasterTimebaseDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5415</i>
	 */
	public static native int dAQmxResetCICtrTimebaseMasterTimebaseDiv(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SampClkOverrunBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCISampClkOverrunBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5418</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCISampClkOverrunBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCISampClkOverrunBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCISampClkOverrunBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SampClkOverrunBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCISampClkOverrunBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5418</i>
	 */
	public static native int dAQmxGetCISampClkOverrunBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISampClkOverrunBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5419</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCISampClkOverrunBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCISampClkOverrunBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCISampClkOverrunBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISampClkOverrunBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5419</i>
	 */
	public static native int dAQmxSetCISampClkOverrunBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISampClkOverrunBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5420</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCISampClkOverrunBehavior(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCISampClkOverrunBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCISampClkOverrunBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISampClkOverrunBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5420</i>
	 */
	public static native int dAQmxResetCISampClkOverrunBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SampClkOverrunSentinelVal ***<br>
	 * Original signature : <code>int32 DAQmxGetCISampClkOverrunSentinelVal(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5422</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCISampClkOverrunSentinelVal(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCISampClkOverrunSentinelVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCISampClkOverrunSentinelVal(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_SampClkOverrunSentinelVal ***<br>
	 * Original signature : <code>int32 DAQmxGetCISampClkOverrunSentinelVal(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5422</i>
	 */
	public static native int dAQmxGetCISampClkOverrunSentinelVal(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISampClkOverrunSentinelVal(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5423</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCISampClkOverrunSentinelVal(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCISampClkOverrunSentinelVal(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCISampClkOverrunSentinelVal(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISampClkOverrunSentinelVal(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5423</i>
	 */
	public static native int dAQmxSetCISampClkOverrunSentinelVal(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISampClkOverrunSentinelVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5424</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCISampClkOverrunSentinelVal(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCISampClkOverrunSentinelVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCISampClkOverrunSentinelVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISampClkOverrunSentinelVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5424</i>
	 */
	public static native int dAQmxResetCISampClkOverrunSentinelVal(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetCIDataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5427</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIDataXferMech(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIDataXferMech(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetCIDataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5427</i>
	 */
	public static native int dAQmxGetCIDataXferMech(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5428</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIDataXferMech(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIDataXferMech(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5428</i>
	 */
	public static native int dAQmxSetCIDataXferMech(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5429</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIDataXferMech(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIDataXferMech(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5429</i>
	 */
	public static native int dAQmxResetCIDataXferMech(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetCIDataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5432</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIDataXferReqCond(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIDataXferReqCond(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetCIDataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5432</i>
	 */
	public static native int dAQmxGetCIDataXferReqCond(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5433</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIDataXferReqCond(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIDataXferReqCond(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5433</i>
	 */
	public static native int dAQmxSetCIDataXferReqCond(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5434</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIDataXferReqCond(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIDataXferReqCond(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5434</i>
	 */
	public static native int dAQmxResetCIDataXferReqCond(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetCIUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5436</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetCIUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5436</i>
	 */
	public static native int dAQmxGetCIUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5437</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5437</i>
	 */
	public static native int dAQmxSetCIUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5438</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIUsbXferReqSize(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIUsbXferReqSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5438</i>
	 */
	public static native int dAQmxResetCIUsbXferReqSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCIUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5440</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCIUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5440</i>
	 */
	public static native int dAQmxGetCIUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5441</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5441</i>
	 */
	public static native int dAQmxSetCIUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5442</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIUsbXferReqCount(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIUsbXferReqCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5442</i>
	 */
	public static native int dAQmxResetCIUsbXferReqCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5444</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIMemMapEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5444</i>
	 */
	public static native int dAQmxGetCIMemMapEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5445</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIMemMapEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5445</i>
	 */
	public static native int dAQmxSetCIMemMapEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5446</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIMemMapEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIMemMapEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5446</i>
	 */
	public static native int dAQmxResetCIMemMapEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_NumPossiblyInvalidSamps ***<br>
	 * Original signature : <code>int32 DAQmxGetCINumPossiblyInvalidSamps(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5448</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCINumPossiblyInvalidSamps(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCINumPossiblyInvalidSamps(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCINumPossiblyInvalidSamps(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_NumPossiblyInvalidSamps ***<br>
	 * Original signature : <code>int32 DAQmxGetCINumPossiblyInvalidSamps(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5448</i>
	 */
	public static native int dAQmxGetCINumPossiblyInvalidSamps(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_DupCountPrevent ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDupCountPrevent(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5450</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIDupCountPrevent(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIDupCountPrevent(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIDupCountPrevent(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_DupCountPrevent ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDupCountPrevent(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5450</i>
	 */
	public static native int dAQmxGetCIDupCountPrevent(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDupCountPrevent(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5451</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIDupCountPrevent(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIDupCountPrevent(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIDupCountPrevent(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDupCountPrevent(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5451</i>
	 */
	public static native int dAQmxSetCIDupCountPrevent(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDupCountPrevent(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5452</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIDupCountPrevent(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIDupCountPrevent(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIDupCountPrevent(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDupCountPrevent(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5452</i>
	 */
	public static native int dAQmxResetCIDupCountPrevent(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Prescaler ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPrescaler(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5454</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIPrescaler(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCIPrescaler(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIPrescaler(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Prescaler ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPrescaler(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5454</i>
	 */
	public static native int dAQmxGetCIPrescaler(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPrescaler(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5455</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIPrescaler(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCIPrescaler(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIPrescaler(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPrescaler(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5455</i>
	 */
	public static native int dAQmxSetCIPrescaler(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPrescaler(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5456</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIPrescaler(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIPrescaler(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIPrescaler(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPrescaler(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5456</i>
	 */
	public static native int dAQmxResetCIPrescaler(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_MaxMeasPeriod ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMaxMeasPeriod(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5458</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCIMaxMeasPeriod(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCIMaxMeasPeriod(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCIMaxMeasPeriod(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_MaxMeasPeriod ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMaxMeasPeriod(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5458</i>
	 */
	public static native int dAQmxGetCIMaxMeasPeriod(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMaxMeasPeriod(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5459</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCIMaxMeasPeriod(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCIMaxMeasPeriod(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCIMaxMeasPeriod(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMaxMeasPeriod(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5459</i>
	 */
	public static native int dAQmxSetCIMaxMeasPeriod(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMaxMeasPeriod(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5460</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCIMaxMeasPeriod(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCIMaxMeasPeriod(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCIMaxMeasPeriod(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMaxMeasPeriod(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5460</i>
	 */
	public static native int dAQmxResetCIMaxMeasPeriod(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set COOutputType<br>
	 * Original signature : <code>int32 DAQmxGetCOOutputType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5463</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOOutputType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCOOutputType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOOutputType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set COOutputType<br>
	 * Original signature : <code>int32 DAQmxGetCOOutputType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5463</i>
	 */
	public static native int dAQmxGetCOOutputType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseIdleState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5466</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseIdleState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCOPulseIdleState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseIdleState(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseIdleState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5466</i>
	 */
	public static native int dAQmxGetCOPulseIdleState(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseIdleState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5467</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPulseIdleState(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCOPulseIdleState(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPulseIdleState(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseIdleState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5467</i>
	 */
	public static native int dAQmxSetCOPulseIdleState(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseIdleState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5468</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPulseIdleState(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPulseIdleState(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPulseIdleState(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseIdleState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5468</i>
	 */
	public static native int dAQmxResetCOPulseIdleState(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5470</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseTerm(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCOPulseTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5470</i>
	 */
	public static native int dAQmxGetCOPulseTerm(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5471</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPulseTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCOPulseTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPulseTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5471</i>
	 */
	public static native int dAQmxSetCOPulseTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5472</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPulseTerm(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPulseTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPulseTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5472</i>
	 */
	public static native int dAQmxResetCOPulseTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTimeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5475</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseTimeUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCOPulseTimeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseTimeUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTimeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5475</i>
	 */
	public static native int dAQmxGetCOPulseTimeUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTimeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5476</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPulseTimeUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCOPulseTimeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPulseTimeUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTimeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5476</i>
	 */
	public static native int dAQmxSetCOPulseTimeUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTimeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5477</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPulseTimeUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPulseTimeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPulseTimeUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTimeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5477</i>
	 */
	public static native int dAQmxResetCOPulseTimeUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_HighTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseHighTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5479</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseHighTime(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCOPulseHighTime(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseHighTime(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_HighTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseHighTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5479</i>
	 */
	public static native int dAQmxGetCOPulseHighTime(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseHighTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5480</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPulseHighTime(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCOPulseHighTime(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPulseHighTime(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseHighTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5480</i>
	 */
	public static native int dAQmxSetCOPulseHighTime(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseHighTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5481</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPulseHighTime(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPulseHighTime(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPulseHighTime(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseHighTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5481</i>
	 */
	public static native int dAQmxResetCOPulseHighTime(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_LowTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseLowTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5483</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseLowTime(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCOPulseLowTime(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseLowTime(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_LowTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseLowTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5483</i>
	 */
	public static native int dAQmxGetCOPulseLowTime(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseLowTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5484</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPulseLowTime(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCOPulseLowTime(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPulseLowTime(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseLowTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5484</i>
	 */
	public static native int dAQmxSetCOPulseLowTime(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseLowTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5485</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPulseLowTime(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPulseLowTime(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPulseLowTime(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseLowTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5485</i>
	 */
	public static native int dAQmxResetCOPulseLowTime(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Time_InitialDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTimeInitialDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5487</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseTimeInitialDelay(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCOPulseTimeInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseTimeInitialDelay(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Time_InitialDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTimeInitialDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5487</i>
	 */
	public static native int dAQmxGetCOPulseTimeInitialDelay(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTimeInitialDelay(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5488</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPulseTimeInitialDelay(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCOPulseTimeInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPulseTimeInitialDelay(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTimeInitialDelay(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5488</i>
	 */
	public static native int dAQmxSetCOPulseTimeInitialDelay(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTimeInitialDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5489</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPulseTimeInitialDelay(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPulseTimeInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPulseTimeInitialDelay(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTimeInitialDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5489</i>
	 */
	public static native int dAQmxResetCOPulseTimeInitialDelay(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_DutyCyc ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseDutyCyc(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5491</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseDutyCyc(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCOPulseDutyCyc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseDutyCyc(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_DutyCyc ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseDutyCyc(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5491</i>
	 */
	public static native int dAQmxGetCOPulseDutyCyc(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseDutyCyc(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5492</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPulseDutyCyc(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCOPulseDutyCyc(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPulseDutyCyc(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseDutyCyc(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5492</i>
	 */
	public static native int dAQmxSetCOPulseDutyCyc(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseDutyCyc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5493</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPulseDutyCyc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPulseDutyCyc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPulseDutyCyc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseDutyCyc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5493</i>
	 */
	public static native int dAQmxResetCOPulseDutyCyc(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set FrequencyUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5496</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseFreqUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCOPulseFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseFreqUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FrequencyUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5496</i>
	 */
	public static native int dAQmxGetCOPulseFreqUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5497</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPulseFreqUnits(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCOPulseFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPulseFreqUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5497</i>
	 */
	public static native int dAQmxSetCOPulseFreqUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5498</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPulseFreqUnits(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPulseFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPulseFreqUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5498</i>
	 */
	public static native int dAQmxResetCOPulseFreqUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Freq ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5500</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCOPulseFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Freq ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5500</i>
	 */
	public static native int dAQmxGetCOPulseFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5501</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPulseFreq(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCOPulseFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPulseFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5501</i>
	 */
	public static native int dAQmxSetCOPulseFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5502</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPulseFreq(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPulseFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPulseFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5502</i>
	 */
	public static native int dAQmxResetCOPulseFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Freq_InitialDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseFreqInitialDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5504</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseFreqInitialDelay(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCOPulseFreqInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseFreqInitialDelay(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Freq_InitialDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseFreqInitialDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5504</i>
	 */
	public static native int dAQmxGetCOPulseFreqInitialDelay(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseFreqInitialDelay(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5505</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPulseFreqInitialDelay(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCOPulseFreqInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPulseFreqInitialDelay(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseFreqInitialDelay(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5505</i>
	 */
	public static native int dAQmxSetCOPulseFreqInitialDelay(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseFreqInitialDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5506</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPulseFreqInitialDelay(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPulseFreqInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPulseFreqInitialDelay(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseFreqInitialDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5506</i>
	 */
	public static native int dAQmxResetCOPulseFreqInitialDelay(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_HighTicks ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseHighTicks(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5508</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseHighTicks(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOPulseHighTicks(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseHighTicks(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_HighTicks ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseHighTicks(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5508</i>
	 */
	public static native int dAQmxGetCOPulseHighTicks(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseHighTicks(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5509</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPulseHighTicks(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCOPulseHighTicks(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPulseHighTicks(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseHighTicks(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5509</i>
	 */
	public static native int dAQmxSetCOPulseHighTicks(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseHighTicks(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5510</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPulseHighTicks(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPulseHighTicks(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPulseHighTicks(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseHighTicks(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5510</i>
	 */
	public static native int dAQmxResetCOPulseHighTicks(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_LowTicks ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseLowTicks(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5512</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseLowTicks(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOPulseLowTicks(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseLowTicks(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_LowTicks ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseLowTicks(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5512</i>
	 */
	public static native int dAQmxGetCOPulseLowTicks(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseLowTicks(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5513</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPulseLowTicks(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCOPulseLowTicks(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPulseLowTicks(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseLowTicks(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5513</i>
	 */
	public static native int dAQmxSetCOPulseLowTicks(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseLowTicks(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5514</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPulseLowTicks(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPulseLowTicks(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPulseLowTicks(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseLowTicks(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5514</i>
	 */
	public static native int dAQmxResetCOPulseLowTicks(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Ticks_InitialDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTicksInitialDelay(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5516</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseTicksInitialDelay(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOPulseTicksInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseTicksInitialDelay(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Ticks_InitialDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTicksInitialDelay(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5516</i>
	 */
	public static native int dAQmxGetCOPulseTicksInitialDelay(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTicksInitialDelay(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5517</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPulseTicksInitialDelay(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCOPulseTicksInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPulseTicksInitialDelay(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTicksInitialDelay(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5517</i>
	 */
	public static native int dAQmxSetCOPulseTicksInitialDelay(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTicksInitialDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5518</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPulseTicksInitialDelay(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPulseTicksInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPulseTicksInitialDelay(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTicksInitialDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5518</i>
	 */
	public static native int dAQmxResetCOPulseTicksInitialDelay(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5520</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOCtrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCOCtrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOCtrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5520</i>
	 */
	public static native int dAQmxGetCOCtrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5521</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOCtrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCOCtrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOCtrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5521</i>
	 */
	public static native int dAQmxSetCOCtrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5522</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOCtrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOCtrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOCtrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5522</i>
	 */
	public static native int dAQmxResetCOCtrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5524</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOCtrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCOCtrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOCtrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5524</i>
	 */
	public static native int dAQmxGetCOCtrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5525</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOCtrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCOCtrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOCtrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5525</i>
	 */
	public static native int dAQmxSetCOCtrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5526</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOCtrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOCtrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOCtrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5526</i>
	 */
	public static native int dAQmxResetCOCtrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5529</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOCtrTimebaseActiveEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCOCtrTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOCtrTimebaseActiveEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5529</i>
	 */
	public static native int dAQmxGetCOCtrTimebaseActiveEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5530</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOCtrTimebaseActiveEdge(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCOCtrTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOCtrTimebaseActiveEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5530</i>
	 */
	public static native int dAQmxSetCOCtrTimebaseActiveEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5531</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOCtrTimebaseActiveEdge(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOCtrTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOCtrTimebaseActiveEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5531</i>
	 */
	public static native int dAQmxResetCOCtrTimebaseActiveEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5533</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOCtrTimebaseDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOCtrTimebaseDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOCtrTimebaseDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5533</i>
	 */
	public static native int dAQmxGetCOCtrTimebaseDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5534</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOCtrTimebaseDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCOCtrTimebaseDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOCtrTimebaseDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5534</i>
	 */
	public static native int dAQmxSetCOCtrTimebaseDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5535</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOCtrTimebaseDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOCtrTimebaseDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOCtrTimebaseDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5535</i>
	 */
	public static native int dAQmxResetCOCtrTimebaseDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5537</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOCtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCOCtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOCtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5537</i>
	 */
	public static native int dAQmxGetCOCtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5538</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOCtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCOCtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOCtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5538</i>
	 */
	public static native int dAQmxSetCOCtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5539</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOCtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOCtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOCtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5539</i>
	 */
	public static native int dAQmxResetCOCtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5541</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOCtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetCOCtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOCtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5541</i>
	 */
	public static native int dAQmxGetCOCtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5542</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOCtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetCOCtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOCtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5542</i>
	 */
	public static native int dAQmxSetCOCtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5543</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOCtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOCtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOCtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5543</i>
	 */
	public static native int dAQmxResetCOCtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5545</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOCtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetCOCtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOCtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5545</i>
	 */
	public static native int dAQmxGetCOCtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5546</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOCtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetCOCtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOCtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5546</i>
	 */
	public static native int dAQmxSetCOCtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5547</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOCtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOCtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOCtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5547</i>
	 */
	public static native int dAQmxResetCOCtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5549</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOCtrTimebaseDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOCtrTimebaseDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOCtrTimebaseDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5549</i>
	 */
	public static native int dAQmxGetCOCtrTimebaseDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5550</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOCtrTimebaseDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCOCtrTimebaseDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOCtrTimebaseDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5550</i>
	 */
	public static native int dAQmxSetCOCtrTimebaseDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5551</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOCtrTimebaseDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOCtrTimebaseDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOCtrTimebaseDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5551</i>
	 */
	public static native int dAQmxResetCOCtrTimebaseDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Count ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5553</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Count ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5553</i>
	 */
	public static native int dAQmxGetCOCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCOOutputState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5556</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOOutputState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCOOutputState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOOutputState(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCOOutputState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5556</i>
	 */
	public static native int dAQmxGetCOOutputState(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_CO_AutoIncrCnt ***<br>
	 * Original signature : <code>int32 DAQmxGetCOAutoIncrCnt(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5558</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOAutoIncrCnt(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOAutoIncrCnt(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOAutoIncrCnt(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_AutoIncrCnt ***<br>
	 * Original signature : <code>int32 DAQmxGetCOAutoIncrCnt(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5558</i>
	 */
	public static native int dAQmxGetCOAutoIncrCnt(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOAutoIncrCnt(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5559</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOAutoIncrCnt(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCOAutoIncrCnt(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOAutoIncrCnt(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOAutoIncrCnt(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5559</i>
	 */
	public static native int dAQmxSetCOAutoIncrCnt(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOAutoIncrCnt(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5560</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOAutoIncrCnt(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOAutoIncrCnt(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOAutoIncrCnt(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOAutoIncrCnt(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5560</i>
	 */
	public static native int dAQmxResetCOAutoIncrCnt(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebaseMasterTimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5562</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOCtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOCtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOCtrTimebaseMasterTimebaseDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebaseMasterTimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5562</i>
	 */
	public static native int dAQmxGetCOCtrTimebaseMasterTimebaseDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5563</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOCtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCOCtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOCtrTimebaseMasterTimebaseDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5563</i>
	 */
	public static native int dAQmxSetCOCtrTimebaseMasterTimebaseDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseMasterTimebaseDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5564</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOCtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOCtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOCtrTimebaseMasterTimebaseDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseMasterTimebaseDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5564</i>
	 */
	public static native int dAQmxResetCOCtrTimebaseMasterTimebaseDiv(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_PulseDone ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseDone(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5566</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPulseDone(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOPulseDone(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPulseDone(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_PulseDone ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseDone(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5566</i>
	 */
	public static native int dAQmxGetCOPulseDone(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_EnableInitialDelayOnRetrigger ***<br>
	 * Original signature : <code>int32 DAQmxGetCOEnableInitialDelayOnRetrigger(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5568</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOEnableInitialDelayOnRetrigger(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOEnableInitialDelayOnRetrigger(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOEnableInitialDelayOnRetrigger(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_EnableInitialDelayOnRetrigger ***<br>
	 * Original signature : <code>int32 DAQmxGetCOEnableInitialDelayOnRetrigger(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5568</i>
	 */
	public static native int dAQmxGetCOEnableInitialDelayOnRetrigger(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOEnableInitialDelayOnRetrigger(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5569</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOEnableInitialDelayOnRetrigger(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCOEnableInitialDelayOnRetrigger(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOEnableInitialDelayOnRetrigger(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOEnableInitialDelayOnRetrigger(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5569</i>
	 */
	public static native int dAQmxSetCOEnableInitialDelayOnRetrigger(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOEnableInitialDelayOnRetrigger(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5570</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOEnableInitialDelayOnRetrigger(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOEnableInitialDelayOnRetrigger(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOEnableInitialDelayOnRetrigger(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOEnableInitialDelayOnRetrigger(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5570</i>
	 */
	public static native int dAQmxResetCOEnableInitialDelayOnRetrigger(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ConstrainedGenMode<br>
	 * Original signature : <code>int32 DAQmxGetCOConstrainedGenMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5573</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOConstrainedGenMode(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCOConstrainedGenMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOConstrainedGenMode(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ConstrainedGenMode<br>
	 * Original signature : <code>int32 DAQmxGetCOConstrainedGenMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5573</i>
	 */
	public static native int dAQmxGetCOConstrainedGenMode(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOConstrainedGenMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5574</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOConstrainedGenMode(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCOConstrainedGenMode(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOConstrainedGenMode(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOConstrainedGenMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5574</i>
	 */
	public static native int dAQmxSetCOConstrainedGenMode(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOConstrainedGenMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5575</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOConstrainedGenMode(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOConstrainedGenMode(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOConstrainedGenMode(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOConstrainedGenMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5575</i>
	 */
	public static native int dAQmxResetCOConstrainedGenMode(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_UseOnlyOnBrdMem ***<br>
	 * Original signature : <code>int32 DAQmxGetCOUseOnlyOnBrdMem(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5577</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_UseOnlyOnBrdMem ***<br>
	 * Original signature : <code>int32 DAQmxGetCOUseOnlyOnBrdMem(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5577</i>
	 */
	public static native int dAQmxGetCOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOUseOnlyOnBrdMem(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5578</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOUseOnlyOnBrdMem(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5578</i>
	 */
	public static native int dAQmxSetCOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOUseOnlyOnBrdMem(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5579</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOUseOnlyOnBrdMem(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5579</i>
	 */
	public static native int dAQmxResetCOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetCODataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5582</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCODataXferMech(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCODataXferMech(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetCODataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5582</i>
	 */
	public static native int dAQmxGetCODataXferMech(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCODataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5583</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCODataXferMech(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCODataXferMech(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCODataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5583</i>
	 */
	public static native int dAQmxSetCODataXferMech(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCODataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5584</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCODataXferMech(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCODataXferMech(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCODataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5584</i>
	 */
	public static native int dAQmxResetCODataXferMech(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set OutputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetCODataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5587</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCODataXferReqCond(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetCODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCODataXferReqCond(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set OutputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetCODataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5587</i>
	 */
	public static native int dAQmxGetCODataXferReqCond(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCODataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5588</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCODataXferReqCond(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetCODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCODataXferReqCond(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCODataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5588</i>
	 */
	public static native int dAQmxSetCODataXferReqCond(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCODataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5589</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCODataXferReqCond(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCODataXferReqCond(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCODataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5589</i>
	 */
	public static native int dAQmxResetCODataXferReqCond(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetCOUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5591</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetCOUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5591</i>
	 */
	public static native int dAQmxGetCOUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5592</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5592</i>
	 */
	public static native int dAQmxSetCOUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5593</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOUsbXferReqSize(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOUsbXferReqSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5593</i>
	 */
	public static native int dAQmxResetCOUsbXferReqSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCOUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5595</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCOUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5595</i>
	 */
	public static native int dAQmxGetCOUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5596</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5596</i>
	 */
	public static native int dAQmxSetCOUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5597</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOUsbXferReqCount(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOUsbXferReqCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5597</i>
	 */
	public static native int dAQmxResetCOUsbXferReqCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCOMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5599</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOMemMapEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCOMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5599</i>
	 */
	public static native int dAQmxGetCOMemMapEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5600</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOMemMapEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5600</i>
	 */
	public static native int dAQmxSetCOMemMapEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5601</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOMemMapEnable(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOMemMapEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5601</i>
	 */
	public static native int dAQmxResetCOMemMapEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Prescaler ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPrescaler(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5603</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCOPrescaler(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCOPrescaler(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCOPrescaler(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Prescaler ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPrescaler(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5603</i>
	 */
	public static native int dAQmxGetCOPrescaler(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPrescaler(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5604</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetCOPrescaler(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetCOPrescaler(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetCOPrescaler(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPrescaler(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5604</i>
	 */
	public static native int dAQmxSetCOPrescaler(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPrescaler(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5605</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetCOPrescaler(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetCOPrescaler(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetCOPrescaler(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPrescaler(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5605</i>
	 */
	public static native int dAQmxResetCOPrescaler(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_RdyForNewVal ***<br>
	 * Original signature : <code>int32 DAQmxGetCORdyForNewVal(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5607</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCORdyForNewVal(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCORdyForNewVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCORdyForNewVal(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_RdyForNewVal ***<br>
	 * Original signature : <code>int32 DAQmxGetCORdyForNewVal(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5607</i>
	 */
	public static native int dAQmxGetCORdyForNewVal(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Uses value set ChannelType<br>
	 * Original signature : <code>int32 DAQmxGetChanType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5610</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetChanType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetChanType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetChanType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ChannelType<br>
	 * Original signature : <code>int32 DAQmxGetChanType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5610</i>
	 */
	public static native int dAQmxGetChanType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChanName ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5612</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanName(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetPhysicalChanName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanName(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChanName ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5612</i>
	 */
	public static native int dAQmxGetPhysicalChanName(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetPhysicalChanName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5613</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetPhysicalChanName(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetPhysicalChanName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetPhysicalChanName(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetPhysicalChanName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5613</i>
	 */
	public static native int dAQmxSetPhysicalChanName(Pointer taskHandle, byte channel[], String data);
	/**
	 * *** Set/Get functions for DAQmx_ChanDescr ***<br>
	 * Original signature : <code>int32 DAQmxGetChanDescr(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5615</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetChanDescr(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetChanDescr(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetChanDescr(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_ChanDescr ***<br>
	 * Original signature : <code>int32 DAQmxGetChanDescr(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5615</i>
	 */
	public static native int dAQmxGetChanDescr(Pointer taskHandle, byte channel[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetChanDescr(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5616</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetChanDescr(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetChanDescr(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetChanDescr(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetChanDescr(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5616</i>
	 */
	public static native int dAQmxSetChanDescr(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetChanDescr(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5617</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetChanDescr(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetChanDescr(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetChanDescr(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetChanDescr(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5617</i>
	 */
	public static native int dAQmxResetChanDescr(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_ChanIsGlobal ***<br>
	 * Original signature : <code>int32 DAQmxGetChanIsGlobal(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5619</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetChanIsGlobal(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetChanIsGlobal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetChanIsGlobal(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_ChanIsGlobal ***<br>
	 * Original signature : <code>int32 DAQmxGetChanIsGlobal(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5619</i>
	 */
	public static native int dAQmxGetChanIsGlobal(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AIConvClk_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIConvClkOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5623</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedAIConvClkOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedAIConvClkOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedAIConvClkOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AIConvClk_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIConvClkOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5623</i>
	 */
	public static native int dAQmxGetExportedAIConvClkOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAIConvClkOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5624</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedAIConvClkOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedAIConvClkOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedAIConvClkOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAIConvClkOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5624</i>
	 */
	public static native int dAQmxSetExportedAIConvClkOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAIConvClkOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5625</i>
	 */
	public static native int dAQmxResetExportedAIConvClkOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIConvClkPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5628</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedAIConvClkPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedAIConvClkPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedAIConvClkPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIConvClkPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5628</i>
	 */
	public static native int dAQmxGetExportedAIConvClkPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_10MHzRefClk_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExported10MHzRefClkOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5630</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExported10MHzRefClkOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExported10MHzRefClkOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExported10MHzRefClkOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_10MHzRefClk_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExported10MHzRefClkOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5630</i>
	 */
	public static native int dAQmxGetExported10MHzRefClkOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExported10MHzRefClkOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5631</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExported10MHzRefClkOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExported10MHzRefClkOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExported10MHzRefClkOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExported10MHzRefClkOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5631</i>
	 */
	public static native int dAQmxSetExported10MHzRefClkOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExported10MHzRefClkOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5632</i>
	 */
	public static native int dAQmxResetExported10MHzRefClkOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_20MHzTimebase_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExported20MHzTimebaseOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5634</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExported20MHzTimebaseOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExported20MHzTimebaseOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExported20MHzTimebaseOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_20MHzTimebase_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExported20MHzTimebaseOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5634</i>
	 */
	public static native int dAQmxGetExported20MHzTimebaseOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExported20MHzTimebaseOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5635</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExported20MHzTimebaseOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExported20MHzTimebaseOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExported20MHzTimebaseOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExported20MHzTimebaseOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5635</i>
	 */
	public static native int dAQmxSetExported20MHzTimebaseOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExported20MHzTimebaseOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5636</i>
	 */
	public static native int dAQmxResetExported20MHzTimebaseOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set ExportActions3<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkOutputBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5639</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedSampClkOutputBehavior(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedSampClkOutputBehavior(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedSampClkOutputBehavior(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set ExportActions3<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkOutputBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5639</i>
	 */
	public static native int dAQmxGetExportedSampClkOutputBehavior(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkOutputBehavior(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5640</i>
	 */
	public static native int dAQmxSetExportedSampClkOutputBehavior(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSampClkOutputBehavior(TaskHandle)</code><br>
	 * <i>native declaration : line 5641</i>
	 */
	public static native int dAQmxResetExportedSampClkOutputBehavior(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SampClk_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5643</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedSampClkOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedSampClkOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedSampClkOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SampClk_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5643</i>
	 */
	public static native int dAQmxGetExportedSampClkOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5644</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedSampClkOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedSampClkOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedSampClkOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5644</i>
	 */
	public static native int dAQmxSetExportedSampClkOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSampClkOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5645</i>
	 */
	public static native int dAQmxResetExportedSampClkOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SampClk_DelayOffset ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkDelayOffset(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5647</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedSampClkDelayOffset(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetExportedSampClkDelayOffset(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedSampClkDelayOffset(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SampClk_DelayOffset ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkDelayOffset(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5647</i>
	 */
	public static native int dAQmxGetExportedSampClkDelayOffset(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkDelayOffset(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5648</i>
	 */
	public static native int dAQmxSetExportedSampClkDelayOffset(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSampClkDelayOffset(TaskHandle)</code><br>
	 * <i>native declaration : line 5649</i>
	 */
	public static native int dAQmxResetExportedSampClkDelayOffset(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5652</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedSampClkPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedSampClkPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedSampClkPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5652</i>
	 */
	public static native int dAQmxGetExportedSampClkPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5653</i>
	 */
	public static native int dAQmxSetExportedSampClkPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSampClkPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5654</i>
	 */
	public static native int dAQmxResetExportedSampClkPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SampClkTimebase_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkTimebaseOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5656</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedSampClkTimebaseOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SampClkTimebase_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkTimebaseOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5656</i>
	 */
	public static native int dAQmxGetExportedSampClkTimebaseOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkTimebaseOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5657</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedSampClkTimebaseOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkTimebaseOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5657</i>
	 */
	public static native int dAQmxSetExportedSampClkTimebaseOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSampClkTimebaseOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5658</i>
	 */
	public static native int dAQmxResetExportedSampClkTimebaseOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_DividedSampClkTimebase_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedDividedSampClkTimebaseOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5660</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedDividedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedDividedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedDividedSampClkTimebaseOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_DividedSampClkTimebase_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedDividedSampClkTimebaseOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5660</i>
	 */
	public static native int dAQmxGetExportedDividedSampClkTimebaseOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedDividedSampClkTimebaseOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5661</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedDividedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedDividedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedDividedSampClkTimebaseOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedDividedSampClkTimebaseOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5661</i>
	 */
	public static native int dAQmxSetExportedDividedSampClkTimebaseOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedDividedSampClkTimebaseOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5662</i>
	 */
	public static native int dAQmxResetExportedDividedSampClkTimebaseOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5664</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedAdvTrigOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedAdvTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedAdvTrigOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5664</i>
	 */
	public static native int dAQmxGetExportedAdvTrigOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5665</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedAdvTrigOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedAdvTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedAdvTrigOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5665</i>
	 */
	public static native int dAQmxSetExportedAdvTrigOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvTrigOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5666</i>
	 */
	public static native int dAQmxResetExportedAdvTrigOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5669</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedAdvTrigPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedAdvTrigPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedAdvTrigPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5669</i>
	 */
	public static native int dAQmxGetExportedAdvTrigPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Uses value set DigitalWidthUnits3<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigPulseWidthUnits(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5672</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedAdvTrigPulseWidthUnits(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedAdvTrigPulseWidthUnits(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedAdvTrigPulseWidthUnits(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set DigitalWidthUnits3<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigPulseWidthUnits(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5672</i>
	 */
	public static native int dAQmxGetExportedAdvTrigPulseWidthUnits(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvTrigPulseWidthUnits(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5673</i>
	 */
	public static native int dAQmxSetExportedAdvTrigPulseWidthUnits(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvTrigPulseWidthUnits(TaskHandle)</code><br>
	 * <i>native declaration : line 5674</i>
	 */
	public static native int dAQmxResetExportedAdvTrigPulseWidthUnits(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvTrig_Pulse_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5676</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedAdvTrigPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetExportedAdvTrigPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedAdvTrigPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvTrig_Pulse_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5676</i>
	 */
	public static native int dAQmxGetExportedAdvTrigPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvTrigPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5677</i>
	 */
	public static native int dAQmxSetExportedAdvTrigPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvTrigPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 5678</i>
	 */
	public static native int dAQmxResetExportedAdvTrigPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_PauseTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedPauseTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5680</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedPauseTrigOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedPauseTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedPauseTrigOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_PauseTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedPauseTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5680</i>
	 */
	public static native int dAQmxGetExportedPauseTrigOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedPauseTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5681</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedPauseTrigOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedPauseTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedPauseTrigOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedPauseTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5681</i>
	 */
	public static native int dAQmxSetExportedPauseTrigOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedPauseTrigOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5682</i>
	 */
	public static native int dAQmxResetExportedPauseTrigOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedPauseTrigLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5685</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedPauseTrigLvlActiveLvl(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedPauseTrigLvlActiveLvl(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedPauseTrigLvlActiveLvl(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedPauseTrigLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5685</i>
	 */
	public static native int dAQmxGetExportedPauseTrigLvlActiveLvl(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedPauseTrigLvlActiveLvl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5686</i>
	 */
	public static native int dAQmxSetExportedPauseTrigLvlActiveLvl(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedPauseTrigLvlActiveLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 5687</i>
	 */
	public static native int dAQmxResetExportedPauseTrigLvlActiveLvl(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RefTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRefTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5689</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedRefTrigOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedRefTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedRefTrigOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RefTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRefTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5689</i>
	 */
	public static native int dAQmxGetExportedRefTrigOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRefTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5690</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedRefTrigOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedRefTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedRefTrigOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRefTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5690</i>
	 */
	public static native int dAQmxSetExportedRefTrigOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRefTrigOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5691</i>
	 */
	public static native int dAQmxResetExportedRefTrigOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedRefTrigPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5694</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedRefTrigPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedRefTrigPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedRefTrigPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedRefTrigPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5694</i>
	 */
	public static native int dAQmxGetExportedRefTrigPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRefTrigPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5695</i>
	 */
	public static native int dAQmxSetExportedRefTrigPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRefTrigPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5696</i>
	 */
	public static native int dAQmxResetExportedRefTrigPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_StartTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedStartTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5698</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedStartTrigOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedStartTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedStartTrigOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_StartTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedStartTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5698</i>
	 */
	public static native int dAQmxGetExportedStartTrigOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedStartTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5699</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedStartTrigOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedStartTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedStartTrigOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedStartTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5699</i>
	 */
	public static native int dAQmxSetExportedStartTrigOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedStartTrigOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5700</i>
	 */
	public static native int dAQmxResetExportedStartTrigOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedStartTrigPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5703</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedStartTrigPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedStartTrigPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedStartTrigPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedStartTrigPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5703</i>
	 */
	public static native int dAQmxGetExportedStartTrigPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedStartTrigPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5704</i>
	 */
	public static native int dAQmxSetExportedStartTrigPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedStartTrigPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5705</i>
	 */
	public static native int dAQmxResetExportedStartTrigPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvCmpltEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5707</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedAdvCmpltEventOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedAdvCmpltEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedAdvCmpltEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvCmpltEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5707</i>
	 */
	public static native int dAQmxGetExportedAdvCmpltEventOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvCmpltEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5708</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedAdvCmpltEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedAdvCmpltEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedAdvCmpltEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvCmpltEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5708</i>
	 */
	public static native int dAQmxSetExportedAdvCmpltEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvCmpltEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5709</i>
	 */
	public static native int dAQmxResetExportedAdvCmpltEventOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvCmpltEvent_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5711</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedAdvCmpltEventDelay(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetExportedAdvCmpltEventDelay(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedAdvCmpltEventDelay(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvCmpltEvent_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5711</i>
	 */
	public static native int dAQmxGetExportedAdvCmpltEventDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvCmpltEventDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5712</i>
	 */
	public static native int dAQmxSetExportedAdvCmpltEventDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvCmpltEventDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 5713</i>
	 */
	public static native int dAQmxResetExportedAdvCmpltEventDelay(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5716</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedAdvCmpltEventPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedAdvCmpltEventPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedAdvCmpltEventPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5716</i>
	 */
	public static native int dAQmxGetExportedAdvCmpltEventPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvCmpltEventPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5717</i>
	 */
	public static native int dAQmxSetExportedAdvCmpltEventPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvCmpltEventPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5718</i>
	 */
	public static native int dAQmxResetExportedAdvCmpltEventPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvCmpltEvent_Pulse_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5720</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedAdvCmpltEventPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetExportedAdvCmpltEventPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedAdvCmpltEventPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvCmpltEvent_Pulse_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5720</i>
	 */
	public static native int dAQmxGetExportedAdvCmpltEventPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvCmpltEventPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5721</i>
	 */
	public static native int dAQmxSetExportedAdvCmpltEventPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvCmpltEventPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 5722</i>
	 */
	public static native int dAQmxResetExportedAdvCmpltEventPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AIHoldCmpltEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIHoldCmpltEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5724</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedAIHoldCmpltEventOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedAIHoldCmpltEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedAIHoldCmpltEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AIHoldCmpltEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIHoldCmpltEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5724</i>
	 */
	public static native int dAQmxGetExportedAIHoldCmpltEventOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAIHoldCmpltEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5725</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedAIHoldCmpltEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedAIHoldCmpltEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedAIHoldCmpltEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAIHoldCmpltEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5725</i>
	 */
	public static native int dAQmxSetExportedAIHoldCmpltEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAIHoldCmpltEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5726</i>
	 */
	public static native int dAQmxResetExportedAIHoldCmpltEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIHoldCmpltEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5729</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedAIHoldCmpltEventPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedAIHoldCmpltEventPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedAIHoldCmpltEventPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIHoldCmpltEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5729</i>
	 */
	public static native int dAQmxGetExportedAIHoldCmpltEventPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAIHoldCmpltEventPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5730</i>
	 */
	public static native int dAQmxSetExportedAIHoldCmpltEventPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAIHoldCmpltEventPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5731</i>
	 */
	public static native int dAQmxResetExportedAIHoldCmpltEventPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_ChangeDetectEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedChangeDetectEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5733</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedChangeDetectEventOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedChangeDetectEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedChangeDetectEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_ChangeDetectEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedChangeDetectEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5733</i>
	 */
	public static native int dAQmxGetExportedChangeDetectEventOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedChangeDetectEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5734</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedChangeDetectEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedChangeDetectEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedChangeDetectEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedChangeDetectEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5734</i>
	 */
	public static native int dAQmxSetExportedChangeDetectEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedChangeDetectEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5735</i>
	 */
	public static native int dAQmxResetExportedChangeDetectEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedChangeDetectEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5738</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedChangeDetectEventPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedChangeDetectEventPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedChangeDetectEventPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedChangeDetectEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5738</i>
	 */
	public static native int dAQmxGetExportedChangeDetectEventPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedChangeDetectEventPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5739</i>
	 */
	public static native int dAQmxSetExportedChangeDetectEventPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedChangeDetectEventPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5740</i>
	 */
	public static native int dAQmxResetExportedChangeDetectEventPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_CtrOutEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5742</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedCtrOutEventOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedCtrOutEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedCtrOutEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_CtrOutEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5742</i>
	 */
	public static native int dAQmxGetExportedCtrOutEventOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedCtrOutEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5743</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedCtrOutEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedCtrOutEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedCtrOutEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedCtrOutEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5743</i>
	 */
	public static native int dAQmxSetExportedCtrOutEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedCtrOutEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5744</i>
	 */
	public static native int dAQmxResetExportedCtrOutEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set ExportActions2<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventOutputBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5747</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedCtrOutEventOutputBehavior(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedCtrOutEventOutputBehavior(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedCtrOutEventOutputBehavior(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set ExportActions2<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventOutputBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5747</i>
	 */
	public static native int dAQmxGetExportedCtrOutEventOutputBehavior(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedCtrOutEventOutputBehavior(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5748</i>
	 */
	public static native int dAQmxSetExportedCtrOutEventOutputBehavior(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedCtrOutEventOutputBehavior(TaskHandle)</code><br>
	 * <i>native declaration : line 5749</i>
	 */
	public static native int dAQmxResetExportedCtrOutEventOutputBehavior(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5752</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedCtrOutEventPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedCtrOutEventPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedCtrOutEventPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5752</i>
	 */
	public static native int dAQmxGetExportedCtrOutEventPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedCtrOutEventPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5753</i>
	 */
	public static native int dAQmxSetExportedCtrOutEventPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedCtrOutEventPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5754</i>
	 */
	public static native int dAQmxResetExportedCtrOutEventPulsePolarity(Pointer taskHandle);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventToggleIdleState(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5757</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedCtrOutEventToggleIdleState(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedCtrOutEventToggleIdleState(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedCtrOutEventToggleIdleState(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventToggleIdleState(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5757</i>
	 */
	public static native int dAQmxGetExportedCtrOutEventToggleIdleState(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedCtrOutEventToggleIdleState(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5758</i>
	 */
	public static native int dAQmxSetExportedCtrOutEventToggleIdleState(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedCtrOutEventToggleIdleState(TaskHandle)</code><br>
	 * <i>native declaration : line 5759</i>
	 */
	public static native int dAQmxResetExportedCtrOutEventToggleIdleState(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5761</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedHshkEventOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedHshkEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedHshkEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5761</i>
	 */
	public static native int dAQmxGetExportedHshkEventOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5762</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedHshkEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedHshkEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedHshkEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5762</i>
	 */
	public static native int dAQmxSetExportedHshkEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5763</i>
	 */
	public static native int dAQmxResetExportedHshkEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set ExportActions5<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventOutputBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5766</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedHshkEventOutputBehavior(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedHshkEventOutputBehavior(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedHshkEventOutputBehavior(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set ExportActions5<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventOutputBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5766</i>
	 */
	public static native int dAQmxGetExportedHshkEventOutputBehavior(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventOutputBehavior(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5767</i>
	 */
	public static native int dAQmxSetExportedHshkEventOutputBehavior(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventOutputBehavior(TaskHandle)</code><br>
	 * <i>native declaration : line 5768</i>
	 */
	public static native int dAQmxResetExportedHshkEventOutputBehavior(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5770</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedHshkEventDelay(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetExportedHshkEventDelay(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedHshkEventDelay(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5770</i>
	 */
	public static native int dAQmxGetExportedHshkEventDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5771</i>
	 */
	public static native int dAQmxSetExportedHshkEventDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 5772</i>
	 */
	public static native int dAQmxResetExportedHshkEventDelay(Pointer taskHandle);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventInterlockedAssertedLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5775</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedHshkEventInterlockedAssertedLvl(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedHshkEventInterlockedAssertedLvl(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedHshkEventInterlockedAssertedLvl(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventInterlockedAssertedLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5775</i>
	 */
	public static native int dAQmxGetExportedHshkEventInterlockedAssertedLvl(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventInterlockedAssertedLvl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5776</i>
	 */
	public static native int dAQmxSetExportedHshkEventInterlockedAssertedLvl(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventInterlockedAssertedLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 5777</i>
	 */
	public static native int dAQmxResetExportedHshkEventInterlockedAssertedLvl(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Interlocked_AssertOnStart ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventInterlockedAssertOnStart(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 5779</i>
	 */
	public static native int dAQmxGetExportedHshkEventInterlockedAssertOnStart(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventInterlockedAssertOnStart(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 5780</i>
	 */
	public static native int dAQmxSetExportedHshkEventInterlockedAssertOnStart(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventInterlockedAssertOnStart(TaskHandle)</code><br>
	 * <i>native declaration : line 5781</i>
	 */
	public static native int dAQmxResetExportedHshkEventInterlockedAssertOnStart(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Interlocked_DeassertDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventInterlockedDeassertDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5783</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedHshkEventInterlockedDeassertDelay(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetExportedHshkEventInterlockedDeassertDelay(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedHshkEventInterlockedDeassertDelay(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Interlocked_DeassertDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventInterlockedDeassertDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5783</i>
	 */
	public static native int dAQmxGetExportedHshkEventInterlockedDeassertDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventInterlockedDeassertDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5784</i>
	 */
	public static native int dAQmxSetExportedHshkEventInterlockedDeassertDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventInterlockedDeassertDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 5785</i>
	 */
	public static native int dAQmxResetExportedHshkEventInterlockedDeassertDelay(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5788</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedHshkEventPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedHshkEventPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedHshkEventPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5788</i>
	 */
	public static native int dAQmxGetExportedHshkEventPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5789</i>
	 */
	public static native int dAQmxSetExportedHshkEventPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5790</i>
	 */
	public static native int dAQmxResetExportedHshkEventPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Pulse_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5792</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedHshkEventPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetExportedHshkEventPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedHshkEventPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Pulse_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5792</i>
	 */
	public static native int dAQmxGetExportedHshkEventPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5793</i>
	 */
	public static native int dAQmxSetExportedHshkEventPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 5794</i>
	 */
	public static native int dAQmxResetExportedHshkEventPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RdyForXferEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5796</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedRdyForXferEventOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedRdyForXferEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedRdyForXferEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RdyForXferEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5796</i>
	 */
	public static native int dAQmxGetExportedRdyForXferEventOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForXferEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5797</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedRdyForXferEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedRdyForXferEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedRdyForXferEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForXferEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5797</i>
	 */
	public static native int dAQmxSetExportedRdyForXferEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRdyForXferEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5798</i>
	 */
	public static native int dAQmxResetExportedRdyForXferEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5801</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedRdyForXferEventLvlActiveLvl(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedRdyForXferEventLvlActiveLvl(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedRdyForXferEventLvlActiveLvl(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5801</i>
	 */
	public static native int dAQmxGetExportedRdyForXferEventLvlActiveLvl(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForXferEventLvlActiveLvl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5802</i>
	 */
	public static native int dAQmxSetExportedRdyForXferEventLvlActiveLvl(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRdyForXferEventLvlActiveLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 5803</i>
	 */
	public static native int dAQmxResetExportedRdyForXferEventLvlActiveLvl(Pointer taskHandle);
	/**
	 * Uses value set DeassertCondition<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventDeassertCond(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5806</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedRdyForXferEventDeassertCond(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedRdyForXferEventDeassertCond(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedRdyForXferEventDeassertCond(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set DeassertCondition<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventDeassertCond(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5806</i>
	 */
	public static native int dAQmxGetExportedRdyForXferEventDeassertCond(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForXferEventDeassertCond(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5807</i>
	 */
	public static native int dAQmxSetExportedRdyForXferEventDeassertCond(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRdyForXferEventDeassertCond(TaskHandle)</code><br>
	 * <i>native declaration : line 5808</i>
	 */
	public static native int dAQmxResetExportedRdyForXferEventDeassertCond(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RdyForXferEvent_DeassertCondCustomThreshold ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventDeassertCondCustomThreshold(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 5810</i>
	 */
	public static native int dAQmxGetExportedRdyForXferEventDeassertCondCustomThreshold(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForXferEventDeassertCondCustomThreshold(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 5811</i>
	 */
	public static native int dAQmxSetExportedRdyForXferEventDeassertCondCustomThreshold(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRdyForXferEventDeassertCondCustomThreshold(TaskHandle)</code><br>
	 * <i>native declaration : line 5812</i>
	 */
	public static native int dAQmxResetExportedRdyForXferEventDeassertCondCustomThreshold(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_DataActiveEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedDataActiveEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5814</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedDataActiveEventOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedDataActiveEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedDataActiveEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_DataActiveEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedDataActiveEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5814</i>
	 */
	public static native int dAQmxGetExportedDataActiveEventOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedDataActiveEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5815</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedDataActiveEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedDataActiveEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedDataActiveEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedDataActiveEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5815</i>
	 */
	public static native int dAQmxSetExportedDataActiveEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedDataActiveEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5816</i>
	 */
	public static native int dAQmxResetExportedDataActiveEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedDataActiveEventLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5819</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedDataActiveEventLvlActiveLvl(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedDataActiveEventLvlActiveLvl(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedDataActiveEventLvlActiveLvl(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedDataActiveEventLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5819</i>
	 */
	public static native int dAQmxGetExportedDataActiveEventLvlActiveLvl(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedDataActiveEventLvlActiveLvl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5820</i>
	 */
	public static native int dAQmxSetExportedDataActiveEventLvlActiveLvl(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedDataActiveEventLvlActiveLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 5821</i>
	 */
	public static native int dAQmxResetExportedDataActiveEventLvlActiveLvl(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RdyForStartEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForStartEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5823</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedRdyForStartEventOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedRdyForStartEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedRdyForStartEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RdyForStartEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForStartEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5823</i>
	 */
	public static native int dAQmxGetExportedRdyForStartEventOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForStartEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5824</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedRdyForStartEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedRdyForStartEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedRdyForStartEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForStartEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5824</i>
	 */
	public static native int dAQmxSetExportedRdyForStartEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRdyForStartEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5825</i>
	 */
	public static native int dAQmxResetExportedRdyForStartEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForStartEventLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5828</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedRdyForStartEventLvlActiveLvl(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetExportedRdyForStartEventLvlActiveLvl(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedRdyForStartEventLvlActiveLvl(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForStartEventLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5828</i>
	 */
	public static native int dAQmxGetExportedRdyForStartEventLvlActiveLvl(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForStartEventLvlActiveLvl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5829</i>
	 */
	public static native int dAQmxSetExportedRdyForStartEventLvlActiveLvl(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRdyForStartEventLvlActiveLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 5830</i>
	 */
	public static native int dAQmxResetExportedRdyForStartEventLvlActiveLvl(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SyncPulseEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSyncPulseEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5832</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedSyncPulseEventOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedSyncPulseEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedSyncPulseEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SyncPulseEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSyncPulseEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5832</i>
	 */
	public static native int dAQmxGetExportedSyncPulseEventOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSyncPulseEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5833</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedSyncPulseEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedSyncPulseEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedSyncPulseEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSyncPulseEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5833</i>
	 */
	public static native int dAQmxSetExportedSyncPulseEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSyncPulseEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5834</i>
	 */
	public static native int dAQmxResetExportedSyncPulseEventOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_WatchdogExpiredEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedWatchdogExpiredEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5836</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetExportedWatchdogExpiredEventOutputTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetExportedWatchdogExpiredEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetExportedWatchdogExpiredEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_WatchdogExpiredEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedWatchdogExpiredEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5836</i>
	 */
	public static native int dAQmxGetExportedWatchdogExpiredEventOutputTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedWatchdogExpiredEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5837</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetExportedWatchdogExpiredEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetExportedWatchdogExpiredEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetExportedWatchdogExpiredEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedWatchdogExpiredEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5837</i>
	 */
	public static native int dAQmxSetExportedWatchdogExpiredEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedWatchdogExpiredEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5838</i>
	 */
	public static native int dAQmxResetExportedWatchdogExpiredEventOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Dev_IsSimulated ***<br>
	 * Original signature : <code>int32 DAQmxGetDevIsSimulated(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5842</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevIsSimulated(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevIsSimulated(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevIsSimulated(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_IsSimulated ***<br>
	 * Original signature : <code>int32 DAQmxGetDevIsSimulated(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5842</i>
	 */
	public static native int dAQmxGetDevIsSimulated(byte device[], NativeLongByReference data);
	/**
	 * Uses value set ProductCategory<br>
	 * Original signature : <code>int32 DAQmxGetDevProductCategory(const char[], int32*)</code><br>
	 * <i>native declaration : line 5845</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevProductCategory(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDevProductCategory(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevProductCategory(Pointer device, IntByReference data);
	/**
	 * Uses value set ProductCategory<br>
	 * Original signature : <code>int32 DAQmxGetDevProductCategory(const char[], int32*)</code><br>
	 * <i>native declaration : line 5845</i>
	 */
	public static native int dAQmxGetDevProductCategory(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_ProductType ***<br>
	 * Original signature : <code>int32 DAQmxGetDevProductType(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5847</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevProductType(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevProductType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevProductType(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_ProductType ***<br>
	 * Original signature : <code>int32 DAQmxGetDevProductType(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5847</i>
	 */
	public static native int dAQmxGetDevProductType(byte device[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_ProductNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevProductNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5849</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevProductNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevProductNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevProductNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_ProductNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevProductNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5849</i>
	 */
	public static native int dAQmxGetDevProductNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_SerialNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevSerialNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5851</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevSerialNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevSerialNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevSerialNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_SerialNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevSerialNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5851</i>
	 */
	public static native int dAQmxGetDevSerialNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Accessory_ProductTypes ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAccessoryProductTypes(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5853</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAccessoryProductTypes(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAccessoryProductTypes(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAccessoryProductTypes(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Accessory_ProductTypes ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAccessoryProductTypes(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5853</i>
	 */
	public static native int dAQmxGetDevAccessoryProductTypes(byte device[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Accessory_ProductNums ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAccessoryProductNums(const char[], uInt32*, uInt32)</code><br>
	 * <i>native declaration : line 5855</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAccessoryProductNums(byte[], com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAccessoryProductNums(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAccessoryProductNums(Pointer device, NativeLongByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Accessory_ProductNums ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAccessoryProductNums(const char[], uInt32*, uInt32)</code><br>
	 * <i>native declaration : line 5855</i>
	 */
	public static native int dAQmxGetDevAccessoryProductNums(byte device[], NativeLongByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Accessory_SerialNums ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAccessorySerialNums(const char[], uInt32*, uInt32)</code><br>
	 * <i>native declaration : line 5857</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAccessorySerialNums(byte[], com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAccessorySerialNums(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAccessorySerialNums(Pointer device, NativeLongByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Accessory_SerialNums ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAccessorySerialNums(const char[], uInt32*, uInt32)</code><br>
	 * <i>native declaration : line 5857</i>
	 */
	public static native int dAQmxGetDevAccessorySerialNums(byte device[], NativeLongByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Carrier_SerialNum ***<br>
	 * Original signature : <code>int32 DAQmxGetCarrierSerialNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5859</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetCarrierSerialNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetCarrierSerialNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetCarrierSerialNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Carrier_SerialNum ***<br>
	 * Original signature : <code>int32 DAQmxGetCarrierSerialNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5859</i>
	 */
	public static native int dAQmxGetCarrierSerialNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Chassis_ModuleDevNames ***<br>
	 * Original signature : <code>int32 DAQmxGetDevChassisModuleDevNames(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5861</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevChassisModuleDevNames(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevChassisModuleDevNames(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevChassisModuleDevNames(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Chassis_ModuleDevNames ***<br>
	 * Original signature : <code>int32 DAQmxGetDevChassisModuleDevNames(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5861</i>
	 */
	public static native int dAQmxGetDevChassisModuleDevNames(byte device[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AnlgTrigSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAnlgTrigSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5863</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAnlgTrigSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevAnlgTrigSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAnlgTrigSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AnlgTrigSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAnlgTrigSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5863</i>
	 */
	public static native int dAQmxGetDevAnlgTrigSupported(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DigTrigSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDigTrigSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5865</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevDigTrigSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevDigTrigSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevDigTrigSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DigTrigSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDigTrigSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5865</i>
	 */
	public static native int dAQmxGetDevDigTrigSupported(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5867</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAIPhysicalChans(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAIPhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAIPhysicalChans(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5867</i>
	 */
	public static native int dAQmxGetDevAIPhysicalChans(byte device[], String data, NativeLong bufferSize);
	/**
	 * Uses value set AIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetDevAISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5870</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAISupportedMeasTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAISupportedMeasTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAISupportedMeasTypes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetDevAISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5870</i>
	 */
	public static native int dAQmxGetDevAISupportedMeasTypes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_MaxSingleChanRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIMaxSingleChanRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5872</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAIMaxSingleChanRate(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDevAIMaxSingleChanRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAIMaxSingleChanRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_MaxSingleChanRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIMaxSingleChanRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5872</i>
	 */
	public static native int dAQmxGetDevAIMaxSingleChanRate(byte device[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_MaxMultiChanRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIMaxMultiChanRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5874</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAIMaxMultiChanRate(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDevAIMaxMultiChanRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAIMaxMultiChanRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_MaxMultiChanRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIMaxMultiChanRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5874</i>
	 */
	public static native int dAQmxGetDevAIMaxMultiChanRate(byte device[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_MinRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIMinRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5876</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAIMinRate(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDevAIMinRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAIMinRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_MinRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIMinRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5876</i>
	 */
	public static native int dAQmxGetDevAIMinRate(byte device[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_SimultaneousSamplingSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAISimultaneousSamplingSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5878</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAISimultaneousSamplingSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevAISimultaneousSamplingSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAISimultaneousSamplingSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_SimultaneousSamplingSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAISimultaneousSamplingSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5878</i>
	 */
	public static native int dAQmxGetDevAISimultaneousSamplingSupported(byte device[], NativeLongByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevAISampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5881</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAISampModes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAISampModes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAISampModes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevAISampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5881</i>
	 */
	public static native int dAQmxGetDevAISampModes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevAITrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5884</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAITrigUsage(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDevAITrigUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAITrigUsage(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevAITrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5884</i>
	 */
	public static native int dAQmxGetDevAITrigUsage(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_VoltageRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIVoltageRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5886</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAIVoltageRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAIVoltageRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAIVoltageRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_VoltageRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIVoltageRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5886</i>
	 */
	public static native int dAQmxGetDevAIVoltageRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_VoltageIntExcitDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIVoltageIntExcitDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5888</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAIVoltageIntExcitDiscreteVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAIVoltageIntExcitDiscreteVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAIVoltageIntExcitDiscreteVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_VoltageIntExcitDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIVoltageIntExcitDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5888</i>
	 */
	public static native int dAQmxGetDevAIVoltageIntExcitDiscreteVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_VoltageIntExcitRangeVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIVoltageIntExcitRangeVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5890</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAIVoltageIntExcitRangeVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAIVoltageIntExcitRangeVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAIVoltageIntExcitRangeVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_VoltageIntExcitRangeVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIVoltageIntExcitRangeVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5890</i>
	 */
	public static native int dAQmxGetDevAIVoltageIntExcitRangeVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_CurrentRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAICurrentRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5892</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAICurrentRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAICurrentRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAICurrentRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_CurrentRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAICurrentRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5892</i>
	 */
	public static native int dAQmxGetDevAICurrentRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_CurrentIntExcitDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAICurrentIntExcitDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5894</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAICurrentIntExcitDiscreteVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAICurrentIntExcitDiscreteVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAICurrentIntExcitDiscreteVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_CurrentIntExcitDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAICurrentIntExcitDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5894</i>
	 */
	public static native int dAQmxGetDevAICurrentIntExcitDiscreteVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_BridgeRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIBridgeRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5896</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAIBridgeRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAIBridgeRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAIBridgeRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_BridgeRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIBridgeRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5896</i>
	 */
	public static native int dAQmxGetDevAIBridgeRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_ResistanceRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIResistanceRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5898</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAIResistanceRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAIResistanceRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAIResistanceRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_ResistanceRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIResistanceRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5898</i>
	 */
	public static native int dAQmxGetDevAIResistanceRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_FreqRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIFreqRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5900</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAIFreqRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAIFreqRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAIFreqRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_FreqRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIFreqRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5900</i>
	 */
	public static native int dAQmxGetDevAIFreqRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_Gains ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIGains(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5902</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAIGains(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAIGains(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAIGains(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_Gains ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIGains(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5902</i>
	 */
	public static native int dAQmxGetDevAIGains(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses bits from enum CouplingTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevAICouplings(const char[], int32*)</code><br>
	 * <i>native declaration : line 5905</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAICouplings(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDevAICouplings(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAICouplings(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum CouplingTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevAICouplings(const char[], int32*)</code><br>
	 * <i>native declaration : line 5905</i>
	 */
	public static native int dAQmxGetDevAICouplings(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_LowpassCutoffFreqDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAILowpassCutoffFreqDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5907</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAILowpassCutoffFreqDiscreteVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAILowpassCutoffFreqDiscreteVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAILowpassCutoffFreqDiscreteVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_LowpassCutoffFreqDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAILowpassCutoffFreqDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5907</i>
	 */
	public static native int dAQmxGetDevAILowpassCutoffFreqDiscreteVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_LowpassCutoffFreqRangeVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAILowpassCutoffFreqRangeVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5909</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAILowpassCutoffFreqRangeVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAILowpassCutoffFreqRangeVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAILowpassCutoffFreqRangeVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_LowpassCutoffFreqRangeVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAILowpassCutoffFreqRangeVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5909</i>
	 */
	public static native int dAQmxGetDevAILowpassCutoffFreqRangeVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses value set FilterType2<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5912</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIDigFltrTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIDigFltrTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIDigFltrTypes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set FilterType2<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5912</i>
	 */
	public static native int dAQmxGetAIDigFltrTypes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5914</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5914</i>
	 */
	public static native int dAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqRangeVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5916</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqRangeVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5916</i>
	 */
	public static native int dAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5918</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAOPhysicalChans(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAOPhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAOPhysicalChans(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5918</i>
	 */
	public static native int dAQmxGetDevAOPhysicalChans(byte device[], String data, NativeLong bufferSize);
	/**
	 * Uses value set AOOutputChannelType<br>
	 * Original signature : <code>int32 DAQmxGetDevAOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5921</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAOSupportedOutputTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAOSupportedOutputTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAOSupportedOutputTypes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AOOutputChannelType<br>
	 * Original signature : <code>int32 DAQmxGetDevAOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5921</i>
	 */
	public static native int dAQmxGetDevAOSupportedOutputTypes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOSampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5923</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAOSampClkSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevAOSampClkSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAOSampClkSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOSampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5923</i>
	 */
	public static native int dAQmxGetDevAOSampClkSupported(byte device[], NativeLongByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevAOSampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5926</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAOSampModes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAOSampModes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAOSampModes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevAOSampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5926</i>
	 */
	public static native int dAQmxGetDevAOSampModes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOMaxRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5928</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAOMaxRate(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDevAOMaxRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAOMaxRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOMaxRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5928</i>
	 */
	public static native int dAQmxGetDevAOMaxRate(byte device[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_MinRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOMinRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5930</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAOMinRate(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDevAOMinRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAOMinRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_MinRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOMinRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5930</i>
	 */
	public static native int dAQmxGetDevAOMinRate(byte device[], DoubleBuffer data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevAOTrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5933</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAOTrigUsage(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDevAOTrigUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAOTrigUsage(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevAOTrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5933</i>
	 */
	public static native int dAQmxGetDevAOTrigUsage(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_VoltageRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOVoltageRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5935</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAOVoltageRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAOVoltageRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAOVoltageRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_VoltageRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOVoltageRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5935</i>
	 */
	public static native int dAQmxGetDevAOVoltageRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_CurrentRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOCurrentRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5937</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAOCurrentRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAOCurrentRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAOCurrentRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_CurrentRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOCurrentRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5937</i>
	 */
	public static native int dAQmxGetDevAOCurrentRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_Gains ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOGains(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5939</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevAOGains(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevAOGains(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevAOGains(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_Gains ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOGains(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5939</i>
	 */
	public static native int dAQmxGetDevAOGains(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DI_Lines ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDILines(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5941</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevDILines(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevDILines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevDILines(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DI_Lines ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDILines(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5941</i>
	 */
	public static native int dAQmxGetDevDILines(byte device[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DI_Ports ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDIPorts(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5943</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevDIPorts(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevDIPorts(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevDIPorts(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DI_Ports ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDIPorts(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5943</i>
	 */
	public static native int dAQmxGetDevDIPorts(byte device[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DI_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDIMaxRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5945</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevDIMaxRate(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDevDIMaxRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevDIMaxRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DI_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDIMaxRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5945</i>
	 */
	public static native int dAQmxGetDevDIMaxRate(byte device[], DoubleBuffer data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevDITrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5948</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevDITrigUsage(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDevDITrigUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevDITrigUsage(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevDITrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5948</i>
	 */
	public static native int dAQmxGetDevDITrigUsage(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DO_Lines ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDOLines(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5950</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevDOLines(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevDOLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevDOLines(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DO_Lines ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDOLines(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5950</i>
	 */
	public static native int dAQmxGetDevDOLines(byte device[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DO_Ports ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDOPorts(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5952</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevDOPorts(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevDOPorts(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevDOPorts(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DO_Ports ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDOPorts(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5952</i>
	 */
	public static native int dAQmxGetDevDOPorts(byte device[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DO_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDOMaxRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5954</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevDOMaxRate(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDevDOMaxRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevDOMaxRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DO_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDOMaxRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5954</i>
	 */
	public static native int dAQmxGetDevDOMaxRate(byte device[], DoubleBuffer data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevDOTrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5957</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevDOTrigUsage(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDevDOTrigUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevDOTrigUsage(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevDOTrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5957</i>
	 */
	public static native int dAQmxGetDevDOTrigUsage(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCIPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5959</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCIPhysicalChans(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevCIPhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCIPhysicalChans(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCIPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5959</i>
	 */
	public static native int dAQmxGetDevCIPhysicalChans(byte device[], String data, NativeLong bufferSize);
	/**
	 * Uses value set CIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetDevCISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5962</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCISupportedMeasTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevCISupportedMeasTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCISupportedMeasTypes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set CIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetDevCISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5962</i>
	 */
	public static native int dAQmxGetDevCISupportedMeasTypes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevCITrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5965</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCITrigUsage(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDevCITrigUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCITrigUsage(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevCITrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5965</i>
	 */
	public static native int dAQmxGetDevCITrigUsage(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCISampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5967</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCISampClkSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevCISampClkSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCISampClkSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCISampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5967</i>
	 */
	public static native int dAQmxGetDevCISampClkSupported(byte device[], NativeLongByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevCISampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5970</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCISampModes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevCISampModes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCISampModes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevCISampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5970</i>
	 */
	public static native int dAQmxGetDevCISampModes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_MaxSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCIMaxSize(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5972</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCIMaxSize(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevCIMaxSize(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCIMaxSize(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_MaxSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCIMaxSize(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5972</i>
	 */
	public static native int dAQmxGetDevCIMaxSize(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_MaxTimebase ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCIMaxTimebase(const char[], float64*)</code><br>
	 * <i>native declaration : line 5974</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCIMaxTimebase(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDevCIMaxTimebase(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCIMaxTimebase(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_MaxTimebase ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCIMaxTimebase(const char[], float64*)</code><br>
	 * <i>native declaration : line 5974</i>
	 */
	public static native int dAQmxGetDevCIMaxTimebase(byte device[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5976</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCOPhysicalChans(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevCOPhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCOPhysicalChans(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5976</i>
	 */
	public static native int dAQmxGetDevCOPhysicalChans(byte device[], String data, NativeLong bufferSize);
	/**
	 * Uses value set COOutputType<br>
	 * Original signature : <code>int32 DAQmxGetDevCOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5979</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCOSupportedOutputTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevCOSupportedOutputTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCOSupportedOutputTypes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set COOutputType<br>
	 * Original signature : <code>int32 DAQmxGetDevCOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5979</i>
	 */
	public static native int dAQmxGetDevCOSupportedOutputTypes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOSampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5981</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCOSampClkSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevCOSampClkSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCOSampClkSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOSampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5981</i>
	 */
	public static native int dAQmxGetDevCOSampClkSupported(byte device[], NativeLongByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevCOSampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5984</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCOSampModes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevCOSampModes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCOSampModes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevCOSampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5984</i>
	 */
	public static native int dAQmxGetDevCOSampModes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevCOTrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5987</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCOTrigUsage(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDevCOTrigUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCOTrigUsage(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevCOTrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5987</i>
	 */
	public static native int dAQmxGetDevCOTrigUsage(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_MaxSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOMaxSize(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5989</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCOMaxSize(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevCOMaxSize(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCOMaxSize(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_MaxSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOMaxSize(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5989</i>
	 */
	public static native int dAQmxGetDevCOMaxSize(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_MaxTimebase ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOMaxTimebase(const char[], float64*)</code><br>
	 * <i>native declaration : line 5991</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCOMaxTimebase(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDevCOMaxTimebase(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCOMaxTimebase(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_MaxTimebase ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOMaxTimebase(const char[], float64*)</code><br>
	 * <i>native declaration : line 5991</i>
	 */
	public static native int dAQmxGetDevCOMaxTimebase(byte device[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TEDS_HWTEDSSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTEDSHWTEDSSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5993</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevTEDSHWTEDSSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevTEDSHWTEDSSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevTEDSHWTEDSSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TEDS_HWTEDSSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTEDSHWTEDSSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5993</i>
	 */
	public static native int dAQmxGetDevTEDSHWTEDSSupported(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_NumDMAChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevNumDMAChans(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5995</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevNumDMAChans(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevNumDMAChans(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevNumDMAChans(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_NumDMAChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevNumDMAChans(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5995</i>
	 */
	public static native int dAQmxGetDevNumDMAChans(byte device[], NativeLongByReference data);
	/**
	 * Uses value set BusType<br>
	 * Original signature : <code>int32 DAQmxGetDevBusType(const char[], int32*)</code><br>
	 * <i>native declaration : line 5998</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevBusType(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDevBusType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevBusType(Pointer device, IntByReference data);
	/**
	 * Uses value set BusType<br>
	 * Original signature : <code>int32 DAQmxGetDevBusType(const char[], int32*)</code><br>
	 * <i>native declaration : line 5998</i>
	 */
	public static native int dAQmxGetDevBusType(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PCI_BusNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPCIBusNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6000</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevPCIBusNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevPCIBusNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevPCIBusNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PCI_BusNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPCIBusNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6000</i>
	 */
	public static native int dAQmxGetDevPCIBusNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PCI_DevNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPCIDevNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6002</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevPCIDevNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevPCIDevNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevPCIDevNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PCI_DevNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPCIDevNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6002</i>
	 */
	public static native int dAQmxGetDevPCIDevNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PXI_ChassisNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPXIChassisNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6004</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevPXIChassisNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevPXIChassisNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevPXIChassisNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PXI_ChassisNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPXIChassisNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6004</i>
	 */
	public static native int dAQmxGetDevPXIChassisNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PXI_SlotNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPXISlotNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6006</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevPXISlotNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevPXISlotNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevPXISlotNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PXI_SlotNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPXISlotNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6006</i>
	 */
	public static native int dAQmxGetDevPXISlotNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CompactDAQ_ChassisDevName ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCompactDAQChassisDevName(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6008</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCompactDAQChassisDevName(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevCompactDAQChassisDevName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCompactDAQChassisDevName(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CompactDAQ_ChassisDevName ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCompactDAQChassisDevName(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6008</i>
	 */
	public static native int dAQmxGetDevCompactDAQChassisDevName(byte device[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CompactDAQ_SlotNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCompactDAQSlotNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6010</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevCompactDAQSlotNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetDevCompactDAQSlotNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevCompactDAQSlotNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CompactDAQ_SlotNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCompactDAQSlotNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6010</i>
	 */
	public static native int dAQmxGetDevCompactDAQSlotNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TCPIP_Hostname ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTCPIPHostname(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6012</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevTCPIPHostname(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevTCPIPHostname(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevTCPIPHostname(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TCPIP_Hostname ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTCPIPHostname(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6012</i>
	 */
	public static native int dAQmxGetDevTCPIPHostname(byte device[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TCPIP_EthernetIP ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTCPIPEthernetIP(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6014</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevTCPIPEthernetIP(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevTCPIPEthernetIP(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevTCPIPEthernetIP(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TCPIP_EthernetIP ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTCPIPEthernetIP(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6014</i>
	 */
	public static native int dAQmxGetDevTCPIPEthernetIP(byte device[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TCPIP_WirelessIP ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTCPIPWirelessIP(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6016</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevTCPIPWirelessIP(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevTCPIPWirelessIP(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevTCPIPWirelessIP(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TCPIP_WirelessIP ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTCPIPWirelessIP(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6016</i>
	 */
	public static native int dAQmxGetDevTCPIPWirelessIP(byte device[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Terminals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTerminals(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6018</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDevTerminals(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDevTerminals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDevTerminals(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Terminals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTerminals(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6018</i>
	 */
	public static native int dAQmxGetDevTerminals(byte device[], String data, NativeLong bufferSize);
	/**
	 * Uses value set ReadRelativeTo<br>
	 * Original signature : <code>int32 DAQmxGetReadRelativeTo(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6023</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadRelativeTo(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetReadRelativeTo(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadRelativeTo(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set ReadRelativeTo<br>
	 * Original signature : <code>int32 DAQmxGetReadRelativeTo(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6023</i>
	 */
	public static native int dAQmxGetReadRelativeTo(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadRelativeTo(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6024</i>
	 */
	public static native int dAQmxSetReadRelativeTo(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadRelativeTo(TaskHandle)</code><br>
	 * <i>native declaration : line 6025</i>
	 */
	public static native int dAQmxResetReadRelativeTo(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Read_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOffset(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6027</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadOffset(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetReadOffset(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadOffset(Pointer taskHandle, IntByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOffset(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6027</i>
	 */
	public static native int dAQmxGetReadOffset(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadOffset(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6028</i>
	 */
	public static native int dAQmxSetReadOffset(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadOffset(TaskHandle)</code><br>
	 * <i>native declaration : line 6029</i>
	 */
	public static native int dAQmxResetReadOffset(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Read_ChannelsToRead ***<br>
	 * Original signature : <code>int32 DAQmxGetReadChannelsToRead(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6031</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadChannelsToRead(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetReadChannelsToRead(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadChannelsToRead(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_ChannelsToRead ***<br>
	 * Original signature : <code>int32 DAQmxGetReadChannelsToRead(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6031</i>
	 */
	public static native int dAQmxGetReadChannelsToRead(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetReadChannelsToRead(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6032</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetReadChannelsToRead(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetReadChannelsToRead(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetReadChannelsToRead(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadChannelsToRead(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6032</i>
	 */
	public static native int dAQmxSetReadChannelsToRead(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadChannelsToRead(TaskHandle)</code><br>
	 * <i>native declaration : line 6033</i>
	 */
	public static native int dAQmxResetReadChannelsToRead(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Read_ReadAllAvailSamp ***<br>
	 * Original signature : <code>int32 DAQmxGetReadReadAllAvailSamp(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6035</i>
	 */
	public static native int dAQmxGetReadReadAllAvailSamp(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadReadAllAvailSamp(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6036</i>
	 */
	public static native int dAQmxSetReadReadAllAvailSamp(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadReadAllAvailSamp(TaskHandle)</code><br>
	 * <i>native declaration : line 6037</i>
	 */
	public static native int dAQmxResetReadReadAllAvailSamp(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Read_AutoStart ***<br>
	 * Original signature : <code>int32 DAQmxGetReadAutoStart(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6039</i>
	 */
	public static native int dAQmxGetReadAutoStart(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadAutoStart(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6040</i>
	 */
	public static native int dAQmxSetReadAutoStart(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadAutoStart(TaskHandle)</code><br>
	 * <i>native declaration : line 6041</i>
	 */
	public static native int dAQmxResetReadAutoStart(Pointer taskHandle);
	/**
	 * Uses value set OverwriteMode1<br>
	 * Original signature : <code>int32 DAQmxGetReadOverWrite(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6044</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadOverWrite(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetReadOverWrite(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadOverWrite(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set OverwriteMode1<br>
	 * Original signature : <code>int32 DAQmxGetReadOverWrite(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6044</i>
	 */
	public static native int dAQmxGetReadOverWrite(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadOverWrite(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6045</i>
	 */
	public static native int dAQmxSetReadOverWrite(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadOverWrite(TaskHandle)</code><br>
	 * <i>native declaration : line 6046</i>
	 */
	public static native int dAQmxResetReadOverWrite(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Logging_FilePath ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingFilePath(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6048</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetLoggingFilePath(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetLoggingFilePath(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetLoggingFilePath(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Logging_FilePath ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingFilePath(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6048</i>
	 */
	public static native int dAQmxGetLoggingFilePath(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingFilePath(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6049</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetLoggingFilePath(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetLoggingFilePath(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetLoggingFilePath(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingFilePath(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6049</i>
	 */
	public static native int dAQmxSetLoggingFilePath(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingFilePath(TaskHandle)</code><br>
	 * <i>native declaration : line 6050</i>
	 */
	public static native int dAQmxResetLoggingFilePath(Pointer taskHandle);
	/**
	 * Uses value set LoggingMode<br>
	 * Original signature : <code>int32 DAQmxGetLoggingMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6053</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetLoggingMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetLoggingMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetLoggingMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set LoggingMode<br>
	 * Original signature : <code>int32 DAQmxGetLoggingMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6053</i>
	 */
	public static native int dAQmxGetLoggingMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6054</i>
	 */
	public static native int dAQmxSetLoggingMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6055</i>
	 */
	public static native int dAQmxResetLoggingMode(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Logging_TDMS_GroupName ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingTDMSGroupName(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6057</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetLoggingTDMSGroupName(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetLoggingTDMSGroupName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetLoggingTDMSGroupName(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Logging_TDMS_GroupName ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingTDMSGroupName(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6057</i>
	 */
	public static native int dAQmxGetLoggingTDMSGroupName(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingTDMSGroupName(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6058</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetLoggingTDMSGroupName(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetLoggingTDMSGroupName(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetLoggingTDMSGroupName(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingTDMSGroupName(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6058</i>
	 */
	public static native int dAQmxSetLoggingTDMSGroupName(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingTDMSGroupName(TaskHandle)</code><br>
	 * <i>native declaration : line 6059</i>
	 */
	public static native int dAQmxResetLoggingTDMSGroupName(Pointer taskHandle);
	/**
	 * Uses value set LoggingOperation<br>
	 * Original signature : <code>int32 DAQmxGetLoggingTDMSOperation(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6062</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetLoggingTDMSOperation(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetLoggingTDMSOperation(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetLoggingTDMSOperation(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set LoggingOperation<br>
	 * Original signature : <code>int32 DAQmxGetLoggingTDMSOperation(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6062</i>
	 */
	public static native int dAQmxGetLoggingTDMSOperation(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingTDMSOperation(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6063</i>
	 */
	public static native int dAQmxSetLoggingTDMSOperation(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingTDMSOperation(TaskHandle)</code><br>
	 * <i>native declaration : line 6064</i>
	 */
	public static native int dAQmxResetLoggingTDMSOperation(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Logging_Pause ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingPause(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6066</i>
	 */
	public static native int dAQmxGetLoggingPause(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingPause(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6067</i>
	 */
	public static native int dAQmxSetLoggingPause(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingPause(TaskHandle)</code><br>
	 * <i>native declaration : line 6068</i>
	 */
	public static native int dAQmxResetLoggingPause(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Logging_SampsPerFile ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingSampsPerFile(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6070</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetLoggingSampsPerFile(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #dAQmxGetLoggingSampsPerFile(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetLoggingSampsPerFile(Pointer taskHandle, LongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Logging_SampsPerFile ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingSampsPerFile(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6070</i>
	 */
	public static native int dAQmxGetLoggingSampsPerFile(Pointer taskHandle, LongBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingSampsPerFile(TaskHandle, uInt64)</code><br>
	 * <i>native declaration : line 6071</i>
	 */
	public static native int dAQmxSetLoggingSampsPerFile(Pointer taskHandle, long data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingSampsPerFile(TaskHandle)</code><br>
	 * <i>native declaration : line 6072</i>
	 */
	public static native int dAQmxResetLoggingSampsPerFile(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Logging_FileWriteSize ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingFileWriteSize(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6074</i>
	 */
	public static native int dAQmxGetLoggingFileWriteSize(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingFileWriteSize(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6075</i>
	 */
	public static native int dAQmxSetLoggingFileWriteSize(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingFileWriteSize(TaskHandle)</code><br>
	 * <i>native declaration : line 6076</i>
	 */
	public static native int dAQmxResetLoggingFileWriteSize(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Logging_FilePreallocationSize ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingFilePreallocationSize(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6078</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetLoggingFilePreallocationSize(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #dAQmxGetLoggingFilePreallocationSize(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetLoggingFilePreallocationSize(Pointer taskHandle, LongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Logging_FilePreallocationSize ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingFilePreallocationSize(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6078</i>
	 */
	public static native int dAQmxGetLoggingFilePreallocationSize(Pointer taskHandle, LongBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingFilePreallocationSize(TaskHandle, uInt64)</code><br>
	 * <i>native declaration : line 6079</i>
	 */
	public static native int dAQmxSetLoggingFilePreallocationSize(Pointer taskHandle, long data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingFilePreallocationSize(TaskHandle)</code><br>
	 * <i>native declaration : line 6080</i>
	 */
	public static native int dAQmxResetLoggingFilePreallocationSize(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Read_CurrReadPos ***<br>
	 * Original signature : <code>int32 DAQmxGetReadCurrReadPos(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6082</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadCurrReadPos(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #dAQmxGetReadCurrReadPos(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadCurrReadPos(Pointer taskHandle, LongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_CurrReadPos ***<br>
	 * Original signature : <code>int32 DAQmxGetReadCurrReadPos(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6082</i>
	 */
	public static native int dAQmxGetReadCurrReadPos(Pointer taskHandle, LongBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Read_AvailSampPerChan ***<br>
	 * Original signature : <code>int32 DAQmxGetReadAvailSampPerChan(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6084</i>
	 */
	public static native int dAQmxGetReadAvailSampPerChan(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_TotalSampPerChanAcquired ***<br>
	 * Original signature : <code>int32 DAQmxGetReadTotalSampPerChanAcquired(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6086</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadTotalSampPerChanAcquired(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #dAQmxGetReadTotalSampPerChanAcquired(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadTotalSampPerChanAcquired(Pointer taskHandle, LongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_TotalSampPerChanAcquired ***<br>
	 * Original signature : <code>int32 DAQmxGetReadTotalSampPerChanAcquired(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6086</i>
	 */
	public static native int dAQmxGetReadTotalSampPerChanAcquired(Pointer taskHandle, LongBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Read_CommonModeRangeErrorChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadCommonModeRangeErrorChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6088</i>
	 */
	public static native int dAQmxGetReadCommonModeRangeErrorChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_CommonModeRangeErrorChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadCommonModeRangeErrorChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6090</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadCommonModeRangeErrorChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetReadCommonModeRangeErrorChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadCommonModeRangeErrorChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_CommonModeRangeErrorChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadCommonModeRangeErrorChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6090</i>
	 */
	public static native int dAQmxGetReadCommonModeRangeErrorChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_ExcitFaultChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadExcitFaultChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6092</i>
	 */
	public static native int dAQmxGetReadExcitFaultChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_ExcitFaultChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadExcitFaultChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6094</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadExcitFaultChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetReadExcitFaultChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadExcitFaultChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_ExcitFaultChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadExcitFaultChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6094</i>
	 */
	public static native int dAQmxGetReadExcitFaultChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OvercurrentChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOvercurrentChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6096</i>
	 */
	public static native int dAQmxGetReadOvercurrentChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_OvercurrentChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOvercurrentChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6098</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadOvercurrentChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetReadOvercurrentChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadOvercurrentChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OvercurrentChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOvercurrentChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6098</i>
	 */
	public static native int dAQmxGetReadOvercurrentChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OvertemperatureChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOvertemperatureChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6100</i>
	 */
	public static native int dAQmxGetReadOvertemperatureChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_OvertemperatureChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOvertemperatureChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6102</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadOvertemperatureChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetReadOvertemperatureChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadOvertemperatureChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OvertemperatureChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOvertemperatureChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6102</i>
	 */
	public static native int dAQmxGetReadOvertemperatureChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6104</i>
	 */
	public static native int dAQmxGetReadOpenChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6106</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadOpenChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetReadOpenChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadOpenChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6106</i>
	 */
	public static native int dAQmxGetReadOpenChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenChansDetails ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenChansDetails(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6108</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadOpenChansDetails(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetReadOpenChansDetails(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadOpenChansDetails(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenChansDetails ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenChansDetails(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6108</i>
	 */
	public static native int dAQmxGetReadOpenChansDetails(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenCurrentLoopChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenCurrentLoopChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6110</i>
	 */
	public static native int dAQmxGetReadOpenCurrentLoopChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenCurrentLoopChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenCurrentLoopChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6112</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadOpenCurrentLoopChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetReadOpenCurrentLoopChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadOpenCurrentLoopChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenCurrentLoopChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenCurrentLoopChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6112</i>
	 */
	public static native int dAQmxGetReadOpenCurrentLoopChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenThrmcplChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenThrmcplChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6114</i>
	 */
	public static native int dAQmxGetReadOpenThrmcplChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenThrmcplChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenThrmcplChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6116</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadOpenThrmcplChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetReadOpenThrmcplChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadOpenThrmcplChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenThrmcplChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenThrmcplChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6116</i>
	 */
	public static native int dAQmxGetReadOpenThrmcplChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OverloadedChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOverloadedChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6118</i>
	 */
	public static native int dAQmxGetReadOverloadedChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_OverloadedChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOverloadedChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6120</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadOverloadedChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetReadOverloadedChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadOverloadedChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OverloadedChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOverloadedChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6120</i>
	 */
	public static native int dAQmxGetReadOverloadedChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_AccessoryInsertionOrRemovalDetected ***<br>
	 * Original signature : <code>int32 DAQmxGetReadAccessoryInsertionOrRemovalDetected(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6122</i>
	 */
	public static native int dAQmxGetReadAccessoryInsertionOrRemovalDetected(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_DevsWithInsertedOrRemovedAccessories ***<br>
	 * Original signature : <code>int32 DAQmxGetReadDevsWithInsertedOrRemovedAccessories(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6124</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadDevsWithInsertedOrRemovedAccessories(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetReadDevsWithInsertedOrRemovedAccessories(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadDevsWithInsertedOrRemovedAccessories(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_DevsWithInsertedOrRemovedAccessories ***<br>
	 * Original signature : <code>int32 DAQmxGetReadDevsWithInsertedOrRemovedAccessories(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6124</i>
	 */
	public static native int dAQmxGetReadDevsWithInsertedOrRemovedAccessories(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_ChangeDetect_HasOverflowed ***<br>
	 * Original signature : <code>int32 DAQmxGetReadChangeDetectHasOverflowed(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6126</i>
	 */
	public static native int dAQmxGetReadChangeDetectHasOverflowed(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_RawDataWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetReadRawDataWidth(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6128</i>
	 */
	public static native int dAQmxGetReadRawDataWidth(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_NumChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadNumChans(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6130</i>
	 */
	public static native int dAQmxGetReadNumChans(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_DigitalLines_BytesPerChan ***<br>
	 * Original signature : <code>int32 DAQmxGetReadDigitalLinesBytesPerChan(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6132</i>
	 */
	public static native int dAQmxGetReadDigitalLinesBytesPerChan(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Uses value set WaitMode<br>
	 * Original signature : <code>int32 DAQmxGetReadWaitMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6135</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadWaitMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetReadWaitMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadWaitMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set WaitMode<br>
	 * Original signature : <code>int32 DAQmxGetReadWaitMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6135</i>
	 */
	public static native int dAQmxGetReadWaitMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadWaitMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6136</i>
	 */
	public static native int dAQmxSetReadWaitMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadWaitMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6137</i>
	 */
	public static native int dAQmxResetReadWaitMode(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Read_SleepTime ***<br>
	 * Original signature : <code>int32 DAQmxGetReadSleepTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6139</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetReadSleepTime(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetReadSleepTime(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetReadSleepTime(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_SleepTime ***<br>
	 * Original signature : <code>int32 DAQmxGetReadSleepTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6139</i>
	 */
	public static native int dAQmxGetReadSleepTime(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadSleepTime(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6140</i>
	 */
	public static native int dAQmxSetReadSleepTime(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadSleepTime(TaskHandle)</code><br>
	 * <i>native declaration : line 6141</i>
	 */
	public static native int dAQmxResetReadSleepTime(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RealTime_ConvLateErrorsToWarnings ***<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeConvLateErrorsToWarnings(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6145</i>
	 */
	public static native int dAQmxGetRealTimeConvLateErrorsToWarnings(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetRealTimeConvLateErrorsToWarnings(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6146</i>
	 */
	public static native int dAQmxSetRealTimeConvLateErrorsToWarnings(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetRealTimeConvLateErrorsToWarnings(TaskHandle)</code><br>
	 * <i>native declaration : line 6147</i>
	 */
	public static native int dAQmxResetRealTimeConvLateErrorsToWarnings(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RealTime_NumOfWarmupIters ***<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeNumOfWarmupIters(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6149</i>
	 */
	public static native int dAQmxGetRealTimeNumOfWarmupIters(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetRealTimeNumOfWarmupIters(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6150</i>
	 */
	public static native int dAQmxSetRealTimeNumOfWarmupIters(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetRealTimeNumOfWarmupIters(TaskHandle)</code><br>
	 * <i>native declaration : line 6151</i>
	 */
	public static native int dAQmxResetRealTimeNumOfWarmupIters(Pointer taskHandle);
	/**
	 * Uses value set WaitMode3<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeWaitForNextSampClkWaitMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6154</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetRealTimeWaitForNextSampClkWaitMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetRealTimeWaitForNextSampClkWaitMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetRealTimeWaitForNextSampClkWaitMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set WaitMode3<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeWaitForNextSampClkWaitMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6154</i>
	 */
	public static native int dAQmxGetRealTimeWaitForNextSampClkWaitMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetRealTimeWaitForNextSampClkWaitMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6155</i>
	 */
	public static native int dAQmxSetRealTimeWaitForNextSampClkWaitMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetRealTimeWaitForNextSampClkWaitMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6156</i>
	 */
	public static native int dAQmxResetRealTimeWaitForNextSampClkWaitMode(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RealTime_ReportMissedSamp ***<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeReportMissedSamp(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6158</i>
	 */
	public static native int dAQmxGetRealTimeReportMissedSamp(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetRealTimeReportMissedSamp(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6159</i>
	 */
	public static native int dAQmxSetRealTimeReportMissedSamp(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetRealTimeReportMissedSamp(TaskHandle)</code><br>
	 * <i>native declaration : line 6160</i>
	 */
	public static native int dAQmxResetRealTimeReportMissedSamp(Pointer taskHandle);
	/**
	 * Uses value set WaitMode4<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeWriteRecoveryMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6163</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetRealTimeWriteRecoveryMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetRealTimeWriteRecoveryMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetRealTimeWriteRecoveryMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set WaitMode4<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeWriteRecoveryMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6163</i>
	 */
	public static native int dAQmxGetRealTimeWriteRecoveryMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetRealTimeWriteRecoveryMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6164</i>
	 */
	public static native int dAQmxSetRealTimeWriteRecoveryMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetRealTimeWriteRecoveryMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6165</i>
	 */
	public static native int dAQmxResetRealTimeWriteRecoveryMode(Pointer taskHandle);
	/**
	 * Uses value set SwitchUsageTypes<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 6170</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanUsage(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetSwitchChanUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanUsage(Pointer switchChannelName, IntByReference data);
	/**
	 * Uses value set SwitchUsageTypes<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 6170</i>
	 */
	public static native int dAQmxGetSwitchChanUsage(byte switchChannelName[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchChanUsage(const char[], int32)</code><br>
	 * <i>native declaration : line 6171</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetSwitchChanUsage(byte[], int)} and {@link #dAQmxSetSwitchChanUsage(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetSwitchChanUsage(Pointer switchChannelName, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchChanUsage(const char[], int32)</code><br>
	 * <i>native declaration : line 6171</i>
	 */
	public static native int dAQmxSetSwitchChanUsage(byte switchChannelName[], int data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_AnlgBusSharingEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanAnlgBusSharingEnable(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6173</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanAnlgBusSharingEnable(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetSwitchChanAnlgBusSharingEnable(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanAnlgBusSharingEnable(Pointer switchChannelName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_AnlgBusSharingEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanAnlgBusSharingEnable(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6173</i>
	 */
	public static native int dAQmxGetSwitchChanAnlgBusSharingEnable(byte switchChannelName[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchChanAnlgBusSharingEnable(const char[], bool32)</code><br>
	 * <i>native declaration : line 6174</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetSwitchChanAnlgBusSharingEnable(byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetSwitchChanAnlgBusSharingEnable(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetSwitchChanAnlgBusSharingEnable(Pointer switchChannelName, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchChanAnlgBusSharingEnable(const char[], bool32)</code><br>
	 * <i>native declaration : line 6174</i>
	 */
	public static native int dAQmxSetSwitchChanAnlgBusSharingEnable(byte switchChannelName[], NativeLong data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACCarryCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACCarryCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6176</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanMaxACCarryCurrent(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchChanMaxACCarryCurrent(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanMaxACCarryCurrent(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACCarryCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACCarryCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6176</i>
	 */
	public static native int dAQmxGetSwitchChanMaxACCarryCurrent(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACSwitchCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACSwitchCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6178</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanMaxACSwitchCurrent(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchChanMaxACSwitchCurrent(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanMaxACSwitchCurrent(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACSwitchCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACSwitchCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6178</i>
	 */
	public static native int dAQmxGetSwitchChanMaxACSwitchCurrent(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACCarryPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACCarryPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6180</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanMaxACCarryPwr(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchChanMaxACCarryPwr(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanMaxACCarryPwr(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACCarryPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACCarryPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6180</i>
	 */
	public static native int dAQmxGetSwitchChanMaxACCarryPwr(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACSwitchPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACSwitchPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6182</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanMaxACSwitchPwr(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchChanMaxACSwitchPwr(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanMaxACSwitchPwr(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACSwitchPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACSwitchPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6182</i>
	 */
	public static native int dAQmxGetSwitchChanMaxACSwitchPwr(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCCarryCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCCarryCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6184</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanMaxDCCarryCurrent(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchChanMaxDCCarryCurrent(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanMaxDCCarryCurrent(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCCarryCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCCarryCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6184</i>
	 */
	public static native int dAQmxGetSwitchChanMaxDCCarryCurrent(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCSwitchCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCSwitchCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6186</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanMaxDCSwitchCurrent(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchChanMaxDCSwitchCurrent(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanMaxDCSwitchCurrent(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCSwitchCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCSwitchCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6186</i>
	 */
	public static native int dAQmxGetSwitchChanMaxDCSwitchCurrent(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCCarryPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCCarryPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6188</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanMaxDCCarryPwr(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchChanMaxDCCarryPwr(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanMaxDCCarryPwr(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCCarryPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCCarryPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6188</i>
	 */
	public static native int dAQmxGetSwitchChanMaxDCCarryPwr(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCSwitchPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCSwitchPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6190</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanMaxDCSwitchPwr(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchChanMaxDCSwitchPwr(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanMaxDCSwitchPwr(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCSwitchPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCSwitchPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6190</i>
	 */
	public static native int dAQmxGetSwitchChanMaxDCSwitchPwr(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACVoltage(const char[], float64*)</code><br>
	 * <i>native declaration : line 6192</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanMaxACVoltage(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchChanMaxACVoltage(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanMaxACVoltage(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACVoltage(const char[], float64*)</code><br>
	 * <i>native declaration : line 6192</i>
	 */
	public static native int dAQmxGetSwitchChanMaxACVoltage(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCVoltage(const char[], float64*)</code><br>
	 * <i>native declaration : line 6194</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanMaxDCVoltage(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchChanMaxDCVoltage(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanMaxDCVoltage(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCVoltage(const char[], float64*)</code><br>
	 * <i>native declaration : line 6194</i>
	 */
	public static native int dAQmxGetSwitchChanMaxDCVoltage(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_WireMode ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanWireMode(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6196</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanWireMode(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetSwitchChanWireMode(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanWireMode(Pointer switchChannelName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_WireMode ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanWireMode(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6196</i>
	 */
	public static native int dAQmxGetSwitchChanWireMode(byte switchChannelName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_Bandwidth ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanBandwidth(const char[], float64*)</code><br>
	 * <i>native declaration : line 6198</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanBandwidth(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchChanBandwidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanBandwidth(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_Bandwidth ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanBandwidth(const char[], float64*)</code><br>
	 * <i>native declaration : line 6198</i>
	 */
	public static native int dAQmxGetSwitchChanBandwidth(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_Impedance ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanImpedance(const char[], float64*)</code><br>
	 * <i>native declaration : line 6200</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchChanImpedance(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchChanImpedance(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchChanImpedance(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_Impedance ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanImpedance(const char[], float64*)</code><br>
	 * <i>native declaration : line 6200</i>
	 */
	public static native int dAQmxGetSwitchChanImpedance(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_SettlingTime ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevSettlingTime(const char[], float64*)</code><br>
	 * <i>native declaration : line 6204</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchDevSettlingTime(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchDevSettlingTime(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchDevSettlingTime(Pointer deviceName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_SettlingTime ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevSettlingTime(const char[], float64*)</code><br>
	 * <i>native declaration : line 6204</i>
	 */
	public static native int dAQmxGetSwitchDevSettlingTime(byte deviceName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDevSettlingTime(const char[], float64)</code><br>
	 * <i>native declaration : line 6205</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetSwitchDevSettlingTime(byte[], double)} and {@link #dAQmxSetSwitchDevSettlingTime(com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetSwitchDevSettlingTime(Pointer deviceName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDevSettlingTime(const char[], float64)</code><br>
	 * <i>native declaration : line 6205</i>
	 */
	public static native int dAQmxSetSwitchDevSettlingTime(byte deviceName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_AutoConnAnlgBus ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevAutoConnAnlgBus(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6207</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchDevAutoConnAnlgBus(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetSwitchDevAutoConnAnlgBus(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchDevAutoConnAnlgBus(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_AutoConnAnlgBus ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevAutoConnAnlgBus(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6207</i>
	 */
	public static native int dAQmxGetSwitchDevAutoConnAnlgBus(byte deviceName[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDevAutoConnAnlgBus(const char[], bool32)</code><br>
	 * <i>native declaration : line 6208</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetSwitchDevAutoConnAnlgBus(byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetSwitchDevAutoConnAnlgBus(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetSwitchDevAutoConnAnlgBus(Pointer deviceName, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDevAutoConnAnlgBus(const char[], bool32)</code><br>
	 * <i>native declaration : line 6208</i>
	 */
	public static native int dAQmxSetSwitchDevAutoConnAnlgBus(byte deviceName[], NativeLong data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_PwrDownLatchRelaysAfterSettling ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6210</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_PwrDownLatchRelaysAfterSettling ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6210</i>
	 */
	public static native int dAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling(byte deviceName[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling(const char[], bool32)</code><br>
	 * <i>native declaration : line 6211</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling(byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling(Pointer deviceName, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling(const char[], bool32)</code><br>
	 * <i>native declaration : line 6211</i>
	 */
	public static native int dAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling(byte deviceName[], NativeLong data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_Settled ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevSettled(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6213</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchDevSettled(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetSwitchDevSettled(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchDevSettled(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_Settled ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevSettled(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6213</i>
	 */
	public static native int dAQmxGetSwitchDevSettled(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_RelayList ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevRelayList(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6215</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchDevRelayList(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSwitchDevRelayList(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchDevRelayList(Pointer deviceName, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_RelayList ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevRelayList(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6215</i>
	 */
	public static native int dAQmxGetSwitchDevRelayList(byte deviceName[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumRelays ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumRelays(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6217</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchDevNumRelays(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetSwitchDevNumRelays(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchDevNumRelays(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumRelays ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumRelays(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6217</i>
	 */
	public static native int dAQmxGetSwitchDevNumRelays(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_SwitchChanList ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevSwitchChanList(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6219</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchDevSwitchChanList(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSwitchDevSwitchChanList(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchDevSwitchChanList(Pointer deviceName, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_SwitchChanList ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevSwitchChanList(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6219</i>
	 */
	public static native int dAQmxGetSwitchDevSwitchChanList(byte deviceName[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumSwitchChans ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumSwitchChans(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6221</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchDevNumSwitchChans(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetSwitchDevNumSwitchChans(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchDevNumSwitchChans(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumSwitchChans ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumSwitchChans(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6221</i>
	 */
	public static native int dAQmxGetSwitchDevNumSwitchChans(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumRows ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumRows(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6223</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchDevNumRows(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetSwitchDevNumRows(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchDevNumRows(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumRows ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumRows(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6223</i>
	 */
	public static native int dAQmxGetSwitchDevNumRows(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumColumns ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumColumns(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6225</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchDevNumColumns(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetSwitchDevNumColumns(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchDevNumColumns(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumColumns ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumColumns(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6225</i>
	 */
	public static native int dAQmxGetSwitchDevNumColumns(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_Topology ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevTopology(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6227</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchDevTopology(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSwitchDevTopology(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchDevTopology(Pointer deviceName, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_Topology ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevTopology(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6227</i>
	 */
	public static native int dAQmxGetSwitchDevTopology(byte deviceName[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_Temperature ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevTemperature(const char[], float64*)</code><br>
	 * <i>native declaration : line 6229</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchDevTemperature(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetSwitchDevTemperature(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchDevTemperature(Pointer deviceName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_Temperature ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevTemperature(const char[], float64*)</code><br>
	 * <i>native declaration : line 6229</i>
	 */
	public static native int dAQmxGetSwitchDevTemperature(byte deviceName[], DoubleBuffer data);
	/**
	 * Uses value set BreakMode<br>
	 * Original signature : <code>int32 DAQmxGetSwitchScanBreakMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6234</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchScanBreakMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetSwitchScanBreakMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchScanBreakMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set BreakMode<br>
	 * Original signature : <code>int32 DAQmxGetSwitchScanBreakMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6234</i>
	 */
	public static native int dAQmxGetSwitchScanBreakMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchScanBreakMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6235</i>
	 */
	public static native int dAQmxSetSwitchScanBreakMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSwitchScanBreakMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6236</i>
	 */
	public static native int dAQmxResetSwitchScanBreakMode(Pointer taskHandle);
	/**
	 * Uses value set SwitchScanRepeatMode<br>
	 * Original signature : <code>int32 DAQmxGetSwitchScanRepeatMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6239</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSwitchScanRepeatMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetSwitchScanRepeatMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSwitchScanRepeatMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set SwitchScanRepeatMode<br>
	 * Original signature : <code>int32 DAQmxGetSwitchScanRepeatMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6239</i>
	 */
	public static native int dAQmxGetSwitchScanRepeatMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchScanRepeatMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6240</i>
	 */
	public static native int dAQmxSetSwitchScanRepeatMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSwitchScanRepeatMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6241</i>
	 */
	public static native int dAQmxResetSwitchScanRepeatMode(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SwitchScan_WaitingForAdv ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchScanWaitingForAdv(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6243</i>
	 */
	public static native int dAQmxGetSwitchScanWaitingForAdv(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Descr ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleDescr(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6247</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScaleDescr(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetScaleDescr(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScaleDescr(Pointer scaleName, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Descr ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleDescr(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6247</i>
	 */
	public static native int dAQmxGetScaleDescr(byte scaleName[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleDescr(const char[], const char*)</code><br>
	 * <i>native declaration : line 6248</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScaleDescr(byte[], java.lang.String)} and {@link #dAQmxSetScaleDescr(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScaleDescr(Pointer scaleName, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleDescr(const char[], const char*)</code><br>
	 * <i>native declaration : line 6248</i>
	 */
	public static native int dAQmxSetScaleDescr(byte scaleName[], String data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_ScaledUnits ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleScaledUnits(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6250</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScaleScaledUnits(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetScaleScaledUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScaleScaledUnits(Pointer scaleName, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Scale_ScaledUnits ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleScaledUnits(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6250</i>
	 */
	public static native int dAQmxGetScaleScaledUnits(byte scaleName[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleScaledUnits(const char[], const char*)</code><br>
	 * <i>native declaration : line 6251</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScaleScaledUnits(byte[], java.lang.String)} and {@link #dAQmxSetScaleScaledUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScaleScaledUnits(Pointer scaleName, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleScaledUnits(const char[], const char*)</code><br>
	 * <i>native declaration : line 6251</i>
	 */
	public static native int dAQmxSetScaleScaledUnits(byte scaleName[], String data);
	/**
	 * Uses value set UnitsPreScaled<br>
	 * Original signature : <code>int32 DAQmxGetScalePreScaledUnits(const char[], int32*)</code><br>
	 * <i>native declaration : line 6254</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScalePreScaledUnits(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetScalePreScaledUnits(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScalePreScaledUnits(Pointer scaleName, IntByReference data);
	/**
	 * Uses value set UnitsPreScaled<br>
	 * Original signature : <code>int32 DAQmxGetScalePreScaledUnits(const char[], int32*)</code><br>
	 * <i>native declaration : line 6254</i>
	 */
	public static native int dAQmxGetScalePreScaledUnits(byte scaleName[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScalePreScaledUnits(const char[], int32)</code><br>
	 * <i>native declaration : line 6255</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScalePreScaledUnits(byte[], int)} and {@link #dAQmxSetScalePreScaledUnits(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScalePreScaledUnits(Pointer scaleName, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetScalePreScaledUnits(const char[], int32)</code><br>
	 * <i>native declaration : line 6255</i>
	 */
	public static native int dAQmxSetScalePreScaledUnits(byte scaleName[], int data);
	/**
	 * Uses value set ScaleType<br>
	 * Original signature : <code>int32 DAQmxGetScaleType(const char[], int32*)</code><br>
	 * <i>native declaration : line 6258</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScaleType(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetScaleType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScaleType(Pointer scaleName, IntByReference data);
	/**
	 * Uses value set ScaleType<br>
	 * Original signature : <code>int32 DAQmxGetScaleType(const char[], int32*)</code><br>
	 * <i>native declaration : line 6258</i>
	 */
	public static native int dAQmxGetScaleType(byte scaleName[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Lin_Slope ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleLinSlope(const char[], float64*)</code><br>
	 * <i>native declaration : line 6260</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScaleLinSlope(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetScaleLinSlope(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScaleLinSlope(Pointer scaleName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Lin_Slope ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleLinSlope(const char[], float64*)</code><br>
	 * <i>native declaration : line 6260</i>
	 */
	public static native int dAQmxGetScaleLinSlope(byte scaleName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleLinSlope(const char[], float64)</code><br>
	 * <i>native declaration : line 6261</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScaleLinSlope(byte[], double)} and {@link #dAQmxSetScaleLinSlope(com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScaleLinSlope(Pointer scaleName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleLinSlope(const char[], float64)</code><br>
	 * <i>native declaration : line 6261</i>
	 */
	public static native int dAQmxSetScaleLinSlope(byte scaleName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Lin_YIntercept ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleLinYIntercept(const char[], float64*)</code><br>
	 * <i>native declaration : line 6263</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScaleLinYIntercept(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetScaleLinYIntercept(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScaleLinYIntercept(Pointer scaleName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Lin_YIntercept ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleLinYIntercept(const char[], float64*)</code><br>
	 * <i>native declaration : line 6263</i>
	 */
	public static native int dAQmxGetScaleLinYIntercept(byte scaleName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleLinYIntercept(const char[], float64)</code><br>
	 * <i>native declaration : line 6264</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScaleLinYIntercept(byte[], double)} and {@link #dAQmxSetScaleLinYIntercept(com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScaleLinYIntercept(Pointer scaleName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleLinYIntercept(const char[], float64)</code><br>
	 * <i>native declaration : line 6264</i>
	 */
	public static native int dAQmxSetScaleLinYIntercept(byte scaleName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_ScaledMax ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapScaledMax(const char[], float64*)</code><br>
	 * <i>native declaration : line 6266</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScaleMapScaledMax(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetScaleMapScaledMax(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScaleMapScaledMax(Pointer scaleName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_ScaledMax ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapScaledMax(const char[], float64*)</code><br>
	 * <i>native declaration : line 6266</i>
	 */
	public static native int dAQmxGetScaleMapScaledMax(byte scaleName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapScaledMax(const char[], float64)</code><br>
	 * <i>native declaration : line 6267</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScaleMapScaledMax(byte[], double)} and {@link #dAQmxSetScaleMapScaledMax(com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScaleMapScaledMax(Pointer scaleName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapScaledMax(const char[], float64)</code><br>
	 * <i>native declaration : line 6267</i>
	 */
	public static native int dAQmxSetScaleMapScaledMax(byte scaleName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_PreScaledMax ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapPreScaledMax(const char[], float64*)</code><br>
	 * <i>native declaration : line 6269</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScaleMapPreScaledMax(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetScaleMapPreScaledMax(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScaleMapPreScaledMax(Pointer scaleName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_PreScaledMax ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapPreScaledMax(const char[], float64*)</code><br>
	 * <i>native declaration : line 6269</i>
	 */
	public static native int dAQmxGetScaleMapPreScaledMax(byte scaleName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapPreScaledMax(const char[], float64)</code><br>
	 * <i>native declaration : line 6270</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScaleMapPreScaledMax(byte[], double)} and {@link #dAQmxSetScaleMapPreScaledMax(com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScaleMapPreScaledMax(Pointer scaleName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapPreScaledMax(const char[], float64)</code><br>
	 * <i>native declaration : line 6270</i>
	 */
	public static native int dAQmxSetScaleMapPreScaledMax(byte scaleName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_ScaledMin ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapScaledMin(const char[], float64*)</code><br>
	 * <i>native declaration : line 6272</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScaleMapScaledMin(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetScaleMapScaledMin(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScaleMapScaledMin(Pointer scaleName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_ScaledMin ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapScaledMin(const char[], float64*)</code><br>
	 * <i>native declaration : line 6272</i>
	 */
	public static native int dAQmxGetScaleMapScaledMin(byte scaleName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapScaledMin(const char[], float64)</code><br>
	 * <i>native declaration : line 6273</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScaleMapScaledMin(byte[], double)} and {@link #dAQmxSetScaleMapScaledMin(com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScaleMapScaledMin(Pointer scaleName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapScaledMin(const char[], float64)</code><br>
	 * <i>native declaration : line 6273</i>
	 */
	public static native int dAQmxSetScaleMapScaledMin(byte scaleName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_PreScaledMin ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapPreScaledMin(const char[], float64*)</code><br>
	 * <i>native declaration : line 6275</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScaleMapPreScaledMin(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetScaleMapPreScaledMin(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScaleMapPreScaledMin(Pointer scaleName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_PreScaledMin ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapPreScaledMin(const char[], float64*)</code><br>
	 * <i>native declaration : line 6275</i>
	 */
	public static native int dAQmxGetScaleMapPreScaledMin(byte scaleName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapPreScaledMin(const char[], float64)</code><br>
	 * <i>native declaration : line 6276</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScaleMapPreScaledMin(byte[], double)} and {@link #dAQmxSetScaleMapPreScaledMin(com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScaleMapPreScaledMin(Pointer scaleName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapPreScaledMin(const char[], float64)</code><br>
	 * <i>native declaration : line 6276</i>
	 */
	public static native int dAQmxSetScaleMapPreScaledMin(byte scaleName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Poly_ForwardCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetScalePolyForwardCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6278</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScalePolyForwardCoeff(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetScalePolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScalePolyForwardCoeff(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Poly_ForwardCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetScalePolyForwardCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6278</i>
	 */
	public static native int dAQmxGetScalePolyForwardCoeff(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScalePolyForwardCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6279</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScalePolyForwardCoeff(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetScalePolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScalePolyForwardCoeff(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScalePolyForwardCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6279</i>
	 */
	public static native int dAQmxSetScalePolyForwardCoeff(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Poly_ReverseCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetScalePolyReverseCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6281</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScalePolyReverseCoeff(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetScalePolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScalePolyReverseCoeff(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Poly_ReverseCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetScalePolyReverseCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6281</i>
	 */
	public static native int dAQmxGetScalePolyReverseCoeff(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScalePolyReverseCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6282</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScalePolyReverseCoeff(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetScalePolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScalePolyReverseCoeff(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScalePolyReverseCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6282</i>
	 */
	public static native int dAQmxSetScalePolyReverseCoeff(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Table_ScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleTableScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6284</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScaleTableScaledVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetScaleTableScaledVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScaleTableScaledVals(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Table_ScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleTableScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6284</i>
	 */
	public static native int dAQmxGetScaleTableScaledVals(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleTableScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6285</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScaleTableScaledVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetScaleTableScaledVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScaleTableScaledVals(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleTableScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6285</i>
	 */
	public static native int dAQmxSetScaleTableScaledVals(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Table_PreScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleTablePreScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6287</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetScaleTablePreScaledVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetScaleTablePreScaledVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetScaleTablePreScaledVals(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Table_PreScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleTablePreScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6287</i>
	 */
	public static native int dAQmxGetScaleTablePreScaledVals(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleTablePreScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6288</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetScaleTablePreScaledVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxSetScaleTablePreScaledVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetScaleTablePreScaledVals(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleTablePreScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6288</i>
	 */
	public static native int dAQmxSetScaleTablePreScaledVals(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Sys_GlobalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetSysGlobalChans(char*, uInt32)</code><br>
	 * <i>native declaration : line 6292</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSysGlobalChans(java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSysGlobalChans(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSysGlobalChans(Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_GlobalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetSysGlobalChans(char*, uInt32)</code><br>
	 * <i>native declaration : line 6292</i>
	 */
	public static native int dAQmxGetSysGlobalChans(String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_Scales ***<br>
	 * Original signature : <code>int32 DAQmxGetSysScales(char*, uInt32)</code><br>
	 * <i>native declaration : line 6294</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSysScales(java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSysScales(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSysScales(Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_Scales ***<br>
	 * Original signature : <code>int32 DAQmxGetSysScales(char*, uInt32)</code><br>
	 * <i>native declaration : line 6294</i>
	 */
	public static native int dAQmxGetSysScales(String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_Tasks ***<br>
	 * Original signature : <code>int32 DAQmxGetSysTasks(char*, uInt32)</code><br>
	 * <i>native declaration : line 6296</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSysTasks(java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSysTasks(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSysTasks(Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_Tasks ***<br>
	 * Original signature : <code>int32 DAQmxGetSysTasks(char*, uInt32)</code><br>
	 * <i>native declaration : line 6296</i>
	 */
	public static native int dAQmxGetSysTasks(String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_DevNames ***<br>
	 * Original signature : <code>int32 DAQmxGetSysDevNames(char*, uInt32)</code><br>
	 * <i>native declaration : line 6298</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSysDevNames(java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSysDevNames(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSysDevNames(Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_DevNames ***<br>
	 * Original signature : <code>int32 DAQmxGetSysDevNames(char*, uInt32)</code><br>
	 * <i>native declaration : line 6298</i>
	 */
	public static native int dAQmxGetSysDevNames(String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_NIDAQMajorVersion ***<br>
	 * Original signature : <code>int32 DAQmxGetSysNIDAQMajorVersion(uInt32*)</code><br>
	 * <i>native declaration : line 6300</i>
	 */
	public static native int dAQmxGetSysNIDAQMajorVersion(NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Sys_NIDAQMinorVersion ***<br>
	 * Original signature : <code>int32 DAQmxGetSysNIDAQMinorVersion(uInt32*)</code><br>
	 * <i>native declaration : line 6302</i>
	 */
	public static native int dAQmxGetSysNIDAQMinorVersion(NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Sys_NIDAQUpdateVersion ***<br>
	 * Original signature : <code>int32 DAQmxGetSysNIDAQUpdateVersion(uInt32*)</code><br>
	 * <i>native declaration : line 6304</i>
	 */
	public static native int dAQmxGetSysNIDAQUpdateVersion(NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Task_Name ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskName(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6308</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetTaskName(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetTaskName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetTaskName(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Task_Name ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskName(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6308</i>
	 */
	public static native int dAQmxGetTaskName(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Task_Channels ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskChannels(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6310</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetTaskChannels(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetTaskChannels(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetTaskChannels(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Task_Channels ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskChannels(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6310</i>
	 */
	public static native int dAQmxGetTaskChannels(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Task_NumChans ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskNumChans(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6312</i>
	 */
	public static native int dAQmxGetTaskNumChans(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Task_Devices ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskDevices(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6314</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetTaskDevices(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetTaskDevices(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetTaskDevices(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Task_Devices ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskDevices(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6314</i>
	 */
	public static native int dAQmxGetTaskDevices(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Task_NumDevices ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskNumDevices(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6316</i>
	 */
	public static native int dAQmxGetTaskNumDevices(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Task_Complete ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskComplete(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6318</i>
	 */
	public static native int dAQmxGetTaskComplete(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetSampQuantSampMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6323</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampQuantSampMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetSampQuantSampMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampQuantSampMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetSampQuantSampMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6323</i>
	 */
	public static native int dAQmxGetSampQuantSampMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampQuantSampMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6324</i>
	 */
	public static native int dAQmxSetSampQuantSampMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampQuantSampMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6325</i>
	 */
	public static native int dAQmxResetSampQuantSampMode(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampQuant_SampPerChan ***<br>
	 * Original signature : <code>int32 DAQmxGetSampQuantSampPerChan(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6327</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampQuantSampPerChan(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #dAQmxGetSampQuantSampPerChan(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampQuantSampPerChan(Pointer taskHandle, LongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SampQuant_SampPerChan ***<br>
	 * Original signature : <code>int32 DAQmxGetSampQuantSampPerChan(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6327</i>
	 */
	public static native int dAQmxGetSampQuantSampPerChan(Pointer taskHandle, LongBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampQuantSampPerChan(TaskHandle, uInt64)</code><br>
	 * <i>native declaration : line 6328</i>
	 */
	public static native int dAQmxSetSampQuantSampPerChan(Pointer taskHandle, long data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampQuantSampPerChan(TaskHandle)</code><br>
	 * <i>native declaration : line 6329</i>
	 */
	public static native int dAQmxResetSampQuantSampPerChan(Pointer taskHandle);
	/**
	 * Uses value set SampleTimingType<br>
	 * Original signature : <code>int32 DAQmxGetSampTimingType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6332</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampTimingType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetSampTimingType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampTimingType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set SampleTimingType<br>
	 * Original signature : <code>int32 DAQmxGetSampTimingType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6332</i>
	 */
	public static native int dAQmxGetSampTimingType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampTimingType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6333</i>
	 */
	public static native int dAQmxSetSampTimingType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampTimingType(TaskHandle)</code><br>
	 * <i>native declaration : line 6334</i>
	 */
	public static native int dAQmxResetSampTimingType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6336</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetSampClkRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6336</i>
	 */
	public static native int dAQmxGetSampClkRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6337</i>
	 */
	public static native int dAQmxSetSampClkRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6338</i>
	 */
	public static native int dAQmxResetSampClkRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkMaxRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6340</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkMaxRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetSampClkMaxRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkMaxRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkMaxRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6340</i>
	 */
	public static native int dAQmxGetSampClkMaxRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6342</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSampClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6342</i>
	 */
	public static native int dAQmxGetSampClkSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6343</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetSampClkSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetSampClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetSampClkSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6343</i>
	 */
	public static native int dAQmxSetSampClkSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6344</i>
	 */
	public static native int dAQmxResetSampClkSrc(Pointer taskHandle);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetSampClkActiveEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6347</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkActiveEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetSampClkActiveEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkActiveEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetSampClkActiveEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6347</i>
	 */
	public static native int dAQmxGetSampClkActiveEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkActiveEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6348</i>
	 */
	public static native int dAQmxSetSampClkActiveEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkActiveEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 6349</i>
	 */
	public static native int dAQmxResetSampClkActiveEdge(Pointer taskHandle);
	/**
	 * Uses value set OverflowBehavior<br>
	 * Original signature : <code>int32 DAQmxGetSampClkOverrunBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6352</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkOverrunBehavior(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetSampClkOverrunBehavior(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkOverrunBehavior(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set OverflowBehavior<br>
	 * Original signature : <code>int32 DAQmxGetSampClkOverrunBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6352</i>
	 */
	public static native int dAQmxGetSampClkOverrunBehavior(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkOverrunBehavior(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6353</i>
	 */
	public static native int dAQmxSetSampClkOverrunBehavior(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkOverrunBehavior(TaskHandle)</code><br>
	 * <i>native declaration : line 6354</i>
	 */
	public static native int dAQmxResetSampClkOverrunBehavior(Pointer taskHandle);
	/**
	 * Uses value set UnderflowBehavior<br>
	 * Original signature : <code>int32 DAQmxGetSampClkUnderflowBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6357</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkUnderflowBehavior(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetSampClkUnderflowBehavior(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkUnderflowBehavior(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set UnderflowBehavior<br>
	 * Original signature : <code>int32 DAQmxGetSampClkUnderflowBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6357</i>
	 */
	public static native int dAQmxGetSampClkUnderflowBehavior(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkUnderflowBehavior(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6358</i>
	 */
	public static native int dAQmxSetSampClkUnderflowBehavior(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkUnderflowBehavior(TaskHandle)</code><br>
	 * <i>native declaration : line 6359</i>
	 */
	public static native int dAQmxResetSampClkUnderflowBehavior(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_TimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseDiv(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6361</i>
	 */
	public static native int dAQmxGetSampClkTimebaseDiv(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimebaseDiv(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6362</i>
	 */
	public static native int dAQmxSetSampClkTimebaseDiv(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkTimebaseDiv(TaskHandle)</code><br>
	 * <i>native declaration : line 6363</i>
	 */
	public static native int dAQmxResetSampClkTimebaseDiv(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6365</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSampClkTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6365</i>
	 */
	public static native int dAQmxGetSampClkTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Timebase_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6367</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetSampClkTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Timebase_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6367</i>
	 */
	public static native int dAQmxGetSampClkTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6368</i>
	 */
	public static native int dAQmxSetSampClkTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6369</i>
	 */
	public static native int dAQmxResetSampClkTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Timebase_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6371</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSampClkTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Timebase_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6371</i>
	 */
	public static native int dAQmxGetSampClkTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6372</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetSampClkTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetSampClkTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetSampClkTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6372</i>
	 */
	public static native int dAQmxSetSampClkTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6373</i>
	 */
	public static native int dAQmxResetSampClkTimebaseSrc(Pointer taskHandle);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseActiveEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6376</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkTimebaseActiveEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetSampClkTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkTimebaseActiveEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseActiveEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6376</i>
	 */
	public static native int dAQmxGetSampClkTimebaseActiveEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimebaseActiveEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6377</i>
	 */
	public static native int dAQmxSetSampClkTimebaseActiveEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkTimebaseActiveEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 6378</i>
	 */
	public static native int dAQmxResetSampClkTimebaseActiveEdge(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Timebase_MasterTimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseMasterTimebaseDiv(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6380</i>
	 */
	public static native int dAQmxGetSampClkTimebaseMasterTimebaseDiv(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimebaseMasterTimebaseDiv(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6381</i>
	 */
	public static native int dAQmxSetSampClkTimebaseMasterTimebaseDiv(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkTimebaseMasterTimebaseDiv(TaskHandle)</code><br>
	 * <i>native declaration : line 6382</i>
	 */
	public static native int dAQmxResetSampClkTimebaseMasterTimebaseDiv(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClkTimebase_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6384</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkTimebaseTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSampClkTimebaseTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkTimebaseTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClkTimebase_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6384</i>
	 */
	public static native int dAQmxGetSampClkTimebaseTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6386</i>
	 */
	public static native int dAQmxGetSampClkDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6387</i>
	 */
	public static native int dAQmxSetSampClkDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6388</i>
	 */
	public static native int dAQmxResetSampClkDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6390</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetSampClkDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6390</i>
	 */
	public static native int dAQmxGetSampClkDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6391</i>
	 */
	public static native int dAQmxSetSampClkDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6392</i>
	 */
	public static native int dAQmxResetSampClkDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6394</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSampClkDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6394</i>
	 */
	public static native int dAQmxGetSampClkDigFltrTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6395</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetSampClkDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetSampClkDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetSampClkDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6395</i>
	 */
	public static native int dAQmxSetSampClkDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6396</i>
	 */
	public static native int dAQmxResetSampClkDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6398</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetSampClkDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6398</i>
	 */
	public static native int dAQmxGetSampClkDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6399</i>
	 */
	public static native int dAQmxSetSampClkDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6400</i>
	 */
	public static native int dAQmxResetSampClkDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6402</i>
	 */
	public static native int dAQmxGetSampClkDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6403</i>
	 */
	public static native int dAQmxSetSampClkDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6404</i>
	 */
	public static native int dAQmxResetSampClkDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_WriteWfm_UseInitialWfmDT ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkWriteWfmUseInitialWfmDT(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6406</i>
	 */
	public static native int dAQmxGetSampClkWriteWfmUseInitialWfmDT(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkWriteWfmUseInitialWfmDT(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6407</i>
	 */
	public static native int dAQmxSetSampClkWriteWfmUseInitialWfmDT(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkWriteWfmUseInitialWfmDT(TaskHandle)</code><br>
	 * <i>native declaration : line 6408</i>
	 */
	public static native int dAQmxResetSampClkWriteWfmUseInitialWfmDT(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Hshk_DelayAfterXfer ***<br>
	 * Original signature : <code>int32 DAQmxGetHshkDelayAfterXfer(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6410</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetHshkDelayAfterXfer(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetHshkDelayAfterXfer(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetHshkDelayAfterXfer(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Hshk_DelayAfterXfer ***<br>
	 * Original signature : <code>int32 DAQmxGetHshkDelayAfterXfer(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6410</i>
	 */
	public static native int dAQmxGetHshkDelayAfterXfer(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetHshkDelayAfterXfer(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6411</i>
	 */
	public static native int dAQmxSetHshkDelayAfterXfer(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetHshkDelayAfterXfer(TaskHandle)</code><br>
	 * <i>native declaration : line 6412</i>
	 */
	public static native int dAQmxResetHshkDelayAfterXfer(Pointer taskHandle);
	/**
	 * Uses value set HandshakeStartCondition<br>
	 * Original signature : <code>int32 DAQmxGetHshkStartCond(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6415</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetHshkStartCond(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetHshkStartCond(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetHshkStartCond(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set HandshakeStartCondition<br>
	 * Original signature : <code>int32 DAQmxGetHshkStartCond(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6415</i>
	 */
	public static native int dAQmxGetHshkStartCond(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetHshkStartCond(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6416</i>
	 */
	public static native int dAQmxSetHshkStartCond(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetHshkStartCond(TaskHandle)</code><br>
	 * <i>native declaration : line 6417</i>
	 */
	public static native int dAQmxResetHshkStartCond(Pointer taskHandle);
	/**
	 * Uses value set SampleInputDataWhen<br>
	 * Original signature : <code>int32 DAQmxGetHshkSampleInputDataWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6420</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetHshkSampleInputDataWhen(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetHshkSampleInputDataWhen(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetHshkSampleInputDataWhen(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set SampleInputDataWhen<br>
	 * Original signature : <code>int32 DAQmxGetHshkSampleInputDataWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6420</i>
	 */
	public static native int dAQmxGetHshkSampleInputDataWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetHshkSampleInputDataWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6421</i>
	 */
	public static native int dAQmxSetHshkSampleInputDataWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetHshkSampleInputDataWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6422</i>
	 */
	public static native int dAQmxResetHshkSampleInputDataWhen(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_ChangeDetect_DI_RisingEdgePhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetChangeDetectDIRisingEdgePhysicalChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6424</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetChangeDetectDIRisingEdgePhysicalChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetChangeDetectDIRisingEdgePhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetChangeDetectDIRisingEdgePhysicalChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_ChangeDetect_DI_RisingEdgePhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetChangeDetectDIRisingEdgePhysicalChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6424</i>
	 */
	public static native int dAQmxGetChangeDetectDIRisingEdgePhysicalChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetChangeDetectDIRisingEdgePhysicalChans(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6425</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetChangeDetectDIRisingEdgePhysicalChans(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetChangeDetectDIRisingEdgePhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetChangeDetectDIRisingEdgePhysicalChans(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetChangeDetectDIRisingEdgePhysicalChans(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6425</i>
	 */
	public static native int dAQmxSetChangeDetectDIRisingEdgePhysicalChans(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetChangeDetectDIRisingEdgePhysicalChans(TaskHandle)</code><br>
	 * <i>native declaration : line 6426</i>
	 */
	public static native int dAQmxResetChangeDetectDIRisingEdgePhysicalChans(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_ChangeDetect_DI_FallingEdgePhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetChangeDetectDIFallingEdgePhysicalChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6428</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetChangeDetectDIFallingEdgePhysicalChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetChangeDetectDIFallingEdgePhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetChangeDetectDIFallingEdgePhysicalChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_ChangeDetect_DI_FallingEdgePhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetChangeDetectDIFallingEdgePhysicalChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6428</i>
	 */
	public static native int dAQmxGetChangeDetectDIFallingEdgePhysicalChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetChangeDetectDIFallingEdgePhysicalChans(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6429</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetChangeDetectDIFallingEdgePhysicalChans(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetChangeDetectDIFallingEdgePhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetChangeDetectDIFallingEdgePhysicalChans(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetChangeDetectDIFallingEdgePhysicalChans(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6429</i>
	 */
	public static native int dAQmxSetChangeDetectDIFallingEdgePhysicalChans(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetChangeDetectDIFallingEdgePhysicalChans(TaskHandle)</code><br>
	 * <i>native declaration : line 6430</i>
	 */
	public static native int dAQmxResetChangeDetectDIFallingEdgePhysicalChans(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_ChangeDetect_DI_Tristate ***<br>
	 * Original signature : <code>int32 DAQmxGetChangeDetectDITristate(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6432</i>
	 */
	public static native int dAQmxGetChangeDetectDITristate(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetChangeDetectDITristate(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6433</i>
	 */
	public static native int dAQmxSetChangeDetectDITristate(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetChangeDetectDITristate(TaskHandle)</code><br>
	 * <i>native declaration : line 6434</i>
	 */
	public static native int dAQmxResetChangeDetectDITristate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_OnDemand_SimultaneousAOEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetOnDemandSimultaneousAOEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6436</i>
	 */
	public static native int dAQmxGetOnDemandSimultaneousAOEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetOnDemandSimultaneousAOEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6437</i>
	 */
	public static native int dAQmxSetOnDemandSimultaneousAOEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetOnDemandSimultaneousAOEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6438</i>
	 */
	public static native int dAQmxResetOnDemandSimultaneousAOEnable(Pointer taskHandle);
	/**
	 * Uses value set UnderflowBehavior<br>
	 * Original signature : <code>int32 DAQmxGetImplicitUnderflowBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6441</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetImplicitUnderflowBehavior(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetImplicitUnderflowBehavior(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetImplicitUnderflowBehavior(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set UnderflowBehavior<br>
	 * Original signature : <code>int32 DAQmxGetImplicitUnderflowBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6441</i>
	 */
	public static native int dAQmxGetImplicitUnderflowBehavior(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetImplicitUnderflowBehavior(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6442</i>
	 */
	public static native int dAQmxSetImplicitUnderflowBehavior(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetImplicitUnderflowBehavior(TaskHandle)</code><br>
	 * <i>native declaration : line 6443</i>
	 */
	public static native int dAQmxResetImplicitUnderflowBehavior(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6445</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAIConvRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6445</i>
	 */
	public static native int dAQmxGetAIConvRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6446</i>
	 */
	public static native int dAQmxSetAIConvRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6447</i>
	 */
	public static native int dAQmxResetAIConvRate(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvRateEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6448</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvRateEx(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIConvRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvRateEx(Pointer taskHandle, Pointer deviceNames, DoubleByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvRateEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6448</i>
	 */
	public static native int dAQmxGetAIConvRateEx(Pointer taskHandle, byte deviceNames[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvRateEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6449</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIConvRateEx(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIConvRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIConvRateEx(Pointer taskHandle, Pointer deviceNames, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvRateEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6449</i>
	 */
	public static native int dAQmxSetAIConvRateEx(Pointer taskHandle, byte deviceNames[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvRateEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6450</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIConvRateEx(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIConvRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIConvRateEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvRateEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6450</i>
	 */
	public static native int dAQmxResetAIConvRateEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvMaxRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6452</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvMaxRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAIConvMaxRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvMaxRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvMaxRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6452</i>
	 */
	public static native int dAQmxGetAIConvMaxRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvMaxRateEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6453</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvMaxRateEx(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIConvMaxRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvMaxRateEx(Pointer taskHandle, Pointer deviceNames, DoubleByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvMaxRateEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6453</i>
	 */
	public static native int dAQmxGetAIConvMaxRateEx(Pointer taskHandle, byte deviceNames[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6455</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIConvSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6455</i>
	 */
	public static native int dAQmxGetAIConvSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6456</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIConvSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAIConvSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIConvSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6456</i>
	 */
	public static native int dAQmxSetAIConvSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6457</i>
	 */
	public static native int dAQmxResetAIConvSrc(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvSrcEx(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6458</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvSrcEx(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIConvSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvSrcEx(Pointer taskHandle, Pointer deviceNames, Pointer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvSrcEx(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6458</i>
	 */
	public static native int dAQmxGetAIConvSrcEx(Pointer taskHandle, byte deviceNames[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvSrcEx(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 6459</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIConvSrcEx(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetAIConvSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIConvSrcEx(Pointer taskHandle, Pointer deviceNames, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvSrcEx(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 6459</i>
	 */
	public static native int dAQmxSetAIConvSrcEx(Pointer taskHandle, byte deviceNames[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvSrcEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6460</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIConvSrcEx(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIConvSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIConvSrcEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvSrcEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6460</i>
	 */
	public static native int dAQmxResetAIConvSrcEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetAIConvActiveEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6463</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvActiveEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAIConvActiveEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvActiveEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetAIConvActiveEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6463</i>
	 */
	public static native int dAQmxGetAIConvActiveEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvActiveEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6464</i>
	 */
	public static native int dAQmxSetAIConvActiveEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvActiveEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 6465</i>
	 */
	public static native int dAQmxResetAIConvActiveEdge(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvActiveEdgeEx(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 6466</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvActiveEdgeEx(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIConvActiveEdgeEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvActiveEdgeEx(Pointer taskHandle, Pointer deviceNames, IntByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvActiveEdgeEx(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 6466</i>
	 */
	public static native int dAQmxGetAIConvActiveEdgeEx(Pointer taskHandle, byte deviceNames[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvActiveEdgeEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 6467</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIConvActiveEdgeEx(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIConvActiveEdgeEx(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIConvActiveEdgeEx(Pointer taskHandle, Pointer deviceNames, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvActiveEdgeEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 6467</i>
	 */
	public static native int dAQmxSetAIConvActiveEdgeEx(Pointer taskHandle, byte deviceNames[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvActiveEdgeEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6468</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIConvActiveEdgeEx(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIConvActiveEdgeEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIConvActiveEdgeEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvActiveEdgeEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6468</i>
	 */
	public static native int dAQmxResetAIConvActiveEdgeEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_TimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseDiv(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6470</i>
	 */
	public static native int dAQmxGetAIConvTimebaseDiv(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvTimebaseDiv(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6471</i>
	 */
	public static native int dAQmxSetAIConvTimebaseDiv(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvTimebaseDiv(TaskHandle)</code><br>
	 * <i>native declaration : line 6472</i>
	 */
	public static native int dAQmxResetAIConvTimebaseDiv(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseDivEx(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6473</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvTimebaseDivEx(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIConvTimebaseDivEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvTimebaseDivEx(Pointer taskHandle, Pointer deviceNames, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseDivEx(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6473</i>
	 */
	public static native int dAQmxGetAIConvTimebaseDivEx(Pointer taskHandle, byte deviceNames[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvTimebaseDivEx(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 6474</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIConvTimebaseDivEx(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIConvTimebaseDivEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIConvTimebaseDivEx(Pointer taskHandle, Pointer deviceNames, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvTimebaseDivEx(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 6474</i>
	 */
	public static native int dAQmxSetAIConvTimebaseDivEx(Pointer taskHandle, byte deviceNames[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvTimebaseDivEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6475</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIConvTimebaseDivEx(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIConvTimebaseDivEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIConvTimebaseDivEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvTimebaseDivEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6475</i>
	 */
	public static native int dAQmxResetAIConvTimebaseDivEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * Uses value set MIOAIConvertTbSrc<br>
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseSrc(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6478</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvTimebaseSrc(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAIConvTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvTimebaseSrc(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set MIOAIConvertTbSrc<br>
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseSrc(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6478</i>
	 */
	public static native int dAQmxGetAIConvTimebaseSrc(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvTimebaseSrc(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6479</i>
	 */
	public static native int dAQmxSetAIConvTimebaseSrc(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6480</i>
	 */
	public static native int dAQmxResetAIConvTimebaseSrc(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseSrcEx(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 6481</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvTimebaseSrcEx(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetAIConvTimebaseSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvTimebaseSrcEx(Pointer taskHandle, Pointer deviceNames, IntByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseSrcEx(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 6481</i>
	 */
	public static native int dAQmxGetAIConvTimebaseSrcEx(Pointer taskHandle, byte deviceNames[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvTimebaseSrcEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 6482</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIConvTimebaseSrcEx(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetAIConvTimebaseSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIConvTimebaseSrcEx(Pointer taskHandle, Pointer deviceNames, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvTimebaseSrcEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 6482</i>
	 */
	public static native int dAQmxSetAIConvTimebaseSrcEx(Pointer taskHandle, byte deviceNames[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvTimebaseSrcEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6483</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIConvTimebaseSrcEx(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIConvTimebaseSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIConvTimebaseSrcEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvTimebaseSrcEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6483</i>
	 */
	public static native int dAQmxResetAIConvTimebaseSrcEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * Uses value set DigitalWidthUnits2<br>
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelayUnits(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6486</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDelayFromSampClkDelayUnits(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetDelayFromSampClkDelayUnits(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDelayFromSampClkDelayUnits(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set DigitalWidthUnits2<br>
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelayUnits(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6486</i>
	 */
	public static native int dAQmxGetDelayFromSampClkDelayUnits(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDelayFromSampClkDelayUnits(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6487</i>
	 */
	public static native int dAQmxSetDelayFromSampClkDelayUnits(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDelayFromSampClkDelayUnits(TaskHandle)</code><br>
	 * <i>native declaration : line 6488</i>
	 */
	public static native int dAQmxResetDelayFromSampClkDelayUnits(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelayUnitsEx(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 6489</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDelayFromSampClkDelayUnitsEx(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetDelayFromSampClkDelayUnitsEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDelayFromSampClkDelayUnitsEx(Pointer taskHandle, Pointer deviceNames, IntByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelayUnitsEx(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 6489</i>
	 */
	public static native int dAQmxGetDelayFromSampClkDelayUnitsEx(Pointer taskHandle, byte deviceNames[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDelayFromSampClkDelayUnitsEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 6490</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDelayFromSampClkDelayUnitsEx(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetDelayFromSampClkDelayUnitsEx(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDelayFromSampClkDelayUnitsEx(Pointer taskHandle, Pointer deviceNames, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDelayFromSampClkDelayUnitsEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 6490</i>
	 */
	public static native int dAQmxSetDelayFromSampClkDelayUnitsEx(Pointer taskHandle, byte deviceNames[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDelayFromSampClkDelayUnitsEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6491</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDelayFromSampClkDelayUnitsEx(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDelayFromSampClkDelayUnitsEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDelayFromSampClkDelayUnitsEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetDelayFromSampClkDelayUnitsEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6491</i>
	 */
	public static native int dAQmxResetDelayFromSampClkDelayUnitsEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_DelayFromSampClk_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6493</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDelayFromSampClkDelay(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetDelayFromSampClkDelay(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDelayFromSampClkDelay(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DelayFromSampClk_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6493</i>
	 */
	public static native int dAQmxGetDelayFromSampClkDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDelayFromSampClkDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6494</i>
	 */
	public static native int dAQmxSetDelayFromSampClkDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDelayFromSampClkDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 6495</i>
	 */
	public static native int dAQmxResetDelayFromSampClkDelay(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelayEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6496</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDelayFromSampClkDelayEx(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetDelayFromSampClkDelayEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDelayFromSampClkDelayEx(Pointer taskHandle, Pointer deviceNames, DoubleByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelayEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6496</i>
	 */
	public static native int dAQmxGetDelayFromSampClkDelayEx(Pointer taskHandle, byte deviceNames[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDelayFromSampClkDelayEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6497</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDelayFromSampClkDelayEx(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetDelayFromSampClkDelayEx(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDelayFromSampClkDelayEx(Pointer taskHandle, Pointer deviceNames, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetDelayFromSampClkDelayEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6497</i>
	 */
	public static native int dAQmxSetDelayFromSampClkDelayEx(Pointer taskHandle, byte deviceNames[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDelayFromSampClkDelayEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6498</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetDelayFromSampClkDelayEx(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetDelayFromSampClkDelayEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetDelayFromSampClkDelayEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetDelayFromSampClkDelayEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6498</i>
	 */
	public static native int dAQmxResetDelayFromSampClkDelayEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6500</i>
	 */
	public static native int dAQmxGetAIConvDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6501</i>
	 */
	public static native int dAQmxSetAIConvDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6502</i>
	 */
	public static native int dAQmxResetAIConvDigFltrEnable(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrEnableEx(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 6503</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvDigFltrEnableEx(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIConvDigFltrEnableEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvDigFltrEnableEx(Pointer taskHandle, Pointer deviceNames, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrEnableEx(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 6503</i>
	 */
	public static native int dAQmxGetAIConvDigFltrEnableEx(Pointer taskHandle, byte deviceNames[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrEnableEx(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 6504</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIConvDigFltrEnableEx(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIConvDigFltrEnableEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIConvDigFltrEnableEx(Pointer taskHandle, Pointer deviceNames, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrEnableEx(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 6504</i>
	 */
	public static native int dAQmxSetAIConvDigFltrEnableEx(Pointer taskHandle, byte deviceNames[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrEnableEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6505</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIConvDigFltrEnableEx(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIConvDigFltrEnableEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIConvDigFltrEnableEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrEnableEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6505</i>
	 */
	public static native int dAQmxResetAIConvDigFltrEnableEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6507</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAIConvDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6507</i>
	 */
	public static native int dAQmxGetAIConvDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6508</i>
	 */
	public static native int dAQmxSetAIConvDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6509</i>
	 */
	public static native int dAQmxResetAIConvDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrMinPulseWidthEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6510</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvDigFltrMinPulseWidthEx(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIConvDigFltrMinPulseWidthEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvDigFltrMinPulseWidthEx(Pointer taskHandle, Pointer deviceNames, DoubleByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrMinPulseWidthEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6510</i>
	 */
	public static native int dAQmxGetAIConvDigFltrMinPulseWidthEx(Pointer taskHandle, byte deviceNames[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrMinPulseWidthEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6511</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIConvDigFltrMinPulseWidthEx(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIConvDigFltrMinPulseWidthEx(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIConvDigFltrMinPulseWidthEx(Pointer taskHandle, Pointer deviceNames, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrMinPulseWidthEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6511</i>
	 */
	public static native int dAQmxSetAIConvDigFltrMinPulseWidthEx(Pointer taskHandle, byte deviceNames[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrMinPulseWidthEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6512</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIConvDigFltrMinPulseWidthEx(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIConvDigFltrMinPulseWidthEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIConvDigFltrMinPulseWidthEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrMinPulseWidthEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6512</i>
	 */
	public static native int dAQmxResetAIConvDigFltrMinPulseWidthEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6514</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIConvDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6514</i>
	 */
	public static native int dAQmxGetAIConvDigFltrTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6515</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIConvDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAIConvDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIConvDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6515</i>
	 */
	public static native int dAQmxSetAIConvDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6516</i>
	 */
	public static native int dAQmxResetAIConvDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseSrcEx(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6517</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvDigFltrTimebaseSrcEx(com.sun.jna.Pointer, byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAIConvDigFltrTimebaseSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvDigFltrTimebaseSrcEx(Pointer taskHandle, Pointer deviceNames, Pointer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseSrcEx(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6517</i>
	 */
	public static native int dAQmxGetAIConvDigFltrTimebaseSrcEx(Pointer taskHandle, byte deviceNames[], String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseSrcEx(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 6518</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIConvDigFltrTimebaseSrcEx(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #dAQmxSetAIConvDigFltrTimebaseSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIConvDigFltrTimebaseSrcEx(Pointer taskHandle, Pointer deviceNames, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseSrcEx(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 6518</i>
	 */
	public static native int dAQmxSetAIConvDigFltrTimebaseSrcEx(Pointer taskHandle, byte deviceNames[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrTimebaseSrcEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6519</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIConvDigFltrTimebaseSrcEx(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIConvDigFltrTimebaseSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIConvDigFltrTimebaseSrcEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrTimebaseSrcEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6519</i>
	 */
	public static native int dAQmxResetAIConvDigFltrTimebaseSrcEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6521</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAIConvDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6521</i>
	 */
	public static native int dAQmxGetAIConvDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6522</i>
	 */
	public static native int dAQmxSetAIConvDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6523</i>
	 */
	public static native int dAQmxResetAIConvDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseRateEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6524</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvDigFltrTimebaseRateEx(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAIConvDigFltrTimebaseRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvDigFltrTimebaseRateEx(Pointer taskHandle, Pointer deviceNames, DoubleByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseRateEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6524</i>
	 */
	public static native int dAQmxGetAIConvDigFltrTimebaseRateEx(Pointer taskHandle, byte deviceNames[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseRateEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6525</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIConvDigFltrTimebaseRateEx(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetAIConvDigFltrTimebaseRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIConvDigFltrTimebaseRateEx(Pointer taskHandle, Pointer deviceNames, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseRateEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6525</i>
	 */
	public static native int dAQmxSetAIConvDigFltrTimebaseRateEx(Pointer taskHandle, byte deviceNames[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrTimebaseRateEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6526</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIConvDigFltrTimebaseRateEx(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIConvDigFltrTimebaseRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIConvDigFltrTimebaseRateEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrTimebaseRateEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6526</i>
	 */
	public static native int dAQmxResetAIConvDigFltrTimebaseRateEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6528</i>
	 */
	public static native int dAQmxGetAIConvDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6529</i>
	 */
	public static native int dAQmxSetAIConvDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6530</i>
	 */
	public static native int dAQmxResetAIConvDigSyncEnable(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigSyncEnableEx(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 6531</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAIConvDigSyncEnableEx(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAIConvDigSyncEnableEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAIConvDigSyncEnableEx(Pointer taskHandle, Pointer deviceNames, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigSyncEnableEx(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 6531</i>
	 */
	public static native int dAQmxGetAIConvDigSyncEnableEx(Pointer taskHandle, byte deviceNames[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigSyncEnableEx(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 6532</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAIConvDigSyncEnableEx(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAIConvDigSyncEnableEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAIConvDigSyncEnableEx(Pointer taskHandle, Pointer deviceNames, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigSyncEnableEx(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 6532</i>
	 */
	public static native int dAQmxSetAIConvDigSyncEnableEx(Pointer taskHandle, byte deviceNames[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigSyncEnableEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6533</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAIConvDigSyncEnableEx(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetAIConvDigSyncEnableEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAIConvDigSyncEnableEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigSyncEnableEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6533</i>
	 */
	public static native int dAQmxResetAIConvDigSyncEnableEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_MasterTimebase_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetMasterTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6535</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetMasterTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetMasterTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetMasterTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_MasterTimebase_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetMasterTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6535</i>
	 */
	public static native int dAQmxGetMasterTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetMasterTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6536</i>
	 */
	public static native int dAQmxSetMasterTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetMasterTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6537</i>
	 */
	public static native int dAQmxResetMasterTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_MasterTimebase_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetMasterTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6539</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetMasterTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetMasterTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetMasterTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_MasterTimebase_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetMasterTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6539</i>
	 */
	public static native int dAQmxGetMasterTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetMasterTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6540</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetMasterTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetMasterTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetMasterTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetMasterTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6540</i>
	 */
	public static native int dAQmxSetMasterTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetMasterTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6541</i>
	 */
	public static native int dAQmxResetMasterTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RefClk_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetRefClkRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6543</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetRefClkRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetRefClkRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetRefClkRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_RefClk_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetRefClkRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6543</i>
	 */
	public static native int dAQmxGetRefClkRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetRefClkRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6544</i>
	 */
	public static native int dAQmxSetRefClkRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetRefClkRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6545</i>
	 */
	public static native int dAQmxResetRefClkRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RefClk_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetRefClkSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6547</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetRefClkSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetRefClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetRefClkSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_RefClk_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetRefClkSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6547</i>
	 */
	public static native int dAQmxGetRefClkSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetRefClkSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6548</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetRefClkSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetRefClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetRefClkSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetRefClkSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6548</i>
	 */
	public static native int dAQmxSetRefClkSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetRefClkSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6549</i>
	 */
	public static native int dAQmxResetRefClkSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6551</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSyncPulseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSyncPulseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSyncPulseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6551</i>
	 */
	public static native int dAQmxGetSyncPulseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetSyncPulseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6552</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetSyncPulseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetSyncPulseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetSyncPulseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSyncPulseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6552</i>
	 */
	public static native int dAQmxSetSyncPulseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetSyncPulseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6553</i>
	 */
	public static native int dAQmxResetSyncPulseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_SyncTime ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseSyncTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6555</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSyncPulseSyncTime(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetSyncPulseSyncTime(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSyncPulseSyncTime(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_SyncTime ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseSyncTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6555</i>
	 */
	public static native int dAQmxGetSyncPulseSyncTime(Pointer taskHandle, DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_MinDelayToStart ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseMinDelayToStart(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6557</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSyncPulseMinDelayToStart(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetSyncPulseMinDelayToStart(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSyncPulseMinDelayToStart(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_MinDelayToStart ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseMinDelayToStart(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6557</i>
	 */
	public static native int dAQmxGetSyncPulseMinDelayToStart(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSyncPulseMinDelayToStart(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6558</i>
	 */
	public static native int dAQmxSetSyncPulseMinDelayToStart(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetSyncPulseMinDelayToStart(TaskHandle)</code><br>
	 * <i>native declaration : line 6559</i>
	 */
	public static native int dAQmxResetSyncPulseMinDelayToStart(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_ResetTime ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseResetTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6561</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSyncPulseResetTime(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetSyncPulseResetTime(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSyncPulseResetTime(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_ResetTime ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseResetTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6561</i>
	 */
	public static native int dAQmxGetSyncPulseResetTime(Pointer taskHandle, DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_ResetDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseResetDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6563</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSyncPulseResetDelay(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetSyncPulseResetDelay(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSyncPulseResetDelay(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_ResetDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseResetDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6563</i>
	 */
	public static native int dAQmxGetSyncPulseResetDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSyncPulseResetDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6564</i>
	 */
	public static native int dAQmxSetSyncPulseResetDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetSyncPulseResetDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 6565</i>
	 */
	public static native int dAQmxResetSyncPulseResetDelay(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6567</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSyncPulseTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetSyncPulseTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSyncPulseTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6567</i>
	 */
	public static native int dAQmxGetSyncPulseTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SyncClk_Interval ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncClkInterval(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6569</i>
	 */
	public static native int dAQmxGetSyncClkInterval(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSyncClkInterval(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6570</i>
	 */
	public static native int dAQmxSetSyncClkInterval(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSyncClkInterval(TaskHandle)</code><br>
	 * <i>native declaration : line 6571</i>
	 */
	public static native int dAQmxResetSyncClkInterval(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampTimingEngine ***<br>
	 * Original signature : <code>int32 DAQmxGetSampTimingEngine(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6573</i>
	 */
	public static native int dAQmxGetSampTimingEngine(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampTimingEngine(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6574</i>
	 */
	public static native int dAQmxSetSampTimingEngine(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampTimingEngine(TaskHandle)</code><br>
	 * <i>native declaration : line 6575</i>
	 */
	public static native int dAQmxResetSampTimingEngine(Pointer taskHandle);
	/**
	 * Uses value set TriggerType10<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6580</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetStartTrigType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetStartTrigType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetStartTrigType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set TriggerType10<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6580</i>
	 */
	public static native int dAQmxGetStartTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetStartTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6581</i>
	 */
	public static native int dAQmxSetStartTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetStartTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 6582</i>
	 */
	public static native int dAQmxResetStartTrigType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_StartTrig_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6584</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetStartTrigTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetStartTrigTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetStartTrigTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_StartTrig_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6584</i>
	 */
	public static native int dAQmxGetStartTrigTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6586</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeStartTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigEdgeStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeStartTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6586</i>
	 */
	public static native int dAQmxGetDigEdgeStartTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6587</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigEdgeStartTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigEdgeStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigEdgeStartTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6587</i>
	 */
	public static native int dAQmxSetDigEdgeStartTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6588</i>
	 */
	public static native int dAQmxResetDigEdgeStartTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6591</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeStartTrigEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetDigEdgeStartTrigEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeStartTrigEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6591</i>
	 */
	public static native int dAQmxGetDigEdgeStartTrigEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6592</i>
	 */
	public static native int dAQmxSetDigEdgeStartTrigEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 6593</i>
	 */
	public static native int dAQmxResetDigEdgeStartTrigEdge(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6595</i>
	 */
	public static native int dAQmxGetDigEdgeStartTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6596</i>
	 */
	public static native int dAQmxSetDigEdgeStartTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6597</i>
	 */
	public static native int dAQmxResetDigEdgeStartTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6599</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6599</i>
	 */
	public static native int dAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6600</i>
	 */
	public static native int dAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6601</i>
	 */
	public static native int dAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6603</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6603</i>
	 */
	public static native int dAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6604</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6604</i>
	 */
	public static native int dAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6605</i>
	 */
	public static native int dAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6607</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetDigEdgeStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6607</i>
	 */
	public static native int dAQmxGetDigEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6608</i>
	 */
	public static native int dAQmxSetDigEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6609</i>
	 */
	public static native int dAQmxResetDigEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6611</i>
	 */
	public static native int dAQmxGetDigEdgeStartTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6612</i>
	 */
	public static native int dAQmxSetDigEdgeStartTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6613</i>
	 */
	public static native int dAQmxResetDigEdgeStartTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6615</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigPatternStartTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigPatternStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigPatternStartTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6615</i>
	 */
	public static native int dAQmxGetDigPatternStartTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6616</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigPatternStartTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigPatternStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigPatternStartTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6616</i>
	 */
	public static native int dAQmxSetDigPatternStartTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternStartTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6617</i>
	 */
	public static native int dAQmxResetDigPatternStartTrigSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_StartTrig_Pattern ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternStartTrigPattern(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6619</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigPatternStartTrigPattern(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigPatternStartTrigPattern(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigPatternStartTrigPattern(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_StartTrig_Pattern ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternStartTrigPattern(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6619</i>
	 */
	public static native int dAQmxGetDigPatternStartTrigPattern(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternStartTrigPattern(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6620</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigPatternStartTrigPattern(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigPatternStartTrigPattern(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigPatternStartTrigPattern(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternStartTrigPattern(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6620</i>
	 */
	public static native int dAQmxSetDigPatternStartTrigPattern(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternStartTrigPattern(TaskHandle)</code><br>
	 * <i>native declaration : line 6621</i>
	 */
	public static native int dAQmxResetDigPatternStartTrigPattern(Pointer taskHandle);
	/**
	 * Uses value set DigitalPatternCondition1<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternStartTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6624</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigPatternStartTrigWhen(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetDigPatternStartTrigWhen(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigPatternStartTrigWhen(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set DigitalPatternCondition1<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternStartTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6624</i>
	 */
	public static native int dAQmxGetDigPatternStartTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternStartTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6625</i>
	 */
	public static native int dAQmxSetDigPatternStartTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternStartTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6626</i>
	 */
	public static native int dAQmxResetDigPatternStartTrigWhen(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6628</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeStartTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAnlgEdgeStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeStartTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6628</i>
	 */
	public static native int dAQmxGetAnlgEdgeStartTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6629</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnlgEdgeStartTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAnlgEdgeStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnlgEdgeStartTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6629</i>
	 */
	public static native int dAQmxSetAnlgEdgeStartTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6630</i>
	 */
	public static native int dAQmxResetAnlgEdgeStartTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Slope1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigSlope(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6633</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeStartTrigSlope(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAnlgEdgeStartTrigSlope(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeStartTrigSlope(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Slope1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigSlope(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6633</i>
	 */
	public static native int dAQmxGetAnlgEdgeStartTrigSlope(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigSlope(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6634</i>
	 */
	public static native int dAQmxSetAnlgEdgeStartTrigSlope(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigSlope(TaskHandle)</code><br>
	 * <i>native declaration : line 6635</i>
	 */
	public static native int dAQmxResetAnlgEdgeStartTrigSlope(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_Lvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigLvl(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6637</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeStartTrigLvl(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgEdgeStartTrigLvl(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeStartTrigLvl(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_Lvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigLvl(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6637</i>
	 */
	public static native int dAQmxGetAnlgEdgeStartTrigLvl(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigLvl(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6638</i>
	 */
	public static native int dAQmxSetAnlgEdgeStartTrigLvl(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 6639</i>
	 */
	public static native int dAQmxResetAnlgEdgeStartTrigLvl(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigHyst(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6641</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeStartTrigHyst(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgEdgeStartTrigHyst(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeStartTrigHyst(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigHyst(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6641</i>
	 */
	public static native int dAQmxGetAnlgEdgeStartTrigHyst(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigHyst(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6642</i>
	 */
	public static native int dAQmxSetAnlgEdgeStartTrigHyst(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigHyst(TaskHandle)</code><br>
	 * <i>native declaration : line 6643</i>
	 */
	public static native int dAQmxResetAnlgEdgeStartTrigHyst(Pointer taskHandle);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6646</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeStartTrigCoupling(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAnlgEdgeStartTrigCoupling(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeStartTrigCoupling(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6646</i>
	 */
	public static native int dAQmxGetAnlgEdgeStartTrigCoupling(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigCoupling(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6647</i>
	 */
	public static native int dAQmxSetAnlgEdgeStartTrigCoupling(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigCoupling(TaskHandle)</code><br>
	 * <i>native declaration : line 6648</i>
	 */
	public static native int dAQmxResetAnlgEdgeStartTrigCoupling(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6650</i>
	 */
	public static native int dAQmxGetAnlgEdgeStartTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6651</i>
	 */
	public static native int dAQmxSetAnlgEdgeStartTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6652</i>
	 */
	public static native int dAQmxResetAnlgEdgeStartTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6654</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6654</i>
	 */
	public static native int dAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6655</i>
	 */
	public static native int dAQmxSetAnlgEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6656</i>
	 */
	public static native int dAQmxResetAnlgEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6658</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6658</i>
	 */
	public static native int dAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6659</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6659</i>
	 */
	public static native int dAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6660</i>
	 */
	public static native int dAQmxResetAnlgEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6662</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6662</i>
	 */
	public static native int dAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6663</i>
	 */
	public static native int dAQmxSetAnlgEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6664</i>
	 */
	public static native int dAQmxResetAnlgEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6666</i>
	 */
	public static native int dAQmxGetAnlgEdgeStartTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6667</i>
	 */
	public static native int dAQmxSetAnlgEdgeStartTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6668</i>
	 */
	public static native int dAQmxResetAnlgEdgeStartTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6670</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinStartTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAnlgWinStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinStartTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6670</i>
	 */
	public static native int dAQmxGetAnlgWinStartTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6671</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnlgWinStartTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAnlgWinStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnlgWinStartTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6671</i>
	 */
	public static native int dAQmxSetAnlgWinStartTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6672</i>
	 */
	public static native int dAQmxResetAnlgWinStartTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set WindowTriggerCondition1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6675</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinStartTrigWhen(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAnlgWinStartTrigWhen(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinStartTrigWhen(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set WindowTriggerCondition1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6675</i>
	 */
	public static native int dAQmxGetAnlgWinStartTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6676</i>
	 */
	public static native int dAQmxSetAnlgWinStartTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6677</i>
	 */
	public static native int dAQmxResetAnlgWinStartTrigWhen(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_Top ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigTop(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6679</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinStartTrigTop(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgWinStartTrigTop(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinStartTrigTop(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_Top ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigTop(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6679</i>
	 */
	public static native int dAQmxGetAnlgWinStartTrigTop(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigTop(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6680</i>
	 */
	public static native int dAQmxSetAnlgWinStartTrigTop(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigTop(TaskHandle)</code><br>
	 * <i>native declaration : line 6681</i>
	 */
	public static native int dAQmxResetAnlgWinStartTrigTop(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_Btm ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigBtm(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6683</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinStartTrigBtm(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgWinStartTrigBtm(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinStartTrigBtm(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_Btm ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigBtm(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6683</i>
	 */
	public static native int dAQmxGetAnlgWinStartTrigBtm(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigBtm(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6684</i>
	 */
	public static native int dAQmxSetAnlgWinStartTrigBtm(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigBtm(TaskHandle)</code><br>
	 * <i>native declaration : line 6685</i>
	 */
	public static native int dAQmxResetAnlgWinStartTrigBtm(Pointer taskHandle);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6688</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinStartTrigCoupling(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAnlgWinStartTrigCoupling(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinStartTrigCoupling(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6688</i>
	 */
	public static native int dAQmxGetAnlgWinStartTrigCoupling(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigCoupling(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6689</i>
	 */
	public static native int dAQmxSetAnlgWinStartTrigCoupling(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigCoupling(TaskHandle)</code><br>
	 * <i>native declaration : line 6690</i>
	 */
	public static native int dAQmxResetAnlgWinStartTrigCoupling(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6692</i>
	 */
	public static native int dAQmxGetAnlgWinStartTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6693</i>
	 */
	public static native int dAQmxSetAnlgWinStartTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6694</i>
	 */
	public static native int dAQmxResetAnlgWinStartTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6696</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6696</i>
	 */
	public static native int dAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6697</i>
	 */
	public static native int dAQmxSetAnlgWinStartTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6698</i>
	 */
	public static native int dAQmxResetAnlgWinStartTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6700</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6700</i>
	 */
	public static native int dAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6701</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6701</i>
	 */
	public static native int dAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6702</i>
	 */
	public static native int dAQmxResetAnlgWinStartTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6704</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgWinStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6704</i>
	 */
	public static native int dAQmxGetAnlgWinStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6705</i>
	 */
	public static native int dAQmxSetAnlgWinStartTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6706</i>
	 */
	public static native int dAQmxResetAnlgWinStartTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6708</i>
	 */
	public static native int dAQmxGetAnlgWinStartTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6709</i>
	 */
	public static native int dAQmxSetAnlgWinStartTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6710</i>
	 */
	public static native int dAQmxResetAnlgWinStartTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_StartTrig_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6712</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetStartTrigDelay(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetStartTrigDelay(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetStartTrigDelay(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_StartTrig_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6712</i>
	 */
	public static native int dAQmxGetStartTrigDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetStartTrigDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6713</i>
	 */
	public static native int dAQmxSetStartTrigDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetStartTrigDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 6714</i>
	 */
	public static native int dAQmxResetStartTrigDelay(Pointer taskHandle);
	/**
	 * Uses value set DigitalWidthUnits1<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigDelayUnits(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6717</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetStartTrigDelayUnits(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetStartTrigDelayUnits(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetStartTrigDelayUnits(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set DigitalWidthUnits1<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigDelayUnits(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6717</i>
	 */
	public static native int dAQmxGetStartTrigDelayUnits(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetStartTrigDelayUnits(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6718</i>
	 */
	public static native int dAQmxSetStartTrigDelayUnits(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetStartTrigDelayUnits(TaskHandle)</code><br>
	 * <i>native declaration : line 6719</i>
	 */
	public static native int dAQmxResetStartTrigDelayUnits(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_StartTrig_Retriggerable ***<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigRetriggerable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6721</i>
	 */
	public static native int dAQmxGetStartTrigRetriggerable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetStartTrigRetriggerable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6722</i>
	 */
	public static native int dAQmxSetStartTrigRetriggerable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetStartTrigRetriggerable(TaskHandle)</code><br>
	 * <i>native declaration : line 6723</i>
	 */
	public static native int dAQmxResetStartTrigRetriggerable(Pointer taskHandle);
	/**
	 * Uses value set TriggerType8<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6726</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetRefTrigType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetRefTrigType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetRefTrigType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set TriggerType8<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6726</i>
	 */
	public static native int dAQmxGetRefTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetRefTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6727</i>
	 */
	public static native int dAQmxSetRefTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetRefTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 6728</i>
	 */
	public static native int dAQmxResetRefTrigType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RefTrig_PretrigSamples ***<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigPretrigSamples(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6730</i>
	 */
	public static native int dAQmxGetRefTrigPretrigSamples(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetRefTrigPretrigSamples(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6731</i>
	 */
	public static native int dAQmxSetRefTrigPretrigSamples(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetRefTrigPretrigSamples(TaskHandle)</code><br>
	 * <i>native declaration : line 6732</i>
	 */
	public static native int dAQmxResetRefTrigPretrigSamples(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RefTrig_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6734</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetRefTrigTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetRefTrigTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetRefTrigTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_RefTrig_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6734</i>
	 */
	public static native int dAQmxGetRefTrigTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6736</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeRefTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigEdgeRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeRefTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6736</i>
	 */
	public static native int dAQmxGetDigEdgeRefTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6737</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigEdgeRefTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigEdgeRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigEdgeRefTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6737</i>
	 */
	public static native int dAQmxSetDigEdgeRefTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6738</i>
	 */
	public static native int dAQmxResetDigEdgeRefTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6741</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeRefTrigEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetDigEdgeRefTrigEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeRefTrigEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6741</i>
	 */
	public static native int dAQmxGetDigEdgeRefTrigEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6742</i>
	 */
	public static native int dAQmxSetDigEdgeRefTrigEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 6743</i>
	 */
	public static native int dAQmxResetDigEdgeRefTrigEdge(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6745</i>
	 */
	public static native int dAQmxGetDigEdgeRefTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6746</i>
	 */
	public static native int dAQmxSetDigEdgeRefTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6747</i>
	 */
	public static native int dAQmxResetDigEdgeRefTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6749</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6749</i>
	 */
	public static native int dAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6750</i>
	 */
	public static native int dAQmxSetDigEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6751</i>
	 */
	public static native int dAQmxResetDigEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6753</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6753</i>
	 */
	public static native int dAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6754</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6754</i>
	 */
	public static native int dAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6755</i>
	 */
	public static native int dAQmxResetDigEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6757</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeRefTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetDigEdgeRefTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6757</i>
	 */
	public static native int dAQmxGetDigEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6758</i>
	 */
	public static native int dAQmxSetDigEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6759</i>
	 */
	public static native int dAQmxResetDigEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6761</i>
	 */
	public static native int dAQmxGetDigEdgeRefTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6762</i>
	 */
	public static native int dAQmxSetDigEdgeRefTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6763</i>
	 */
	public static native int dAQmxResetDigEdgeRefTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6765</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigPatternRefTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigPatternRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigPatternRefTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6765</i>
	 */
	public static native int dAQmxGetDigPatternRefTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6766</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigPatternRefTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigPatternRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigPatternRefTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6766</i>
	 */
	public static native int dAQmxSetDigPatternRefTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternRefTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6767</i>
	 */
	public static native int dAQmxResetDigPatternRefTrigSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_RefTrig_Pattern ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternRefTrigPattern(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6769</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigPatternRefTrigPattern(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigPatternRefTrigPattern(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigPatternRefTrigPattern(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_RefTrig_Pattern ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternRefTrigPattern(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6769</i>
	 */
	public static native int dAQmxGetDigPatternRefTrigPattern(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternRefTrigPattern(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6770</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigPatternRefTrigPattern(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigPatternRefTrigPattern(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigPatternRefTrigPattern(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternRefTrigPattern(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6770</i>
	 */
	public static native int dAQmxSetDigPatternRefTrigPattern(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternRefTrigPattern(TaskHandle)</code><br>
	 * <i>native declaration : line 6771</i>
	 */
	public static native int dAQmxResetDigPatternRefTrigPattern(Pointer taskHandle);
	/**
	 * Uses value set DigitalPatternCondition1<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternRefTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6774</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigPatternRefTrigWhen(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetDigPatternRefTrigWhen(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigPatternRefTrigWhen(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set DigitalPatternCondition1<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternRefTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6774</i>
	 */
	public static native int dAQmxGetDigPatternRefTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternRefTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6775</i>
	 */
	public static native int dAQmxSetDigPatternRefTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternRefTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6776</i>
	 */
	public static native int dAQmxResetDigPatternRefTrigWhen(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6778</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeRefTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAnlgEdgeRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeRefTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6778</i>
	 */
	public static native int dAQmxGetAnlgEdgeRefTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6779</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnlgEdgeRefTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAnlgEdgeRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnlgEdgeRefTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6779</i>
	 */
	public static native int dAQmxSetAnlgEdgeRefTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6780</i>
	 */
	public static native int dAQmxResetAnlgEdgeRefTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Slope1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigSlope(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6783</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeRefTrigSlope(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAnlgEdgeRefTrigSlope(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeRefTrigSlope(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Slope1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigSlope(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6783</i>
	 */
	public static native int dAQmxGetAnlgEdgeRefTrigSlope(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigSlope(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6784</i>
	 */
	public static native int dAQmxSetAnlgEdgeRefTrigSlope(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigSlope(TaskHandle)</code><br>
	 * <i>native declaration : line 6785</i>
	 */
	public static native int dAQmxResetAnlgEdgeRefTrigSlope(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_Lvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigLvl(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6787</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeRefTrigLvl(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgEdgeRefTrigLvl(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeRefTrigLvl(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_Lvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigLvl(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6787</i>
	 */
	public static native int dAQmxGetAnlgEdgeRefTrigLvl(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigLvl(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6788</i>
	 */
	public static native int dAQmxSetAnlgEdgeRefTrigLvl(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 6789</i>
	 */
	public static native int dAQmxResetAnlgEdgeRefTrigLvl(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigHyst(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6791</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeRefTrigHyst(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgEdgeRefTrigHyst(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeRefTrigHyst(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigHyst(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6791</i>
	 */
	public static native int dAQmxGetAnlgEdgeRefTrigHyst(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigHyst(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6792</i>
	 */
	public static native int dAQmxSetAnlgEdgeRefTrigHyst(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigHyst(TaskHandle)</code><br>
	 * <i>native declaration : line 6793</i>
	 */
	public static native int dAQmxResetAnlgEdgeRefTrigHyst(Pointer taskHandle);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6796</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeRefTrigCoupling(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAnlgEdgeRefTrigCoupling(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeRefTrigCoupling(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6796</i>
	 */
	public static native int dAQmxGetAnlgEdgeRefTrigCoupling(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigCoupling(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6797</i>
	 */
	public static native int dAQmxSetAnlgEdgeRefTrigCoupling(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigCoupling(TaskHandle)</code><br>
	 * <i>native declaration : line 6798</i>
	 */
	public static native int dAQmxResetAnlgEdgeRefTrigCoupling(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6800</i>
	 */
	public static native int dAQmxGetAnlgEdgeRefTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6801</i>
	 */
	public static native int dAQmxSetAnlgEdgeRefTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6802</i>
	 */
	public static native int dAQmxResetAnlgEdgeRefTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6804</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeRefTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgEdgeRefTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6804</i>
	 */
	public static native int dAQmxGetAnlgEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6805</i>
	 */
	public static native int dAQmxSetAnlgEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6806</i>
	 */
	public static native int dAQmxResetAnlgEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6808</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAnlgEdgeRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6808</i>
	 */
	public static native int dAQmxGetAnlgEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6809</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnlgEdgeRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAnlgEdgeRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnlgEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6809</i>
	 */
	public static native int dAQmxSetAnlgEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6810</i>
	 */
	public static native int dAQmxResetAnlgEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6812</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgEdgeRefTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgEdgeRefTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6812</i>
	 */
	public static native int dAQmxGetAnlgEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6813</i>
	 */
	public static native int dAQmxSetAnlgEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6814</i>
	 */
	public static native int dAQmxResetAnlgEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6816</i>
	 */
	public static native int dAQmxGetAnlgEdgeRefTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6817</i>
	 */
	public static native int dAQmxSetAnlgEdgeRefTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6818</i>
	 */
	public static native int dAQmxResetAnlgEdgeRefTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6820</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinRefTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAnlgWinRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinRefTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6820</i>
	 */
	public static native int dAQmxGetAnlgWinRefTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6821</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnlgWinRefTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAnlgWinRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnlgWinRefTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6821</i>
	 */
	public static native int dAQmxSetAnlgWinRefTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6822</i>
	 */
	public static native int dAQmxResetAnlgWinRefTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set WindowTriggerCondition1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6825</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinRefTrigWhen(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAnlgWinRefTrigWhen(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinRefTrigWhen(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set WindowTriggerCondition1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6825</i>
	 */
	public static native int dAQmxGetAnlgWinRefTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6826</i>
	 */
	public static native int dAQmxSetAnlgWinRefTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6827</i>
	 */
	public static native int dAQmxResetAnlgWinRefTrigWhen(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_Top ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigTop(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6829</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinRefTrigTop(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgWinRefTrigTop(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinRefTrigTop(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_Top ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigTop(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6829</i>
	 */
	public static native int dAQmxGetAnlgWinRefTrigTop(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigTop(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6830</i>
	 */
	public static native int dAQmxSetAnlgWinRefTrigTop(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigTop(TaskHandle)</code><br>
	 * <i>native declaration : line 6831</i>
	 */
	public static native int dAQmxResetAnlgWinRefTrigTop(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_Btm ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigBtm(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6833</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinRefTrigBtm(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgWinRefTrigBtm(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinRefTrigBtm(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_Btm ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigBtm(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6833</i>
	 */
	public static native int dAQmxGetAnlgWinRefTrigBtm(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigBtm(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6834</i>
	 */
	public static native int dAQmxSetAnlgWinRefTrigBtm(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigBtm(TaskHandle)</code><br>
	 * <i>native declaration : line 6835</i>
	 */
	public static native int dAQmxResetAnlgWinRefTrigBtm(Pointer taskHandle);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6838</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinRefTrigCoupling(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAnlgWinRefTrigCoupling(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinRefTrigCoupling(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6838</i>
	 */
	public static native int dAQmxGetAnlgWinRefTrigCoupling(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigCoupling(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6839</i>
	 */
	public static native int dAQmxSetAnlgWinRefTrigCoupling(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigCoupling(TaskHandle)</code><br>
	 * <i>native declaration : line 6840</i>
	 */
	public static native int dAQmxResetAnlgWinRefTrigCoupling(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6842</i>
	 */
	public static native int dAQmxGetAnlgWinRefTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6843</i>
	 */
	public static native int dAQmxSetAnlgWinRefTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6844</i>
	 */
	public static native int dAQmxResetAnlgWinRefTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6846</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinRefTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgWinRefTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinRefTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6846</i>
	 */
	public static native int dAQmxGetAnlgWinRefTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6847</i>
	 */
	public static native int dAQmxSetAnlgWinRefTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6848</i>
	 */
	public static native int dAQmxResetAnlgWinRefTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6850</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAnlgWinRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinRefTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6850</i>
	 */
	public static native int dAQmxGetAnlgWinRefTrigDigFltrTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6851</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnlgWinRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAnlgWinRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnlgWinRefTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6851</i>
	 */
	public static native int dAQmxSetAnlgWinRefTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6852</i>
	 */
	public static native int dAQmxResetAnlgWinRefTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6854</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinRefTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgWinRefTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinRefTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6854</i>
	 */
	public static native int dAQmxGetAnlgWinRefTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6855</i>
	 */
	public static native int dAQmxSetAnlgWinRefTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6856</i>
	 */
	public static native int dAQmxResetAnlgWinRefTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6858</i>
	 */
	public static native int dAQmxGetAnlgWinRefTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6859</i>
	 */
	public static native int dAQmxSetAnlgWinRefTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6860</i>
	 */
	public static native int dAQmxResetAnlgWinRefTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RefTrig_AutoTrigEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigAutoTrigEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6862</i>
	 */
	public static native int dAQmxGetRefTrigAutoTrigEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetRefTrigAutoTrigEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6863</i>
	 */
	public static native int dAQmxSetRefTrigAutoTrigEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetRefTrigAutoTrigEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6864</i>
	 */
	public static native int dAQmxResetRefTrigAutoTrigEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RefTrig_AutoTriggered ***<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigAutoTriggered(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6866</i>
	 */
	public static native int dAQmxGetRefTrigAutoTriggered(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_RefTrig_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6868</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetRefTrigDelay(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetRefTrigDelay(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetRefTrigDelay(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_RefTrig_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6868</i>
	 */
	public static native int dAQmxGetRefTrigDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetRefTrigDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6869</i>
	 */
	public static native int dAQmxSetRefTrigDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetRefTrigDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 6870</i>
	 */
	public static native int dAQmxResetRefTrigDelay(Pointer taskHandle);
	/**
	 * Uses value set TriggerType5<br>
	 * Original signature : <code>int32 DAQmxGetAdvTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6873</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAdvTrigType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAdvTrigType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAdvTrigType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set TriggerType5<br>
	 * Original signature : <code>int32 DAQmxGetAdvTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6873</i>
	 */
	public static native int dAQmxGetAdvTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAdvTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6874</i>
	 */
	public static native int dAQmxSetAdvTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAdvTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 6875</i>
	 */
	public static native int dAQmxResetAdvTrigType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_AdvTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeAdvTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6877</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeAdvTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigEdgeAdvTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeAdvTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_AdvTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeAdvTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6877</i>
	 */
	public static native int dAQmxGetDigEdgeAdvTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeAdvTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6878</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigEdgeAdvTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigEdgeAdvTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigEdgeAdvTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeAdvTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6878</i>
	 */
	public static native int dAQmxSetDigEdgeAdvTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeAdvTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6879</i>
	 */
	public static native int dAQmxResetDigEdgeAdvTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeAdvTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6882</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeAdvTrigEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetDigEdgeAdvTrigEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeAdvTrigEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeAdvTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6882</i>
	 */
	public static native int dAQmxGetDigEdgeAdvTrigEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeAdvTrigEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6883</i>
	 */
	public static native int dAQmxSetDigEdgeAdvTrigEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeAdvTrigEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 6884</i>
	 */
	public static native int dAQmxResetDigEdgeAdvTrigEdge(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_AdvTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeAdvTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6886</i>
	 */
	public static native int dAQmxGetDigEdgeAdvTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeAdvTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6887</i>
	 */
	public static native int dAQmxSetDigEdgeAdvTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeAdvTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6888</i>
	 */
	public static native int dAQmxResetDigEdgeAdvTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * Uses value set TriggerType9<br>
	 * Original signature : <code>int32 DAQmxGetHshkTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6891</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetHshkTrigType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetHshkTrigType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetHshkTrigType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set TriggerType9<br>
	 * Original signature : <code>int32 DAQmxGetHshkTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6891</i>
	 */
	public static native int dAQmxGetHshkTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetHshkTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6892</i>
	 */
	public static native int dAQmxSetHshkTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetHshkTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 6893</i>
	 */
	public static native int dAQmxResetHshkTrigType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Interlocked_HshkTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetInterlockedHshkTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6895</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetInterlockedHshkTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetInterlockedHshkTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetInterlockedHshkTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Interlocked_HshkTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetInterlockedHshkTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6895</i>
	 */
	public static native int dAQmxGetInterlockedHshkTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetInterlockedHshkTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6896</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetInterlockedHshkTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetInterlockedHshkTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetInterlockedHshkTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetInterlockedHshkTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6896</i>
	 */
	public static native int dAQmxSetInterlockedHshkTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetInterlockedHshkTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6897</i>
	 */
	public static native int dAQmxResetInterlockedHshkTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetInterlockedHshkTrigAssertedLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6900</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetInterlockedHshkTrigAssertedLvl(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetInterlockedHshkTrigAssertedLvl(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetInterlockedHshkTrigAssertedLvl(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetInterlockedHshkTrigAssertedLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6900</i>
	 */
	public static native int dAQmxGetInterlockedHshkTrigAssertedLvl(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetInterlockedHshkTrigAssertedLvl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6901</i>
	 */
	public static native int dAQmxSetInterlockedHshkTrigAssertedLvl(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetInterlockedHshkTrigAssertedLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 6902</i>
	 */
	public static native int dAQmxResetInterlockedHshkTrigAssertedLvl(Pointer taskHandle);
	/**
	 * Uses value set TriggerType6<br>
	 * Original signature : <code>int32 DAQmxGetPauseTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6905</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPauseTrigType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetPauseTrigType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPauseTrigType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set TriggerType6<br>
	 * Original signature : <code>int32 DAQmxGetPauseTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6905</i>
	 */
	public static native int dAQmxGetPauseTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetPauseTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6906</i>
	 */
	public static native int dAQmxSetPauseTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetPauseTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 6907</i>
	 */
	public static native int dAQmxResetPauseTrigType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_PauseTrig_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetPauseTrigTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6909</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPauseTrigTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetPauseTrigTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPauseTrigTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_PauseTrig_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetPauseTrigTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6909</i>
	 */
	public static native int dAQmxGetPauseTrigTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6911</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgLvlPauseTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAnlgLvlPauseTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgLvlPauseTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6911</i>
	 */
	public static native int dAQmxGetAnlgLvlPauseTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6912</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnlgLvlPauseTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAnlgLvlPauseTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnlgLvlPauseTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6912</i>
	 */
	public static native int dAQmxSetAnlgLvlPauseTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6913</i>
	 */
	public static native int dAQmxResetAnlgLvlPauseTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set ActiveLevel<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6916</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgLvlPauseTrigWhen(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAnlgLvlPauseTrigWhen(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgLvlPauseTrigWhen(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set ActiveLevel<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6916</i>
	 */
	public static native int dAQmxGetAnlgLvlPauseTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6917</i>
	 */
	public static native int dAQmxSetAnlgLvlPauseTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6918</i>
	 */
	public static native int dAQmxResetAnlgLvlPauseTrigWhen(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_Lvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigLvl(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6920</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgLvlPauseTrigLvl(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgLvlPauseTrigLvl(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgLvlPauseTrigLvl(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_Lvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigLvl(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6920</i>
	 */
	public static native int dAQmxGetAnlgLvlPauseTrigLvl(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigLvl(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6921</i>
	 */
	public static native int dAQmxSetAnlgLvlPauseTrigLvl(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 6922</i>
	 */
	public static native int dAQmxResetAnlgLvlPauseTrigLvl(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigHyst(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6924</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgLvlPauseTrigHyst(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgLvlPauseTrigHyst(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgLvlPauseTrigHyst(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigHyst(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6924</i>
	 */
	public static native int dAQmxGetAnlgLvlPauseTrigHyst(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigHyst(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6925</i>
	 */
	public static native int dAQmxSetAnlgLvlPauseTrigHyst(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigHyst(TaskHandle)</code><br>
	 * <i>native declaration : line 6926</i>
	 */
	public static native int dAQmxResetAnlgLvlPauseTrigHyst(Pointer taskHandle);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6929</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgLvlPauseTrigCoupling(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAnlgLvlPauseTrigCoupling(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgLvlPauseTrigCoupling(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6929</i>
	 */
	public static native int dAQmxGetAnlgLvlPauseTrigCoupling(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigCoupling(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6930</i>
	 */
	public static native int dAQmxSetAnlgLvlPauseTrigCoupling(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigCoupling(TaskHandle)</code><br>
	 * <i>native declaration : line 6931</i>
	 */
	public static native int dAQmxResetAnlgLvlPauseTrigCoupling(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6933</i>
	 */
	public static native int dAQmxGetAnlgLvlPauseTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6934</i>
	 */
	public static native int dAQmxSetAnlgLvlPauseTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6935</i>
	 */
	public static native int dAQmxResetAnlgLvlPauseTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6937</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgLvlPauseTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgLvlPauseTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6937</i>
	 */
	public static native int dAQmxGetAnlgLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6938</i>
	 */
	public static native int dAQmxSetAnlgLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6939</i>
	 */
	public static native int dAQmxResetAnlgLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6941</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgLvlPauseTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAnlgLvlPauseTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6941</i>
	 */
	public static native int dAQmxGetAnlgLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6942</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnlgLvlPauseTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAnlgLvlPauseTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnlgLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6942</i>
	 */
	public static native int dAQmxSetAnlgLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6943</i>
	 */
	public static native int dAQmxResetAnlgLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6945</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgLvlPauseTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgLvlPauseTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6945</i>
	 */
	public static native int dAQmxGetAnlgLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6946</i>
	 */
	public static native int dAQmxSetAnlgLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6947</i>
	 */
	public static native int dAQmxResetAnlgLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6949</i>
	 */
	public static native int dAQmxGetAnlgLvlPauseTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6950</i>
	 */
	public static native int dAQmxSetAnlgLvlPauseTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6951</i>
	 */
	public static native int dAQmxResetAnlgLvlPauseTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6953</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinPauseTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAnlgWinPauseTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinPauseTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6953</i>
	 */
	public static native int dAQmxGetAnlgWinPauseTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6954</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnlgWinPauseTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAnlgWinPauseTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnlgWinPauseTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6954</i>
	 */
	public static native int dAQmxSetAnlgWinPauseTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6955</i>
	 */
	public static native int dAQmxResetAnlgWinPauseTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set WindowTriggerCondition2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6958</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinPauseTrigWhen(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAnlgWinPauseTrigWhen(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinPauseTrigWhen(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set WindowTriggerCondition2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6958</i>
	 */
	public static native int dAQmxGetAnlgWinPauseTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6959</i>
	 */
	public static native int dAQmxSetAnlgWinPauseTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6960</i>
	 */
	public static native int dAQmxResetAnlgWinPauseTrigWhen(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_Top ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigTop(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6962</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinPauseTrigTop(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgWinPauseTrigTop(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinPauseTrigTop(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_Top ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigTop(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6962</i>
	 */
	public static native int dAQmxGetAnlgWinPauseTrigTop(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigTop(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6963</i>
	 */
	public static native int dAQmxSetAnlgWinPauseTrigTop(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigTop(TaskHandle)</code><br>
	 * <i>native declaration : line 6964</i>
	 */
	public static native int dAQmxResetAnlgWinPauseTrigTop(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_Btm ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigBtm(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6966</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinPauseTrigBtm(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgWinPauseTrigBtm(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinPauseTrigBtm(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_Btm ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigBtm(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6966</i>
	 */
	public static native int dAQmxGetAnlgWinPauseTrigBtm(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigBtm(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6967</i>
	 */
	public static native int dAQmxSetAnlgWinPauseTrigBtm(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigBtm(TaskHandle)</code><br>
	 * <i>native declaration : line 6968</i>
	 */
	public static native int dAQmxResetAnlgWinPauseTrigBtm(Pointer taskHandle);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6971</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinPauseTrigCoupling(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetAnlgWinPauseTrigCoupling(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinPauseTrigCoupling(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6971</i>
	 */
	public static native int dAQmxGetAnlgWinPauseTrigCoupling(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigCoupling(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6972</i>
	 */
	public static native int dAQmxSetAnlgWinPauseTrigCoupling(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigCoupling(TaskHandle)</code><br>
	 * <i>native declaration : line 6973</i>
	 */
	public static native int dAQmxResetAnlgWinPauseTrigCoupling(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6975</i>
	 */
	public static native int dAQmxGetAnlgWinPauseTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6976</i>
	 */
	public static native int dAQmxSetAnlgWinPauseTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6977</i>
	 */
	public static native int dAQmxResetAnlgWinPauseTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6979</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinPauseTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgWinPauseTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6979</i>
	 */
	public static native int dAQmxGetAnlgWinPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6980</i>
	 */
	public static native int dAQmxSetAnlgWinPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6981</i>
	 */
	public static native int dAQmxResetAnlgWinPauseTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6983</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinPauseTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetAnlgWinPauseTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6983</i>
	 */
	public static native int dAQmxGetAnlgWinPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6984</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAnlgWinPauseTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetAnlgWinPauseTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAnlgWinPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6984</i>
	 */
	public static native int dAQmxSetAnlgWinPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6985</i>
	 */
	public static native int dAQmxResetAnlgWinPauseTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6987</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAnlgWinPauseTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetAnlgWinPauseTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAnlgWinPauseTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6987</i>
	 */
	public static native int dAQmxGetAnlgWinPauseTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6988</i>
	 */
	public static native int dAQmxSetAnlgWinPauseTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6989</i>
	 */
	public static native int dAQmxResetAnlgWinPauseTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6991</i>
	 */
	public static native int dAQmxGetAnlgWinPauseTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6992</i>
	 */
	public static native int dAQmxSetAnlgWinPauseTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6993</i>
	 */
	public static native int dAQmxResetAnlgWinPauseTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6995</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigLvlPauseTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigLvlPauseTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigLvlPauseTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6995</i>
	 */
	public static native int dAQmxGetDigLvlPauseTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6996</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigLvlPauseTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigLvlPauseTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigLvlPauseTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6996</i>
	 */
	public static native int dAQmxSetDigLvlPauseTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6997</i>
	 */
	public static native int dAQmxResetDigLvlPauseTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7000</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigLvlPauseTrigWhen(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetDigLvlPauseTrigWhen(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigLvlPauseTrigWhen(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7000</i>
	 */
	public static native int dAQmxGetDigLvlPauseTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7001</i>
	 */
	public static native int dAQmxSetDigLvlPauseTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 7002</i>
	 */
	public static native int dAQmxResetDigLvlPauseTrigWhen(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7004</i>
	 */
	public static native int dAQmxGetDigLvlPauseTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 7005</i>
	 */
	public static native int dAQmxSetDigLvlPauseTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 7006</i>
	 */
	public static native int dAQmxResetDigLvlPauseTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7008</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7008</i>
	 */
	public static native int dAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 7009</i>
	 */
	public static native int dAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 7010</i>
	 */
	public static native int dAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7012</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7012</i>
	 */
	public static native int dAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7013</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7013</i>
	 */
	public static native int dAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 7014</i>
	 */
	public static native int dAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7016</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigLvlPauseTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetDigLvlPauseTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7016</i>
	 */
	public static native int dAQmxGetDigLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 7017</i>
	 */
	public static native int dAQmxSetDigLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 7018</i>
	 */
	public static native int dAQmxResetDigLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7020</i>
	 */
	public static native int dAQmxGetDigLvlPauseTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 7021</i>
	 */
	public static native int dAQmxSetDigLvlPauseTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 7022</i>
	 */
	public static native int dAQmxResetDigLvlPauseTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_PauseTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternPauseTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7024</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigPatternPauseTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigPatternPauseTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigPatternPauseTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_PauseTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternPauseTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7024</i>
	 */
	public static native int dAQmxGetDigPatternPauseTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternPauseTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7025</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigPatternPauseTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigPatternPauseTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigPatternPauseTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternPauseTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7025</i>
	 */
	public static native int dAQmxSetDigPatternPauseTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternPauseTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 7026</i>
	 */
	public static native int dAQmxResetDigPatternPauseTrigSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_PauseTrig_Pattern ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternPauseTrigPattern(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7028</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigPatternPauseTrigPattern(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigPatternPauseTrigPattern(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigPatternPauseTrigPattern(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_PauseTrig_Pattern ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternPauseTrigPattern(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7028</i>
	 */
	public static native int dAQmxGetDigPatternPauseTrigPattern(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternPauseTrigPattern(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7029</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigPatternPauseTrigPattern(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigPatternPauseTrigPattern(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigPatternPauseTrigPattern(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternPauseTrigPattern(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7029</i>
	 */
	public static native int dAQmxSetDigPatternPauseTrigPattern(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternPauseTrigPattern(TaskHandle)</code><br>
	 * <i>native declaration : line 7030</i>
	 */
	public static native int dAQmxResetDigPatternPauseTrigPattern(Pointer taskHandle);
	/**
	 * Uses value set DigitalPatternCondition1<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternPauseTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7033</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigPatternPauseTrigWhen(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetDigPatternPauseTrigWhen(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigPatternPauseTrigWhen(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set DigitalPatternCondition1<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternPauseTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7033</i>
	 */
	public static native int dAQmxGetDigPatternPauseTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternPauseTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7034</i>
	 */
	public static native int dAQmxSetDigPatternPauseTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternPauseTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 7035</i>
	 */
	public static native int dAQmxResetDigPatternPauseTrigWhen(Pointer taskHandle);
	/**
	 * Uses value set TriggerType4<br>
	 * Original signature : <code>int32 DAQmxGetArmStartTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7038</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetArmStartTrigType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetArmStartTrigType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetArmStartTrigType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set TriggerType4<br>
	 * Original signature : <code>int32 DAQmxGetArmStartTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7038</i>
	 */
	public static native int dAQmxGetArmStartTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetArmStartTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7039</i>
	 */
	public static native int dAQmxSetArmStartTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetArmStartTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 7040</i>
	 */
	public static native int dAQmxResetArmStartTrigType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_ArmStart_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetArmStartTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7042</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetArmStartTerm(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetArmStartTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetArmStartTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_ArmStart_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetArmStartTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7042</i>
	 */
	public static native int dAQmxGetArmStartTerm(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7044</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeArmStartTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigEdgeArmStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeArmStartTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7044</i>
	 */
	public static native int dAQmxGetDigEdgeArmStartTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7045</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigEdgeArmStartTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigEdgeArmStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigEdgeArmStartTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7045</i>
	 */
	public static native int dAQmxSetDigEdgeArmStartTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 7046</i>
	 */
	public static native int dAQmxResetDigEdgeArmStartTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7049</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeArmStartTrigEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetDigEdgeArmStartTrigEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeArmStartTrigEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7049</i>
	 */
	public static native int dAQmxGetDigEdgeArmStartTrigEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7050</i>
	 */
	public static native int dAQmxSetDigEdgeArmStartTrigEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 7051</i>
	 */
	public static native int dAQmxResetDigEdgeArmStartTrigEdge(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7053</i>
	 */
	public static native int dAQmxGetDigEdgeArmStartTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 7054</i>
	 */
	public static native int dAQmxSetDigEdgeArmStartTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 7055</i>
	 */
	public static native int dAQmxResetDigEdgeArmStartTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7057</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7057</i>
	 */
	public static native int dAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 7058</i>
	 */
	public static native int dAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 7059</i>
	 */
	public static native int dAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7061</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7061</i>
	 */
	public static native int dAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7062</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7062</i>
	 */
	public static native int dAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 7063</i>
	 */
	public static native int dAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7065</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7065</i>
	 */
	public static native int dAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 7066</i>
	 */
	public static native int dAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 7067</i>
	 */
	public static native int dAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7069</i>
	 */
	public static native int dAQmxGetDigEdgeArmStartTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 7070</i>
	 */
	public static native int dAQmxSetDigEdgeArmStartTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 7071</i>
	 */
	public static native int dAQmxResetDigEdgeArmStartTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * Uses value set SyncType<br>
	 * Original signature : <code>int32 DAQmxGetTriggerSyncType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7074</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetTriggerSyncType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetTriggerSyncType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetTriggerSyncType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set SyncType<br>
	 * Original signature : <code>int32 DAQmxGetTriggerSyncType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7074</i>
	 */
	public static native int dAQmxGetTriggerSyncType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetTriggerSyncType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7075</i>
	 */
	public static native int dAQmxSetTriggerSyncType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetTriggerSyncType(TaskHandle)</code><br>
	 * <i>native declaration : line 7076</i>
	 */
	public static native int dAQmxResetTriggerSyncType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Watchdog_Timeout ***<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogTimeout(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7080</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWatchdogTimeout(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetWatchdogTimeout(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWatchdogTimeout(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Watchdog_Timeout ***<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogTimeout(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7080</i>
	 */
	public static native int dAQmxGetWatchdogTimeout(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogTimeout(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 7081</i>
	 */
	public static native int dAQmxSetWatchdogTimeout(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogTimeout(TaskHandle)</code><br>
	 * <i>native declaration : line 7082</i>
	 */
	public static native int dAQmxResetWatchdogTimeout(Pointer taskHandle);
	/**
	 * Uses value set TriggerType4<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogExpirTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7085</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWatchdogExpirTrigType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetWatchdogExpirTrigType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWatchdogExpirTrigType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set TriggerType4<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogExpirTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7085</i>
	 */
	public static native int dAQmxGetWatchdogExpirTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogExpirTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7086</i>
	 */
	public static native int dAQmxSetWatchdogExpirTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogExpirTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 7087</i>
	 */
	public static native int dAQmxResetWatchdogExpirTrigType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_WatchdogExpirTrig_TrigOnNetworkConnLoss ***<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogExpirTrigTrigOnNetworkConnLoss(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7089</i>
	 */
	public static native int dAQmxGetWatchdogExpirTrigTrigOnNetworkConnLoss(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogExpirTrigTrigOnNetworkConnLoss(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 7090</i>
	 */
	public static native int dAQmxSetWatchdogExpirTrigTrigOnNetworkConnLoss(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogExpirTrigTrigOnNetworkConnLoss(TaskHandle)</code><br>
	 * <i>native declaration : line 7091</i>
	 */
	public static native int dAQmxResetWatchdogExpirTrigTrigOnNetworkConnLoss(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_WatchdogExpirTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeWatchdogExpirTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7093</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeWatchdogExpirTrigSrc(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetDigEdgeWatchdogExpirTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeWatchdogExpirTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_WatchdogExpirTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeWatchdogExpirTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7093</i>
	 */
	public static native int dAQmxGetDigEdgeWatchdogExpirTrigSrc(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeWatchdogExpirTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7094</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetDigEdgeWatchdogExpirTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #dAQmxSetDigEdgeWatchdogExpirTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetDigEdgeWatchdogExpirTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeWatchdogExpirTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7094</i>
	 */
	public static native int dAQmxSetDigEdgeWatchdogExpirTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeWatchdogExpirTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 7095</i>
	 */
	public static native int dAQmxResetDigEdgeWatchdogExpirTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeWatchdogExpirTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7098</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetDigEdgeWatchdogExpirTrigEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetDigEdgeWatchdogExpirTrigEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetDigEdgeWatchdogExpirTrigEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeWatchdogExpirTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7098</i>
	 */
	public static native int dAQmxGetDigEdgeWatchdogExpirTrigEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeWatchdogExpirTrigEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7099</i>
	 */
	public static native int dAQmxSetDigEdgeWatchdogExpirTrigEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeWatchdogExpirTrigEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 7100</i>
	 */
	public static native int dAQmxResetDigEdgeWatchdogExpirTrigEdge(Pointer taskHandle);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogDOExpirState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 7103</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWatchdogDOExpirState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetWatchdogDOExpirState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWatchdogDOExpirState(Pointer taskHandle, Pointer lines, IntByReference data);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogDOExpirState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 7103</i>
	 */
	public static native int dAQmxGetWatchdogDOExpirState(Pointer taskHandle, byte lines[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogDOExpirState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 7104</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetWatchdogDOExpirState(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetWatchdogDOExpirState(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetWatchdogDOExpirState(Pointer taskHandle, Pointer lines, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogDOExpirState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 7104</i>
	 */
	public static native int dAQmxSetWatchdogDOExpirState(Pointer taskHandle, byte lines[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogDOExpirState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 7105</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetWatchdogDOExpirState(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetWatchdogDOExpirState(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetWatchdogDOExpirState(Pointer taskHandle, Pointer lines);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogDOExpirState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 7105</i>
	 */
	public static native int dAQmxResetWatchdogDOExpirState(Pointer taskHandle, byte lines[]);
	/**
	 * Uses value set WatchdogAOExpirState<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogAOOutputType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 7108</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWatchdogAOOutputType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetWatchdogAOOutputType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWatchdogAOOutputType(Pointer taskHandle, Pointer lines, IntByReference data);
	/**
	 * Uses value set WatchdogAOExpirState<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogAOOutputType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 7108</i>
	 */
	public static native int dAQmxGetWatchdogAOOutputType(Pointer taskHandle, byte lines[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogAOOutputType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 7109</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetWatchdogAOOutputType(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetWatchdogAOOutputType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetWatchdogAOOutputType(Pointer taskHandle, Pointer lines, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogAOOutputType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 7109</i>
	 */
	public static native int dAQmxSetWatchdogAOOutputType(Pointer taskHandle, byte lines[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogAOOutputType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 7110</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetWatchdogAOOutputType(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetWatchdogAOOutputType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetWatchdogAOOutputType(Pointer taskHandle, Pointer lines);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogAOOutputType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 7110</i>
	 */
	public static native int dAQmxResetWatchdogAOOutputType(Pointer taskHandle, byte lines[]);
	/**
	 * *** Set/Get functions for DAQmx_Watchdog_AO_ExpirState ***<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogAOExpirState(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 7112</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWatchdogAOExpirState(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetWatchdogAOExpirState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWatchdogAOExpirState(Pointer taskHandle, Pointer lines, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Watchdog_AO_ExpirState ***<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogAOExpirState(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 7112</i>
	 */
	public static native int dAQmxGetWatchdogAOExpirState(Pointer taskHandle, byte lines[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogAOExpirState(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 7113</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetWatchdogAOExpirState(com.sun.jna.Pointer, byte[], double)} and {@link #dAQmxSetWatchdogAOExpirState(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetWatchdogAOExpirState(Pointer taskHandle, Pointer lines, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogAOExpirState(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 7113</i>
	 */
	public static native int dAQmxSetWatchdogAOExpirState(Pointer taskHandle, byte lines[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogAOExpirState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 7114</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetWatchdogAOExpirState(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetWatchdogAOExpirState(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetWatchdogAOExpirState(Pointer taskHandle, Pointer lines);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogAOExpirState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 7114</i>
	 */
	public static native int dAQmxResetWatchdogAOExpirState(Pointer taskHandle, byte lines[]);
	/**
	 * Uses value set WatchdogCOExpirState<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogCOExpirState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 7117</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWatchdogCOExpirState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #dAQmxGetWatchdogCOExpirState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWatchdogCOExpirState(Pointer taskHandle, Pointer lines, IntByReference data);
	/**
	 * Uses value set WatchdogCOExpirState<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogCOExpirState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 7117</i>
	 */
	public static native int dAQmxGetWatchdogCOExpirState(Pointer taskHandle, byte lines[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogCOExpirState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 7118</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetWatchdogCOExpirState(com.sun.jna.Pointer, byte[], int)} and {@link #dAQmxSetWatchdogCOExpirState(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetWatchdogCOExpirState(Pointer taskHandle, Pointer lines, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogCOExpirState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 7118</i>
	 */
	public static native int dAQmxSetWatchdogCOExpirState(Pointer taskHandle, byte lines[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogCOExpirState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 7119</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetWatchdogCOExpirState(com.sun.jna.Pointer, byte[])} and {@link #dAQmxResetWatchdogCOExpirState(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetWatchdogCOExpirState(Pointer taskHandle, Pointer lines);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogCOExpirState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 7119</i>
	 */
	public static native int dAQmxResetWatchdogCOExpirState(Pointer taskHandle, byte lines[]);
	/**
	 * *** Set/Get functions for DAQmx_Watchdog_HasExpired ***<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogHasExpired(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7121</i>
	 */
	public static native int dAQmxGetWatchdogHasExpired(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Uses value set WriteRelativeTo<br>
	 * Original signature : <code>int32 DAQmxGetWriteRelativeTo(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7126</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWriteRelativeTo(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetWriteRelativeTo(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWriteRelativeTo(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set WriteRelativeTo<br>
	 * Original signature : <code>int32 DAQmxGetWriteRelativeTo(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7126</i>
	 */
	public static native int dAQmxGetWriteRelativeTo(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWriteRelativeTo(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7127</i>
	 */
	public static native int dAQmxSetWriteRelativeTo(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetWriteRelativeTo(TaskHandle)</code><br>
	 * <i>native declaration : line 7128</i>
	 */
	public static native int dAQmxResetWriteRelativeTo(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Write_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOffset(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7130</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWriteOffset(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetWriteOffset(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWriteOffset(Pointer taskHandle, IntByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOffset(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7130</i>
	 */
	public static native int dAQmxGetWriteOffset(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWriteOffset(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7131</i>
	 */
	public static native int dAQmxSetWriteOffset(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetWriteOffset(TaskHandle)</code><br>
	 * <i>native declaration : line 7132</i>
	 */
	public static native int dAQmxResetWriteOffset(Pointer taskHandle);
	/**
	 * Uses value set RegenerationMode1<br>
	 * Original signature : <code>int32 DAQmxGetWriteRegenMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7135</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWriteRegenMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetWriteRegenMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWriteRegenMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set RegenerationMode1<br>
	 * Original signature : <code>int32 DAQmxGetWriteRegenMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7135</i>
	 */
	public static native int dAQmxGetWriteRegenMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWriteRegenMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7136</i>
	 */
	public static native int dAQmxSetWriteRegenMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetWriteRegenMode(TaskHandle)</code><br>
	 * <i>native declaration : line 7137</i>
	 */
	public static native int dAQmxResetWriteRegenMode(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Write_CurrWritePos ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteCurrWritePos(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 7139</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWriteCurrWritePos(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #dAQmxGetWriteCurrWritePos(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWriteCurrWritePos(Pointer taskHandle, LongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_CurrWritePos ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteCurrWritePos(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 7139</i>
	 */
	public static native int dAQmxGetWriteCurrWritePos(Pointer taskHandle, LongBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Write_OvercurrentChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOvercurrentChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7141</i>
	 */
	public static native int dAQmxGetWriteOvercurrentChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_OvercurrentChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOvercurrentChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7143</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWriteOvercurrentChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetWriteOvercurrentChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWriteOvercurrentChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_OvercurrentChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOvercurrentChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7143</i>
	 */
	public static native int dAQmxGetWriteOvercurrentChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_OvertemperatureChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOvertemperatureChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7145</i>
	 */
	public static native int dAQmxGetWriteOvertemperatureChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_OvertemperatureChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOvertemperatureChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7147</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWriteOvertemperatureChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetWriteOvertemperatureChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWriteOvertemperatureChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_OvertemperatureChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOvertemperatureChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7147</i>
	 */
	public static native int dAQmxGetWriteOvertemperatureChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_ExternalOvervoltageChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteExternalOvervoltageChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7149</i>
	 */
	public static native int dAQmxGetWriteExternalOvervoltageChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_ExternalOvervoltageChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteExternalOvervoltageChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7151</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWriteExternalOvervoltageChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetWriteExternalOvervoltageChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWriteExternalOvervoltageChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_ExternalOvervoltageChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteExternalOvervoltageChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7151</i>
	 */
	public static native int dAQmxGetWriteExternalOvervoltageChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_OverloadedChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOverloadedChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7153</i>
	 */
	public static native int dAQmxGetWriteOverloadedChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_OverloadedChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOverloadedChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7155</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWriteOverloadedChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetWriteOverloadedChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWriteOverloadedChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_OverloadedChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOverloadedChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7155</i>
	 */
	public static native int dAQmxGetWriteOverloadedChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_OpenCurrentLoopChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOpenCurrentLoopChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7157</i>
	 */
	public static native int dAQmxGetWriteOpenCurrentLoopChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_OpenCurrentLoopChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOpenCurrentLoopChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7159</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWriteOpenCurrentLoopChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetWriteOpenCurrentLoopChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWriteOpenCurrentLoopChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_OpenCurrentLoopChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOpenCurrentLoopChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7159</i>
	 */
	public static native int dAQmxGetWriteOpenCurrentLoopChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_PowerSupplyFaultChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetWritePowerSupplyFaultChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7161</i>
	 */
	public static native int dAQmxGetWritePowerSupplyFaultChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_PowerSupplyFaultChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWritePowerSupplyFaultChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7163</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWritePowerSupplyFaultChans(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetWritePowerSupplyFaultChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWritePowerSupplyFaultChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_PowerSupplyFaultChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWritePowerSupplyFaultChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7163</i>
	 */
	public static native int dAQmxGetWritePowerSupplyFaultChans(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_SpaceAvail ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteSpaceAvail(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 7165</i>
	 */
	public static native int dAQmxGetWriteSpaceAvail(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_TotalSampPerChanGenerated ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteTotalSampPerChanGenerated(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 7167</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWriteTotalSampPerChanGenerated(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #dAQmxGetWriteTotalSampPerChanGenerated(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWriteTotalSampPerChanGenerated(Pointer taskHandle, LongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_TotalSampPerChanGenerated ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteTotalSampPerChanGenerated(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 7167</i>
	 */
	public static native int dAQmxGetWriteTotalSampPerChanGenerated(Pointer taskHandle, LongBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Write_AccessoryInsertionOrRemovalDetected ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteAccessoryInsertionOrRemovalDetected(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7169</i>
	 */
	public static native int dAQmxGetWriteAccessoryInsertionOrRemovalDetected(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_DevsWithInsertedOrRemovedAccessories ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteDevsWithInsertedOrRemovedAccessories(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7171</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWriteDevsWithInsertedOrRemovedAccessories(com.sun.jna.Pointer, java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetWriteDevsWithInsertedOrRemovedAccessories(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWriteDevsWithInsertedOrRemovedAccessories(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_DevsWithInsertedOrRemovedAccessories ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteDevsWithInsertedOrRemovedAccessories(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7171</i>
	 */
	public static native int dAQmxGetWriteDevsWithInsertedOrRemovedAccessories(Pointer taskHandle, String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_RawDataWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteRawDataWidth(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 7173</i>
	 */
	public static native int dAQmxGetWriteRawDataWidth(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_NumChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteNumChans(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 7175</i>
	 */
	public static native int dAQmxGetWriteNumChans(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Uses value set WaitMode2<br>
	 * Original signature : <code>int32 DAQmxGetWriteWaitMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7178</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWriteWaitMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetWriteWaitMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWriteWaitMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set WaitMode2<br>
	 * Original signature : <code>int32 DAQmxGetWriteWaitMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7178</i>
	 */
	public static native int dAQmxGetWriteWaitMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWriteWaitMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7179</i>
	 */
	public static native int dAQmxSetWriteWaitMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetWriteWaitMode(TaskHandle)</code><br>
	 * <i>native declaration : line 7180</i>
	 */
	public static native int dAQmxResetWriteWaitMode(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Write_SleepTime ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteSleepTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7182</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetWriteSleepTime(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #dAQmxGetWriteSleepTime(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetWriteSleepTime(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_SleepTime ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteSleepTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7182</i>
	 */
	public static native int dAQmxGetWriteSleepTime(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWriteSleepTime(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 7183</i>
	 */
	public static native int dAQmxSetWriteSleepTime(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetWriteSleepTime(TaskHandle)</code><br>
	 * <i>native declaration : line 7184</i>
	 */
	public static native int dAQmxResetWriteSleepTime(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Write_DigitalLines_BytesPerChan ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteDigitalLinesBytesPerChan(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 7186</i>
	 */
	public static native int dAQmxGetWriteDigitalLinesBytesPerChan(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Uses value set AIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7191</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanAISupportedMeasTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetPhysicalChanAISupportedMeasTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanAISupportedMeasTypes(Pointer physicalChannel, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7191</i>
	 */
	public static native int dAQmxGetPhysicalChanAISupportedMeasTypes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses bits from enum TerminalConfigurationBits<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAITermCfgs(const char[], int32*)</code><br>
	 * <i>native declaration : line 7194</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanAITermCfgs(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetPhysicalChanAITermCfgs(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanAITermCfgs(Pointer physicalChannel, IntByReference data);
	/**
	 * Uses bits from enum TerminalConfigurationBits<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAITermCfgs(const char[], int32*)</code><br>
	 * <i>native declaration : line 7194</i>
	 */
	public static native int dAQmxGetPhysicalChanAITermCfgs(byte physicalChannel[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AI_InputSrcs ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAIInputSrcs(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7196</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanAIInputSrcs(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetPhysicalChanAIInputSrcs(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanAIInputSrcs(Pointer physicalChannel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AI_InputSrcs ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAIInputSrcs(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7196</i>
	 */
	public static native int dAQmxGetPhysicalChanAIInputSrcs(byte physicalChannel[], String data, NativeLong bufferSize);
	/**
	 * Uses value set AOOutputChannelType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7199</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanAOSupportedOutputTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetPhysicalChanAOSupportedOutputTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanAOSupportedOutputTypes(Pointer physicalChannel, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AOOutputChannelType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7199</i>
	 */
	public static native int dAQmxGetPhysicalChanAOSupportedOutputTypes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AOPowerUpOutputBehavior<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOSupportedPowerUpOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7202</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanAOSupportedPowerUpOutputTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetPhysicalChanAOSupportedPowerUpOutputTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanAOSupportedPowerUpOutputTypes(Pointer physicalChannel, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AOPowerUpOutputBehavior<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOSupportedPowerUpOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7202</i>
	 */
	public static native int dAQmxGetPhysicalChanAOSupportedPowerUpOutputTypes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses bits from enum TerminalConfigurationBits<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOTermCfgs(const char[], int32*)</code><br>
	 * <i>native declaration : line 7205</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanAOTermCfgs(byte[], java.nio.IntBuffer)} and {@link #dAQmxGetPhysicalChanAOTermCfgs(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanAOTermCfgs(Pointer physicalChannel, IntByReference data);
	/**
	 * Uses bits from enum TerminalConfigurationBits<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOTermCfgs(const char[], int32*)</code><br>
	 * <i>native declaration : line 7205</i>
	 */
	public static native int dAQmxGetPhysicalChanAOTermCfgs(byte physicalChannel[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AO_ManualControlEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOManualControlEnable(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7207</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanAOManualControlEnable(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPhysicalChanAOManualControlEnable(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanAOManualControlEnable(Pointer physicalChannel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AO_ManualControlEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOManualControlEnable(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7207</i>
	 */
	public static native int dAQmxGetPhysicalChanAOManualControlEnable(byte physicalChannel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetPhysicalChanAOManualControlEnable(const char[], bool32)</code><br>
	 * <i>native declaration : line 7208</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetPhysicalChanAOManualControlEnable(byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetPhysicalChanAOManualControlEnable(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetPhysicalChanAOManualControlEnable(Pointer physicalChannel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetPhysicalChanAOManualControlEnable(const char[], bool32)</code><br>
	 * <i>native declaration : line 7208</i>
	 */
	public static native int dAQmxSetPhysicalChanAOManualControlEnable(byte physicalChannel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetPhysicalChanAOManualControlEnable(const char[])</code><br>
	 * <i>native declaration : line 7209</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetPhysicalChanAOManualControlEnable(byte[])} and {@link #dAQmxResetPhysicalChanAOManualControlEnable(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetPhysicalChanAOManualControlEnable(Pointer physicalChannel);
	/**
	 * Original signature : <code>int32 DAQmxResetPhysicalChanAOManualControlEnable(const char[])</code><br>
	 * <i>native declaration : line 7209</i>
	 */
	public static native int dAQmxResetPhysicalChanAOManualControlEnable(byte physicalChannel[]);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AO_ManualControl_ShortDetected ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOManualControlShortDetected(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7211</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanAOManualControlShortDetected(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPhysicalChanAOManualControlShortDetected(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanAOManualControlShortDetected(Pointer physicalChannel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AO_ManualControl_ShortDetected ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOManualControlShortDetected(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7211</i>
	 */
	public static native int dAQmxGetPhysicalChanAOManualControlShortDetected(byte physicalChannel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AO_ManualControlAmplitude ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOManualControlAmplitude(const char[], float64*)</code><br>
	 * <i>native declaration : line 7213</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanAOManualControlAmplitude(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetPhysicalChanAOManualControlAmplitude(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanAOManualControlAmplitude(Pointer physicalChannel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AO_ManualControlAmplitude ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOManualControlAmplitude(const char[], float64*)</code><br>
	 * <i>native declaration : line 7213</i>
	 */
	public static native int dAQmxGetPhysicalChanAOManualControlAmplitude(byte physicalChannel[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AO_ManualControlFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOManualControlFreq(const char[], float64*)</code><br>
	 * <i>native declaration : line 7215</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanAOManualControlFreq(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetPhysicalChanAOManualControlFreq(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanAOManualControlFreq(Pointer physicalChannel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AO_ManualControlFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOManualControlFreq(const char[], float64*)</code><br>
	 * <i>native declaration : line 7215</i>
	 */
	public static native int dAQmxGetPhysicalChanAOManualControlFreq(byte physicalChannel[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_ChannelEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpChannelEnable(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7217</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOPowerAmpChannelEnable(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAOPowerAmpChannelEnable(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOPowerAmpChannelEnable(Pointer physicalChannel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_ChannelEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpChannelEnable(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7217</i>
	 */
	public static native int dAQmxGetAOPowerAmpChannelEnable(byte physicalChannel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOPowerAmpChannelEnable(const char[], bool32)</code><br>
	 * <i>native declaration : line 7218</i><br>
	 * @deprecated use the safer methods {@link #dAQmxSetAOPowerAmpChannelEnable(byte[], com.sun.jna.NativeLong)} and {@link #dAQmxSetAOPowerAmpChannelEnable(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxSetAOPowerAmpChannelEnable(Pointer physicalChannel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOPowerAmpChannelEnable(const char[], bool32)</code><br>
	 * <i>native declaration : line 7218</i>
	 */
	public static native int dAQmxSetAOPowerAmpChannelEnable(byte physicalChannel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOPowerAmpChannelEnable(const char[])</code><br>
	 * <i>native declaration : line 7219</i><br>
	 * @deprecated use the safer methods {@link #dAQmxResetAOPowerAmpChannelEnable(byte[])} and {@link #dAQmxResetAOPowerAmpChannelEnable(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	public static native int dAQmxResetAOPowerAmpChannelEnable(Pointer physicalChannel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOPowerAmpChannelEnable(const char[])</code><br>
	 * <i>native declaration : line 7219</i>
	 */
	public static native int dAQmxResetAOPowerAmpChannelEnable(byte physicalChannel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_ScalingCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpScalingCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 7221</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOPowerAmpScalingCoeff(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetAOPowerAmpScalingCoeff(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOPowerAmpScalingCoeff(Pointer physicalChannel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_ScalingCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpScalingCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 7221</i>
	 */
	public static native int dAQmxGetAOPowerAmpScalingCoeff(byte physicalChannel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_Overcurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpOvercurrent(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7223</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOPowerAmpOvercurrent(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetAOPowerAmpOvercurrent(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOPowerAmpOvercurrent(Pointer physicalChannel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_Overcurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpOvercurrent(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7223</i>
	 */
	public static native int dAQmxGetAOPowerAmpOvercurrent(byte physicalChannel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_Gain ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpGain(const char[], float64*)</code><br>
	 * <i>native declaration : line 7225</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOPowerAmpGain(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOPowerAmpGain(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOPowerAmpGain(Pointer physicalChannel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_Gain ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpGain(const char[], float64*)</code><br>
	 * <i>native declaration : line 7225</i>
	 */
	public static native int dAQmxGetAOPowerAmpGain(byte physicalChannel[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpOffset(const char[], float64*)</code><br>
	 * <i>native declaration : line 7227</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetAOPowerAmpOffset(byte[], java.nio.DoubleBuffer)} and {@link #dAQmxGetAOPowerAmpOffset(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetAOPowerAmpOffset(Pointer physicalChannel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpOffset(const char[], float64*)</code><br>
	 * <i>native declaration : line 7227</i>
	 */
	public static native int dAQmxGetAOPowerAmpOffset(byte physicalChannel[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DI_PortWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDIPortWidth(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7229</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanDIPortWidth(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPhysicalChanDIPortWidth(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanDIPortWidth(Pointer physicalChannel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DI_PortWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDIPortWidth(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7229</i>
	 */
	public static native int dAQmxGetPhysicalChanDIPortWidth(byte physicalChannel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DI_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDISampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7231</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanDISampClkSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPhysicalChanDISampClkSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanDISampClkSupported(Pointer physicalChannel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DI_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDISampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7231</i>
	 */
	public static native int dAQmxGetPhysicalChanDISampClkSupported(byte physicalChannel[], NativeLongByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDISampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7234</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanDISampModes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetPhysicalChanDISampModes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanDISampModes(Pointer physicalChannel, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDISampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7234</i>
	 */
	public static native int dAQmxGetPhysicalChanDISampModes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DI_ChangeDetectSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDIChangeDetectSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7236</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanDIChangeDetectSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPhysicalChanDIChangeDetectSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanDIChangeDetectSupported(Pointer physicalChannel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DI_ChangeDetectSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDIChangeDetectSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7236</i>
	 */
	public static native int dAQmxGetPhysicalChanDIChangeDetectSupported(byte physicalChannel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DO_PortWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDOPortWidth(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7238</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanDOPortWidth(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPhysicalChanDOPortWidth(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanDOPortWidth(Pointer physicalChannel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DO_PortWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDOPortWidth(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7238</i>
	 */
	public static native int dAQmxGetPhysicalChanDOPortWidth(byte physicalChannel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DO_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDOSampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7240</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanDOSampClkSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPhysicalChanDOSampClkSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanDOSampClkSupported(Pointer physicalChannel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DO_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDOSampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7240</i>
	 */
	public static native int dAQmxGetPhysicalChanDOSampClkSupported(byte physicalChannel[], NativeLongByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDOSampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7243</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanDOSampModes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetPhysicalChanDOSampModes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanDOSampModes(Pointer physicalChannel, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDOSampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7243</i>
	 */
	public static native int dAQmxGetPhysicalChanDOSampModes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses value set CIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanCISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7246</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanCISupportedMeasTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetPhysicalChanCISupportedMeasTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanCISupportedMeasTypes(Pointer physicalChannel, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set CIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanCISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7246</i>
	 */
	public static native int dAQmxGetPhysicalChanCISupportedMeasTypes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses value set COOutputType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanCOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7249</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanCOSupportedOutputTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetPhysicalChanCOSupportedOutputTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanCOSupportedOutputTypes(Pointer physicalChannel, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set COOutputType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanCOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7249</i>
	 */
	public static native int dAQmxGetPhysicalChanCOSupportedOutputTypes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_MfgID ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSMfgID(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7251</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanTEDSMfgID(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPhysicalChanTEDSMfgID(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanTEDSMfgID(Pointer physicalChannel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_MfgID ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSMfgID(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7251</i>
	 */
	public static native int dAQmxGetPhysicalChanTEDSMfgID(byte physicalChannel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_ModelNum ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSModelNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7253</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanTEDSModelNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPhysicalChanTEDSModelNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanTEDSModelNum(Pointer physicalChannel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_ModelNum ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSModelNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7253</i>
	 */
	public static native int dAQmxGetPhysicalChanTEDSModelNum(byte physicalChannel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_SerialNum ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSSerialNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7255</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanTEDSSerialNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPhysicalChanTEDSSerialNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanTEDSSerialNum(Pointer physicalChannel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_SerialNum ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSSerialNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7255</i>
	 */
	public static native int dAQmxGetPhysicalChanTEDSSerialNum(byte physicalChannel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_VersionNum ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSVersionNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7257</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanTEDSVersionNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPhysicalChanTEDSVersionNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanTEDSVersionNum(Pointer physicalChannel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_VersionNum ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSVersionNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7257</i>
	 */
	public static native int dAQmxGetPhysicalChanTEDSVersionNum(byte physicalChannel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_VersionLetter ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSVersionLetter(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7259</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanTEDSVersionLetter(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetPhysicalChanTEDSVersionLetter(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanTEDSVersionLetter(Pointer physicalChannel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_VersionLetter ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSVersionLetter(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7259</i>
	 */
	public static native int dAQmxGetPhysicalChanTEDSVersionLetter(byte physicalChannel[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_BitStream ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSBitStream(const char[], uInt8*, uInt32)</code><br>
	 * <i>native declaration : line 7261</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanTEDSBitStream(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #dAQmxGetPhysicalChanTEDSBitStream(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanTEDSBitStream(Pointer physicalChannel, Pointer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_BitStream ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSBitStream(const char[], uInt8*, uInt32)</code><br>
	 * <i>native declaration : line 7261</i>
	 */
	public static native int dAQmxGetPhysicalChanTEDSBitStream(byte physicalChannel[], ByteBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_TemplateIDs ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSTemplateIDs(const char[], uInt32*, uInt32)</code><br>
	 * <i>native declaration : line 7263</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPhysicalChanTEDSTemplateIDs(byte[], com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong)} and {@link #dAQmxGetPhysicalChanTEDSTemplateIDs(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPhysicalChanTEDSTemplateIDs(Pointer physicalChannel, NativeLongByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_TemplateIDs ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSTemplateIDs(const char[], uInt32*, uInt32)</code><br>
	 * <i>native declaration : line 7263</i>
	 */
	public static native int dAQmxGetPhysicalChanTEDSTemplateIDs(byte physicalChannel[], NativeLongByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_PersistedTask_Author ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedTaskAuthor(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7267</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPersistedTaskAuthor(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetPersistedTaskAuthor(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPersistedTaskAuthor(Pointer taskName, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_PersistedTask_Author ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedTaskAuthor(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7267</i>
	 */
	public static native int dAQmxGetPersistedTaskAuthor(byte taskName[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_PersistedTask_AllowInteractiveEditing ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedTaskAllowInteractiveEditing(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7269</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPersistedTaskAllowInteractiveEditing(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPersistedTaskAllowInteractiveEditing(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPersistedTaskAllowInteractiveEditing(Pointer taskName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PersistedTask_AllowInteractiveEditing ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedTaskAllowInteractiveEditing(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7269</i>
	 */
	public static native int dAQmxGetPersistedTaskAllowInteractiveEditing(byte taskName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PersistedTask_AllowInteractiveDeletion ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedTaskAllowInteractiveDeletion(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7271</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPersistedTaskAllowInteractiveDeletion(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPersistedTaskAllowInteractiveDeletion(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPersistedTaskAllowInteractiveDeletion(Pointer taskName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PersistedTask_AllowInteractiveDeletion ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedTaskAllowInteractiveDeletion(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7271</i>
	 */
	public static native int dAQmxGetPersistedTaskAllowInteractiveDeletion(byte taskName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PersistedChan_Author ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedChanAuthor(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7275</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPersistedChanAuthor(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetPersistedChanAuthor(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPersistedChanAuthor(Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_PersistedChan_Author ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedChanAuthor(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7275</i>
	 */
	public static native int dAQmxGetPersistedChanAuthor(byte channel[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_PersistedChan_AllowInteractiveEditing ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedChanAllowInteractiveEditing(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7277</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPersistedChanAllowInteractiveEditing(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPersistedChanAllowInteractiveEditing(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPersistedChanAllowInteractiveEditing(Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PersistedChan_AllowInteractiveEditing ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedChanAllowInteractiveEditing(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7277</i>
	 */
	public static native int dAQmxGetPersistedChanAllowInteractiveEditing(byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PersistedChan_AllowInteractiveDeletion ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedChanAllowInteractiveDeletion(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7279</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPersistedChanAllowInteractiveDeletion(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPersistedChanAllowInteractiveDeletion(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPersistedChanAllowInteractiveDeletion(Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PersistedChan_AllowInteractiveDeletion ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedChanAllowInteractiveDeletion(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7279</i>
	 */
	public static native int dAQmxGetPersistedChanAllowInteractiveDeletion(byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PersistedScale_Author ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedScaleAuthor(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7283</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPersistedScaleAuthor(byte[], java.lang.String, com.sun.jna.NativeLong)} and {@link #dAQmxGetPersistedScaleAuthor(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPersistedScaleAuthor(Pointer scaleName, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_PersistedScale_Author ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedScaleAuthor(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7283</i>
	 */
	public static native int dAQmxGetPersistedScaleAuthor(byte scaleName[], String data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_PersistedScale_AllowInteractiveEditing ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedScaleAllowInteractiveEditing(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7285</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPersistedScaleAllowInteractiveEditing(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPersistedScaleAllowInteractiveEditing(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPersistedScaleAllowInteractiveEditing(Pointer scaleName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PersistedScale_AllowInteractiveEditing ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedScaleAllowInteractiveEditing(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7285</i>
	 */
	public static native int dAQmxGetPersistedScaleAllowInteractiveEditing(byte scaleName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PersistedScale_AllowInteractiveDeletion ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedScaleAllowInteractiveDeletion(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7287</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetPersistedScaleAllowInteractiveDeletion(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #dAQmxGetPersistedScaleAllowInteractiveDeletion(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetPersistedScaleAllowInteractiveDeletion(Pointer scaleName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PersistedScale_AllowInteractiveDeletion ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedScaleAllowInteractiveDeletion(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7287</i>
	 */
	public static native int dAQmxGetPersistedScaleAllowInteractiveDeletion(byte scaleName[], NativeLongByReference data);
	/**
	 * Obsolete - always returns 0<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimingResponseMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7292</i><br>
	 * @deprecated use the safer methods {@link #dAQmxGetSampClkTimingResponseMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #dAQmxGetSampClkTimingResponseMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	public static native int dAQmxGetSampClkTimingResponseMode(Pointer taskHandle, IntByReference data);
	/**
	 * Obsolete - always returns 0<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimingResponseMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7292</i>
	 */
	public static native int dAQmxGetSampClkTimingResponseMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimingResponseMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7293</i>
	 */
	public static native int dAQmxSetSampClkTimingResponseMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkTimingResponseMode(TaskHandle)</code><br>
	 * <i>native declaration : line 7294</i>
	 */
	public static native int dAQmxResetSampClkTimingResponseMode(Pointer taskHandle);
}
